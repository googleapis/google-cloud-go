// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/shopping/merchant/issueresolution/v1beta/aggregateproductstatuses.proto

package issueresolutionpb

import (
	typepb "cloud.google.com/go/shopping/type/typepb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// How the issue affects the serving of the product.
type AggregateProductStatus_ItemLevelIssue_Severity int32

const (
	// Not specified.
	AggregateProductStatus_ItemLevelIssue_SEVERITY_UNSPECIFIED AggregateProductStatus_ItemLevelIssue_Severity = 0
	// This issue represents a warning and does not have a direct affect
	// on the product.
	AggregateProductStatus_ItemLevelIssue_NOT_IMPACTED AggregateProductStatus_ItemLevelIssue_Severity = 1
	// The product is demoted and most likely have limited performance
	// in search results
	AggregateProductStatus_ItemLevelIssue_DEMOTED AggregateProductStatus_ItemLevelIssue_Severity = 2
	// Issue disapproves the product.
	AggregateProductStatus_ItemLevelIssue_DISAPPROVED AggregateProductStatus_ItemLevelIssue_Severity = 3
)

// Enum value maps for AggregateProductStatus_ItemLevelIssue_Severity.
var (
	AggregateProductStatus_ItemLevelIssue_Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "NOT_IMPACTED",
		2: "DEMOTED",
		3: "DISAPPROVED",
	}
	AggregateProductStatus_ItemLevelIssue_Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"NOT_IMPACTED":         1,
		"DEMOTED":              2,
		"DISAPPROVED":          3,
	}
)

func (x AggregateProductStatus_ItemLevelIssue_Severity) Enum() *AggregateProductStatus_ItemLevelIssue_Severity {
	p := new(AggregateProductStatus_ItemLevelIssue_Severity)
	*p = x
	return p
}

func (x AggregateProductStatus_ItemLevelIssue_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregateProductStatus_ItemLevelIssue_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_enumTypes[0].Descriptor()
}

func (AggregateProductStatus_ItemLevelIssue_Severity) Type() protoreflect.EnumType {
	return &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_enumTypes[0]
}

func (x AggregateProductStatus_ItemLevelIssue_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregateProductStatus_ItemLevelIssue_Severity.Descriptor instead.
func (AggregateProductStatus_ItemLevelIssue_Severity) EnumDescriptor() ([]byte, []int) {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP(), []int{2, 1, 0}
}

// How the issue can be resolved.
type AggregateProductStatus_ItemLevelIssue_Resolution int32

const (
	// Not specified.
	AggregateProductStatus_ItemLevelIssue_RESOLUTION_UNSPECIFIED AggregateProductStatus_ItemLevelIssue_Resolution = 0
	// The issue can be resolved by the merchant.
	AggregateProductStatus_ItemLevelIssue_MERCHANT_ACTION AggregateProductStatus_ItemLevelIssue_Resolution = 1
	// The issue will be resolved auomatically.
	AggregateProductStatus_ItemLevelIssue_PENDING_PROCESSING AggregateProductStatus_ItemLevelIssue_Resolution = 2
)

// Enum value maps for AggregateProductStatus_ItemLevelIssue_Resolution.
var (
	AggregateProductStatus_ItemLevelIssue_Resolution_name = map[int32]string{
		0: "RESOLUTION_UNSPECIFIED",
		1: "MERCHANT_ACTION",
		2: "PENDING_PROCESSING",
	}
	AggregateProductStatus_ItemLevelIssue_Resolution_value = map[string]int32{
		"RESOLUTION_UNSPECIFIED": 0,
		"MERCHANT_ACTION":        1,
		"PENDING_PROCESSING":     2,
	}
)

func (x AggregateProductStatus_ItemLevelIssue_Resolution) Enum() *AggregateProductStatus_ItemLevelIssue_Resolution {
	p := new(AggregateProductStatus_ItemLevelIssue_Resolution)
	*p = x
	return p
}

func (x AggregateProductStatus_ItemLevelIssue_Resolution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregateProductStatus_ItemLevelIssue_Resolution) Descriptor() protoreflect.EnumDescriptor {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_enumTypes[1].Descriptor()
}

func (AggregateProductStatus_ItemLevelIssue_Resolution) Type() protoreflect.EnumType {
	return &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_enumTypes[1]
}

func (x AggregateProductStatus_ItemLevelIssue_Resolution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregateProductStatus_ItemLevelIssue_Resolution.Descriptor instead.
func (AggregateProductStatus_ItemLevelIssue_Resolution) EnumDescriptor() ([]byte, []int) {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP(), []int{2, 1, 1}
}

// Request message for the `ListAggregateProductStatuses` method.
type ListAggregateProductStatusesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The account to list aggregate product statuses for.
	// Format: `accounts/{account}`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional. The maximum number of aggregate product statuses to return. The
	// service may return fewer than this value. If unspecified, at most 25
	// aggregate product statuses are returned. The maximum value is 250; values
	// above 250 are coerced to 250.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. A page token, received from a previous
	// `ListAggregateProductStatuses` call. Provide this to retrieve the
	// subsequent page.
	//
	// When paginating, all other parameters provided to
	// `ListAggregateProductStatuses` must match the call that provided the page
	// token.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional. A filter expression that filters the aggregate product statuses.
	// Filtering is only supported by the `reporting_context` and `country` field.
	// For example: `reporting_context = "SHOPPING_ADS" AND country = "US"`.
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListAggregateProductStatusesRequest) Reset() {
	*x = ListAggregateProductStatusesRequest{}
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAggregateProductStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAggregateProductStatusesRequest) ProtoMessage() {}

func (x *ListAggregateProductStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAggregateProductStatusesRequest.ProtoReflect.Descriptor instead.
func (*ListAggregateProductStatusesRequest) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP(), []int{0}
}

func (x *ListAggregateProductStatusesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListAggregateProductStatusesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAggregateProductStatusesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAggregateProductStatusesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Response message for the `ListAggregateProductStatuses` method.
type ListAggregateProductStatusesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `AggregateProductStatuses` resources for the given account.
	AggregateProductStatuses []*AggregateProductStatus `protobuf:"bytes,1,rep,name=aggregate_product_statuses,json=aggregateProductStatuses,proto3" json:"aggregate_product_statuses,omitempty"`
	// A token, which can be sent as `pageToken` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAggregateProductStatusesResponse) Reset() {
	*x = ListAggregateProductStatusesResponse{}
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAggregateProductStatusesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAggregateProductStatusesResponse) ProtoMessage() {}

func (x *ListAggregateProductStatusesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAggregateProductStatusesResponse.ProtoReflect.Descriptor instead.
func (*ListAggregateProductStatusesResponse) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP(), []int{1}
}

func (x *ListAggregateProductStatusesResponse) GetAggregateProductStatuses() []*AggregateProductStatus {
	if x != nil {
		return x.AggregateProductStatuses
	}
	return nil
}

func (x *ListAggregateProductStatusesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Aggregate product statuses for a given reporting context and country.
type AggregateProductStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the `AggregateProductStatuses` resource.
	// Format:
	// `accounts/{account}/aggregateProductStatuses/{aggregateProductStatuses}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The reporting context of the aggregate product statuses.
	ReportingContext typepb.ReportingContext_ReportingContextEnum `protobuf:"varint,3,opt,name=reporting_context,json=reportingContext,proto3,enum=google.shopping.type.ReportingContext_ReportingContextEnum" json:"reporting_context,omitempty"`
	// The country of the aggregate product statuses. Represented as a
	// [CLDR territory
	// code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).
	Country string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	// Products statistics for the given reporting context and country.
	Stats *AggregateProductStatus_Stats `protobuf:"bytes,5,opt,name=stats,proto3" json:"stats,omitempty"`
	// The product issues that affect the given reporting context and country.
	ItemLevelIssues []*AggregateProductStatus_ItemLevelIssue `protobuf:"bytes,6,rep,name=item_level_issues,json=itemLevelIssues,proto3" json:"item_level_issues,omitempty"`
}

func (x *AggregateProductStatus) Reset() {
	*x = AggregateProductStatus{}
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateProductStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateProductStatus) ProtoMessage() {}

func (x *AggregateProductStatus) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateProductStatus.ProtoReflect.Descriptor instead.
func (*AggregateProductStatus) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP(), []int{2}
}

func (x *AggregateProductStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AggregateProductStatus) GetReportingContext() typepb.ReportingContext_ReportingContextEnum {
	if x != nil {
		return x.ReportingContext
	}
	return typepb.ReportingContext_ReportingContextEnum(0)
}

func (x *AggregateProductStatus) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AggregateProductStatus) GetStats() *AggregateProductStatus_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *AggregateProductStatus) GetItemLevelIssues() []*AggregateProductStatus_ItemLevelIssue {
	if x != nil {
		return x.ItemLevelIssues
	}
	return nil
}

// Products statistics.
type AggregateProductStatus_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of products that are active.
	ActiveCount int64 `protobuf:"varint,1,opt,name=active_count,json=activeCount,proto3" json:"active_count,omitempty"`
	// The number of products that are pending.
	PendingCount int64 `protobuf:"varint,2,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`
	// The number of products that are disapproved.
	DisapprovedCount int64 `protobuf:"varint,3,opt,name=disapproved_count,json=disapprovedCount,proto3" json:"disapproved_count,omitempty"`
	// The number of products that are expiring.
	ExpiringCount int64 `protobuf:"varint,4,opt,name=expiring_count,json=expiringCount,proto3" json:"expiring_count,omitempty"`
}

func (x *AggregateProductStatus_Stats) Reset() {
	*x = AggregateProductStatus_Stats{}
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateProductStatus_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateProductStatus_Stats) ProtoMessage() {}

func (x *AggregateProductStatus_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateProductStatus_Stats.ProtoReflect.Descriptor instead.
func (*AggregateProductStatus_Stats) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AggregateProductStatus_Stats) GetActiveCount() int64 {
	if x != nil {
		return x.ActiveCount
	}
	return 0
}

func (x *AggregateProductStatus_Stats) GetPendingCount() int64 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *AggregateProductStatus_Stats) GetDisapprovedCount() int64 {
	if x != nil {
		return x.DisapprovedCount
	}
	return 0
}

func (x *AggregateProductStatus_Stats) GetExpiringCount() int64 {
	if x != nil {
		return x.ExpiringCount
	}
	return 0
}

// The ItemLevelIssue of the product status.
type AggregateProductStatus_ItemLevelIssue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error code of the issue.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// How this issue affects serving of the offer.
	Severity AggregateProductStatus_ItemLevelIssue_Severity `protobuf:"varint,2,opt,name=severity,proto3,enum=google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus_ItemLevelIssue_Severity" json:"severity,omitempty"`
	// Whether the issue can be resolved by the merchant.
	Resolution AggregateProductStatus_ItemLevelIssue_Resolution `protobuf:"varint,3,opt,name=resolution,proto3,enum=google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus_ItemLevelIssue_Resolution" json:"resolution,omitempty"`
	// The attribute's name, if the issue is caused by a single attribute.
	Attribute string `protobuf:"bytes,4,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// A short issue description in English.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// A detailed issue description in English.
	Detail string `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`
	// The URL of a web page to help with resolving this issue.
	DocumentationUri string `protobuf:"bytes,8,opt,name=documentation_uri,json=documentationUri,proto3" json:"documentation_uri,omitempty"`
	// The number of products affected by this issue.
	ProductCount int64 `protobuf:"varint,9,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"`
}

func (x *AggregateProductStatus_ItemLevelIssue) Reset() {
	*x = AggregateProductStatus_ItemLevelIssue{}
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateProductStatus_ItemLevelIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateProductStatus_ItemLevelIssue) ProtoMessage() {}

func (x *AggregateProductStatus_ItemLevelIssue) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateProductStatus_ItemLevelIssue.ProtoReflect.Descriptor instead.
func (*AggregateProductStatus_ItemLevelIssue) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP(), []int{2, 1}
}

func (x *AggregateProductStatus_ItemLevelIssue) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AggregateProductStatus_ItemLevelIssue) GetSeverity() AggregateProductStatus_ItemLevelIssue_Severity {
	if x != nil {
		return x.Severity
	}
	return AggregateProductStatus_ItemLevelIssue_SEVERITY_UNSPECIFIED
}

func (x *AggregateProductStatus_ItemLevelIssue) GetResolution() AggregateProductStatus_ItemLevelIssue_Resolution {
	if x != nil {
		return x.Resolution
	}
	return AggregateProductStatus_ItemLevelIssue_RESOLUTION_UNSPECIFIED
}

func (x *AggregateProductStatus_ItemLevelIssue) GetAttribute() string {
	if x != nil {
		return x.Attribute
	}
	return ""
}

func (x *AggregateProductStatus_ItemLevelIssue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AggregateProductStatus_ItemLevelIssue) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *AggregateProductStatus_ItemLevelIssue) GetDocumentationUri() string {
	if x != nil {
		return x.DocumentationUri
	}
	return ""
}

func (x *AggregateProductStatus_ItemLevelIssue) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

var File_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto protoreflect.FileDescriptor

var file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDesc = []byte{
	0x0a, 0x4e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x68, 0x6f,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x39,
	0xe0, 0x41, 0x02, 0xfa, 0x41, 0x33, 0x12, 0x31, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x1a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x18, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf8, 0x0a,
	0x0a, 0x16, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x68, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x63, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x0f,
	0x69, 0x74, 0x65, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x1a,
	0xa3, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x69,
	0x73, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xfc, 0x04, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x7b, 0x0a, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x81, 0x01, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x41, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x49, 0x53, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x22, 0x55, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x52,
	0x45, 0x53, 0x4f, 0x4c, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x45, 0x52, 0x43, 0x48,
	0x41, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x3a, 0xb1, 0x01, 0xea, 0x41, 0xad, 0x01, 0x0a, 0x31, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x7d, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x7d, 0x2a, 0x18, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x32, 0x16, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x8f, 0x03, 0x0a, 0x1f, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa2, 0x02, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x54, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x55, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0xda, 0x41, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x12, 0x44, 0x2f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x1a, 0x47, 0xca, 0x41, 0x1a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0xd2, 0x41, 0x27, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0xd5, 0x02, 0x0a, 0x33, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x42, 0x1d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x63, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x3b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0xaa, 0x02, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0x42, 0x65, 0x74, 0x61, 0xca, 0x02, 0x2f, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x5c, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5c, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xea, 0x02, 0x33, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x3a,
	0x3a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x3a, 0x3a, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescOnce sync.Once
	file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescData = file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDesc
)

func file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescGZIP() []byte {
	file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescOnce.Do(func() {
		file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescData)
	})
	return file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDescData
}

var file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_goTypes = []any{
	(AggregateProductStatus_ItemLevelIssue_Severity)(0),   // 0: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue.Severity
	(AggregateProductStatus_ItemLevelIssue_Resolution)(0), // 1: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue.Resolution
	(*ListAggregateProductStatusesRequest)(nil),           // 2: google.shopping.merchant.issueresolution.v1beta.ListAggregateProductStatusesRequest
	(*ListAggregateProductStatusesResponse)(nil),          // 3: google.shopping.merchant.issueresolution.v1beta.ListAggregateProductStatusesResponse
	(*AggregateProductStatus)(nil),                        // 4: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus
	(*AggregateProductStatus_Stats)(nil),                  // 5: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.Stats
	(*AggregateProductStatus_ItemLevelIssue)(nil),         // 6: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue
	(typepb.ReportingContext_ReportingContextEnum)(0),     // 7: google.shopping.type.ReportingContext.ReportingContextEnum
}
var file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_depIdxs = []int32{
	4, // 0: google.shopping.merchant.issueresolution.v1beta.ListAggregateProductStatusesResponse.aggregate_product_statuses:type_name -> google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus
	7, // 1: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.reporting_context:type_name -> google.shopping.type.ReportingContext.ReportingContextEnum
	5, // 2: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.stats:type_name -> google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.Stats
	6, // 3: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.item_level_issues:type_name -> google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue
	0, // 4: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue.severity:type_name -> google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue.Severity
	1, // 5: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue.resolution:type_name -> google.shopping.merchant.issueresolution.v1beta.AggregateProductStatus.ItemLevelIssue.Resolution
	2, // 6: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatusesService.ListAggregateProductStatuses:input_type -> google.shopping.merchant.issueresolution.v1beta.ListAggregateProductStatusesRequest
	3, // 7: google.shopping.merchant.issueresolution.v1beta.AggregateProductStatusesService.ListAggregateProductStatuses:output_type -> google.shopping.merchant.issueresolution.v1beta.ListAggregateProductStatusesResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() {
	file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_init()
}
func file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_init() {
	if File_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_goTypes,
		DependencyIndexes: file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_depIdxs,
		EnumInfos:         file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_enumTypes,
		MessageInfos:      file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_msgTypes,
	}.Build()
	File_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto = out.File
	file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_rawDesc = nil
	file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_goTypes = nil
	file_google_shopping_merchant_issueresolution_v1beta_aggregateproductstatuses_proto_depIdxs = nil
}
