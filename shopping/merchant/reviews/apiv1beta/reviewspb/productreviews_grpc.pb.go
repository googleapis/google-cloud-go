// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.7
// source: google/shopping/merchant/reviews/v1beta/productreviews.proto

package reviewspb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ProductReviewsService_GetProductReview_FullMethodName    = "/google.shopping.merchant.reviews.v1beta.ProductReviewsService/GetProductReview"
	ProductReviewsService_ListProductReviews_FullMethodName  = "/google.shopping.merchant.reviews.v1beta.ProductReviewsService/ListProductReviews"
	ProductReviewsService_InsertProductReview_FullMethodName = "/google.shopping.merchant.reviews.v1beta.ProductReviewsService/InsertProductReview"
	ProductReviewsService_DeleteProductReview_FullMethodName = "/google.shopping.merchant.reviews.v1beta.ProductReviewsService/DeleteProductReview"
)

// ProductReviewsServiceClient is the client API for ProductReviewsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProductReviewsServiceClient interface {
	// Gets a product review.
	GetProductReview(ctx context.Context, in *GetProductReviewRequest, opts ...grpc.CallOption) (*ProductReview, error)
	// Lists product reviews.
	ListProductReviews(ctx context.Context, in *ListProductReviewsRequest, opts ...grpc.CallOption) (*ListProductReviewsResponse, error)
	// Inserts a product review.
	InsertProductReview(ctx context.Context, in *InsertProductReviewRequest, opts ...grpc.CallOption) (*ProductReview, error)
	// Deletes a product review.
	DeleteProductReview(ctx context.Context, in *DeleteProductReviewRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type productReviewsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProductReviewsServiceClient(cc grpc.ClientConnInterface) ProductReviewsServiceClient {
	return &productReviewsServiceClient{cc}
}

func (c *productReviewsServiceClient) GetProductReview(ctx context.Context, in *GetProductReviewRequest, opts ...grpc.CallOption) (*ProductReview, error) {
	out := new(ProductReview)
	err := c.cc.Invoke(ctx, ProductReviewsService_GetProductReview_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productReviewsServiceClient) ListProductReviews(ctx context.Context, in *ListProductReviewsRequest, opts ...grpc.CallOption) (*ListProductReviewsResponse, error) {
	out := new(ListProductReviewsResponse)
	err := c.cc.Invoke(ctx, ProductReviewsService_ListProductReviews_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productReviewsServiceClient) InsertProductReview(ctx context.Context, in *InsertProductReviewRequest, opts ...grpc.CallOption) (*ProductReview, error) {
	out := new(ProductReview)
	err := c.cc.Invoke(ctx, ProductReviewsService_InsertProductReview_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productReviewsServiceClient) DeleteProductReview(ctx context.Context, in *DeleteProductReviewRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, ProductReviewsService_DeleteProductReview_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductReviewsServiceServer is the server API for ProductReviewsService service.
// All implementations should embed UnimplementedProductReviewsServiceServer
// for forward compatibility
type ProductReviewsServiceServer interface {
	// Gets a product review.
	GetProductReview(context.Context, *GetProductReviewRequest) (*ProductReview, error)
	// Lists product reviews.
	ListProductReviews(context.Context, *ListProductReviewsRequest) (*ListProductReviewsResponse, error)
	// Inserts a product review.
	InsertProductReview(context.Context, *InsertProductReviewRequest) (*ProductReview, error)
	// Deletes a product review.
	DeleteProductReview(context.Context, *DeleteProductReviewRequest) (*emptypb.Empty, error)
}

// UnimplementedProductReviewsServiceServer should be embedded to have forward compatible implementations.
type UnimplementedProductReviewsServiceServer struct {
}

func (UnimplementedProductReviewsServiceServer) GetProductReview(context.Context, *GetProductReviewRequest) (*ProductReview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductReview not implemented")
}
func (UnimplementedProductReviewsServiceServer) ListProductReviews(context.Context, *ListProductReviewsRequest) (*ListProductReviewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProductReviews not implemented")
}
func (UnimplementedProductReviewsServiceServer) InsertProductReview(context.Context, *InsertProductReviewRequest) (*ProductReview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertProductReview not implemented")
}
func (UnimplementedProductReviewsServiceServer) DeleteProductReview(context.Context, *DeleteProductReviewRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductReview not implemented")
}

// UnsafeProductReviewsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProductReviewsServiceServer will
// result in compilation errors.
type UnsafeProductReviewsServiceServer interface {
	mustEmbedUnimplementedProductReviewsServiceServer()
}

func RegisterProductReviewsServiceServer(s grpc.ServiceRegistrar, srv ProductReviewsServiceServer) {
	s.RegisterService(&ProductReviewsService_ServiceDesc, srv)
}

func _ProductReviewsService_GetProductReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductReviewsServiceServer).GetProductReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProductReviewsService_GetProductReview_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductReviewsServiceServer).GetProductReview(ctx, req.(*GetProductReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductReviewsService_ListProductReviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProductReviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductReviewsServiceServer).ListProductReviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProductReviewsService_ListProductReviews_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductReviewsServiceServer).ListProductReviews(ctx, req.(*ListProductReviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductReviewsService_InsertProductReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertProductReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductReviewsServiceServer).InsertProductReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProductReviewsService_InsertProductReview_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductReviewsServiceServer).InsertProductReview(ctx, req.(*InsertProductReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductReviewsService_DeleteProductReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductReviewsServiceServer).DeleteProductReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProductReviewsService_DeleteProductReview_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductReviewsServiceServer).DeleteProductReview(ctx, req.(*DeleteProductReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProductReviewsService_ServiceDesc is the grpc.ServiceDesc for ProductReviewsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProductReviewsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.shopping.merchant.reviews.v1beta.ProductReviewsService",
	HandlerType: (*ProductReviewsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProductReview",
			Handler:    _ProductReviewsService_GetProductReview_Handler,
		},
		{
			MethodName: "ListProductReviews",
			Handler:    _ProductReviewsService_ListProductReviews_Handler,
		},
		{
			MethodName: "InsertProductReview",
			Handler:    _ProductReviewsService_InsertProductReview_Handler,
		},
		{
			MethodName: "DeleteProductReview",
			Handler:    _ProductReviewsService_DeleteProductReview_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/shopping/merchant/reviews/v1beta/productreviews.proto",
}
