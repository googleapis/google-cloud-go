// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.7
// source: google/shopping/merchant/quota/v1beta/quota.proto

package quotapb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	QuotaService_ListQuotaGroups_FullMethodName = "/google.shopping.merchant.quota.v1beta.QuotaService/ListQuotaGroups"
)

// QuotaServiceClient is the client API for QuotaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QuotaServiceClient interface {
	// Lists the daily call quota and usage per group for your Merchant
	// Center account.
	ListQuotaGroups(ctx context.Context, in *ListQuotaGroupsRequest, opts ...grpc.CallOption) (*ListQuotaGroupsResponse, error)
}

type quotaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQuotaServiceClient(cc grpc.ClientConnInterface) QuotaServiceClient {
	return &quotaServiceClient{cc}
}

func (c *quotaServiceClient) ListQuotaGroups(ctx context.Context, in *ListQuotaGroupsRequest, opts ...grpc.CallOption) (*ListQuotaGroupsResponse, error) {
	out := new(ListQuotaGroupsResponse)
	err := c.cc.Invoke(ctx, QuotaService_ListQuotaGroups_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuotaServiceServer is the server API for QuotaService service.
// All implementations should embed UnimplementedQuotaServiceServer
// for forward compatibility
type QuotaServiceServer interface {
	// Lists the daily call quota and usage per group for your Merchant
	// Center account.
	ListQuotaGroups(context.Context, *ListQuotaGroupsRequest) (*ListQuotaGroupsResponse, error)
}

// UnimplementedQuotaServiceServer should be embedded to have forward compatible implementations.
type UnimplementedQuotaServiceServer struct {
}

func (UnimplementedQuotaServiceServer) ListQuotaGroups(context.Context, *ListQuotaGroupsRequest) (*ListQuotaGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQuotaGroups not implemented")
}

// UnsafeQuotaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QuotaServiceServer will
// result in compilation errors.
type UnsafeQuotaServiceServer interface {
	mustEmbedUnimplementedQuotaServiceServer()
}

func RegisterQuotaServiceServer(s grpc.ServiceRegistrar, srv QuotaServiceServer) {
	s.RegisterService(&QuotaService_ServiceDesc, srv)
}

func _QuotaService_ListQuotaGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQuotaGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuotaServiceServer).ListQuotaGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QuotaService_ListQuotaGroups_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuotaServiceServer).ListQuotaGroups(ctx, req.(*ListQuotaGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QuotaService_ServiceDesc is the grpc.ServiceDesc for QuotaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QuotaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.shopping.merchant.quota.v1beta.QuotaService",
	HandlerType: (*QuotaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListQuotaGroups",
			Handler:    _QuotaService_ListQuotaGroups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/shopping/merchant/quota/v1beta/quota.proto",
}
