// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.7
// source: google/shopping/merchant/productstudio/v1alpha/textsuggestions.proto

package productstudiopb

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TextSuggestionsService_GenerateProductTextSuggestions_FullMethodName = "/google.shopping.merchant.productstudio.v1alpha.TextSuggestionsService/GenerateProductTextSuggestions"
)

// TextSuggestionsServiceClient is the client API for TextSuggestionsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TextSuggestionsServiceClient interface {
	// GenerateProductTextSuggestions generates a set of candidate text
	// completions (e.g., product titles, descriptions) based on provided product
	// information. This endpoint leverages GenAI models to create suggestions for
	// improving existing product text or generating new content.
	GenerateProductTextSuggestions(ctx context.Context, in *GenerateProductTextSuggestionsRequest, opts ...grpc.CallOption) (*GenerateProductTextSuggestionsResponse, error)
}

type textSuggestionsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTextSuggestionsServiceClient(cc grpc.ClientConnInterface) TextSuggestionsServiceClient {
	return &textSuggestionsServiceClient{cc}
}

func (c *textSuggestionsServiceClient) GenerateProductTextSuggestions(ctx context.Context, in *GenerateProductTextSuggestionsRequest, opts ...grpc.CallOption) (*GenerateProductTextSuggestionsResponse, error) {
	out := new(GenerateProductTextSuggestionsResponse)
	err := c.cc.Invoke(ctx, TextSuggestionsService_GenerateProductTextSuggestions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TextSuggestionsServiceServer is the server API for TextSuggestionsService service.
// All implementations should embed UnimplementedTextSuggestionsServiceServer
// for forward compatibility
type TextSuggestionsServiceServer interface {
	// GenerateProductTextSuggestions generates a set of candidate text
	// completions (e.g., product titles, descriptions) based on provided product
	// information. This endpoint leverages GenAI models to create suggestions for
	// improving existing product text or generating new content.
	GenerateProductTextSuggestions(context.Context, *GenerateProductTextSuggestionsRequest) (*GenerateProductTextSuggestionsResponse, error)
}

// UnimplementedTextSuggestionsServiceServer should be embedded to have forward compatible implementations.
type UnimplementedTextSuggestionsServiceServer struct {
}

func (UnimplementedTextSuggestionsServiceServer) GenerateProductTextSuggestions(context.Context, *GenerateProductTextSuggestionsRequest) (*GenerateProductTextSuggestionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateProductTextSuggestions not implemented")
}

// UnsafeTextSuggestionsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TextSuggestionsServiceServer will
// result in compilation errors.
type UnsafeTextSuggestionsServiceServer interface {
	mustEmbedUnimplementedTextSuggestionsServiceServer()
}

func RegisterTextSuggestionsServiceServer(s grpc.ServiceRegistrar, srv TextSuggestionsServiceServer) {
	s.RegisterService(&TextSuggestionsService_ServiceDesc, srv)
}

func _TextSuggestionsService_GenerateProductTextSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateProductTextSuggestionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextSuggestionsServiceServer).GenerateProductTextSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TextSuggestionsService_GenerateProductTextSuggestions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextSuggestionsServiceServer).GenerateProductTextSuggestions(ctx, req.(*GenerateProductTextSuggestionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TextSuggestionsService_ServiceDesc is the grpc.ServiceDesc for TextSuggestionsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TextSuggestionsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.shopping.merchant.productstudio.v1alpha.TextSuggestionsService",
	HandlerType: (*TextSuggestionsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateProductTextSuggestions",
			Handler:    _TextSuggestionsService_GenerateProductTextSuggestions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/shopping/merchant/productstudio/v1alpha/textsuggestions.proto",
}
