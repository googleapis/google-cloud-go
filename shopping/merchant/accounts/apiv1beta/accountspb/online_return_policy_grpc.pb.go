// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.7
// source: google/shopping/merchant/accounts/v1beta/online_return_policy.proto

package accountspb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	OnlineReturnPolicyService_GetOnlineReturnPolicy_FullMethodName    = "/google.shopping.merchant.accounts.v1beta.OnlineReturnPolicyService/GetOnlineReturnPolicy"
	OnlineReturnPolicyService_ListOnlineReturnPolicies_FullMethodName = "/google.shopping.merchant.accounts.v1beta.OnlineReturnPolicyService/ListOnlineReturnPolicies"
	OnlineReturnPolicyService_CreateOnlineReturnPolicy_FullMethodName = "/google.shopping.merchant.accounts.v1beta.OnlineReturnPolicyService/CreateOnlineReturnPolicy"
	OnlineReturnPolicyService_UpdateOnlineReturnPolicy_FullMethodName = "/google.shopping.merchant.accounts.v1beta.OnlineReturnPolicyService/UpdateOnlineReturnPolicy"
	OnlineReturnPolicyService_DeleteOnlineReturnPolicy_FullMethodName = "/google.shopping.merchant.accounts.v1beta.OnlineReturnPolicyService/DeleteOnlineReturnPolicy"
)

// OnlineReturnPolicyServiceClient is the client API for OnlineReturnPolicyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OnlineReturnPolicyServiceClient interface {
	// Gets an existing return policy for a given merchant.
	GetOnlineReturnPolicy(ctx context.Context, in *GetOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*OnlineReturnPolicy, error)
	// Lists all existing return policies for a given merchant.
	ListOnlineReturnPolicies(ctx context.Context, in *ListOnlineReturnPoliciesRequest, opts ...grpc.CallOption) (*ListOnlineReturnPoliciesResponse, error)
	// Creates a new return policy for a given merchant.
	CreateOnlineReturnPolicy(ctx context.Context, in *CreateOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*OnlineReturnPolicy, error)
	// Updates an existing return policy for a given merchant.
	UpdateOnlineReturnPolicy(ctx context.Context, in *UpdateOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*OnlineReturnPolicy, error)
	// Deletes an existing return policy for a given merchant.
	DeleteOnlineReturnPolicy(ctx context.Context, in *DeleteOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type onlineReturnPolicyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOnlineReturnPolicyServiceClient(cc grpc.ClientConnInterface) OnlineReturnPolicyServiceClient {
	return &onlineReturnPolicyServiceClient{cc}
}

func (c *onlineReturnPolicyServiceClient) GetOnlineReturnPolicy(ctx context.Context, in *GetOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*OnlineReturnPolicy, error) {
	out := new(OnlineReturnPolicy)
	err := c.cc.Invoke(ctx, OnlineReturnPolicyService_GetOnlineReturnPolicy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onlineReturnPolicyServiceClient) ListOnlineReturnPolicies(ctx context.Context, in *ListOnlineReturnPoliciesRequest, opts ...grpc.CallOption) (*ListOnlineReturnPoliciesResponse, error) {
	out := new(ListOnlineReturnPoliciesResponse)
	err := c.cc.Invoke(ctx, OnlineReturnPolicyService_ListOnlineReturnPolicies_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onlineReturnPolicyServiceClient) CreateOnlineReturnPolicy(ctx context.Context, in *CreateOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*OnlineReturnPolicy, error) {
	out := new(OnlineReturnPolicy)
	err := c.cc.Invoke(ctx, OnlineReturnPolicyService_CreateOnlineReturnPolicy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onlineReturnPolicyServiceClient) UpdateOnlineReturnPolicy(ctx context.Context, in *UpdateOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*OnlineReturnPolicy, error) {
	out := new(OnlineReturnPolicy)
	err := c.cc.Invoke(ctx, OnlineReturnPolicyService_UpdateOnlineReturnPolicy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onlineReturnPolicyServiceClient) DeleteOnlineReturnPolicy(ctx context.Context, in *DeleteOnlineReturnPolicyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, OnlineReturnPolicyService_DeleteOnlineReturnPolicy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnlineReturnPolicyServiceServer is the server API for OnlineReturnPolicyService service.
// All implementations should embed UnimplementedOnlineReturnPolicyServiceServer
// for forward compatibility
type OnlineReturnPolicyServiceServer interface {
	// Gets an existing return policy for a given merchant.
	GetOnlineReturnPolicy(context.Context, *GetOnlineReturnPolicyRequest) (*OnlineReturnPolicy, error)
	// Lists all existing return policies for a given merchant.
	ListOnlineReturnPolicies(context.Context, *ListOnlineReturnPoliciesRequest) (*ListOnlineReturnPoliciesResponse, error)
	// Creates a new return policy for a given merchant.
	CreateOnlineReturnPolicy(context.Context, *CreateOnlineReturnPolicyRequest) (*OnlineReturnPolicy, error)
	// Updates an existing return policy for a given merchant.
	UpdateOnlineReturnPolicy(context.Context, *UpdateOnlineReturnPolicyRequest) (*OnlineReturnPolicy, error)
	// Deletes an existing return policy for a given merchant.
	DeleteOnlineReturnPolicy(context.Context, *DeleteOnlineReturnPolicyRequest) (*emptypb.Empty, error)
}

// UnimplementedOnlineReturnPolicyServiceServer should be embedded to have forward compatible implementations.
type UnimplementedOnlineReturnPolicyServiceServer struct {
}

func (UnimplementedOnlineReturnPolicyServiceServer) GetOnlineReturnPolicy(context.Context, *GetOnlineReturnPolicyRequest) (*OnlineReturnPolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineReturnPolicy not implemented")
}
func (UnimplementedOnlineReturnPolicyServiceServer) ListOnlineReturnPolicies(context.Context, *ListOnlineReturnPoliciesRequest) (*ListOnlineReturnPoliciesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOnlineReturnPolicies not implemented")
}
func (UnimplementedOnlineReturnPolicyServiceServer) CreateOnlineReturnPolicy(context.Context, *CreateOnlineReturnPolicyRequest) (*OnlineReturnPolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOnlineReturnPolicy not implemented")
}
func (UnimplementedOnlineReturnPolicyServiceServer) UpdateOnlineReturnPolicy(context.Context, *UpdateOnlineReturnPolicyRequest) (*OnlineReturnPolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOnlineReturnPolicy not implemented")
}
func (UnimplementedOnlineReturnPolicyServiceServer) DeleteOnlineReturnPolicy(context.Context, *DeleteOnlineReturnPolicyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOnlineReturnPolicy not implemented")
}

// UnsafeOnlineReturnPolicyServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OnlineReturnPolicyServiceServer will
// result in compilation errors.
type UnsafeOnlineReturnPolicyServiceServer interface {
	mustEmbedUnimplementedOnlineReturnPolicyServiceServer()
}

func RegisterOnlineReturnPolicyServiceServer(s grpc.ServiceRegistrar, srv OnlineReturnPolicyServiceServer) {
	s.RegisterService(&OnlineReturnPolicyService_ServiceDesc, srv)
}

func _OnlineReturnPolicyService_GetOnlineReturnPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineReturnPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineReturnPolicyServiceServer).GetOnlineReturnPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineReturnPolicyService_GetOnlineReturnPolicy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineReturnPolicyServiceServer).GetOnlineReturnPolicy(ctx, req.(*GetOnlineReturnPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnlineReturnPolicyService_ListOnlineReturnPolicies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOnlineReturnPoliciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineReturnPolicyServiceServer).ListOnlineReturnPolicies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineReturnPolicyService_ListOnlineReturnPolicies_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineReturnPolicyServiceServer).ListOnlineReturnPolicies(ctx, req.(*ListOnlineReturnPoliciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnlineReturnPolicyService_CreateOnlineReturnPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOnlineReturnPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineReturnPolicyServiceServer).CreateOnlineReturnPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineReturnPolicyService_CreateOnlineReturnPolicy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineReturnPolicyServiceServer).CreateOnlineReturnPolicy(ctx, req.(*CreateOnlineReturnPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnlineReturnPolicyService_UpdateOnlineReturnPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOnlineReturnPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineReturnPolicyServiceServer).UpdateOnlineReturnPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineReturnPolicyService_UpdateOnlineReturnPolicy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineReturnPolicyServiceServer).UpdateOnlineReturnPolicy(ctx, req.(*UpdateOnlineReturnPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnlineReturnPolicyService_DeleteOnlineReturnPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOnlineReturnPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineReturnPolicyServiceServer).DeleteOnlineReturnPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OnlineReturnPolicyService_DeleteOnlineReturnPolicy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineReturnPolicyServiceServer).DeleteOnlineReturnPolicy(ctx, req.(*DeleteOnlineReturnPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OnlineReturnPolicyService_ServiceDesc is the grpc.ServiceDesc for OnlineReturnPolicyService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OnlineReturnPolicyService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.shopping.merchant.accounts.v1beta.OnlineReturnPolicyService",
	HandlerType: (*OnlineReturnPolicyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOnlineReturnPolicy",
			Handler:    _OnlineReturnPolicyService_GetOnlineReturnPolicy_Handler,
		},
		{
			MethodName: "ListOnlineReturnPolicies",
			Handler:    _OnlineReturnPolicyService_ListOnlineReturnPolicies_Handler,
		},
		{
			MethodName: "CreateOnlineReturnPolicy",
			Handler:    _OnlineReturnPolicyService_CreateOnlineReturnPolicy_Handler,
		},
		{
			MethodName: "UpdateOnlineReturnPolicy",
			Handler:    _OnlineReturnPolicyService_UpdateOnlineReturnPolicy_Handler,
		},
		{
			MethodName: "DeleteOnlineReturnPolicy",
			Handler:    _OnlineReturnPolicyService_DeleteOnlineReturnPolicy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/shopping/merchant/accounts/v1beta/online_return_policy.proto",
}
