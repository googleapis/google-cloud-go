// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/shopping/merchant/accounts/v1/checkoutsettings.proto

package accountspb

import (
	typepb "cloud.google.com/go/shopping/type/typepb"
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum indicating the enrollment state of merchant in `Checkout`
// program.
type CheckoutSettings_CheckoutEnrollmentState int32

const (
	// Default enrollment state when enrollment state is not specified.
	CheckoutSettings_CHECKOUT_ENROLLMENT_STATE_UNSPECIFIED CheckoutSettings_CheckoutEnrollmentState = 0
	// Merchant has not enrolled into the program.
	CheckoutSettings_INACTIVE CheckoutSettings_CheckoutEnrollmentState = 1
	// Merchant has enrolled into the program by providing either an
	// account level URL or checkout URLs as part of their feed.
	CheckoutSettings_ENROLLED CheckoutSettings_CheckoutEnrollmentState = 2
	// Merchant has previously enrolled but opted out of the program.
	CheckoutSettings_OPTED_OUT CheckoutSettings_CheckoutEnrollmentState = 3
)

// Enum value maps for CheckoutSettings_CheckoutEnrollmentState.
var (
	CheckoutSettings_CheckoutEnrollmentState_name = map[int32]string{
		0: "CHECKOUT_ENROLLMENT_STATE_UNSPECIFIED",
		1: "INACTIVE",
		2: "ENROLLED",
		3: "OPTED_OUT",
	}
	CheckoutSettings_CheckoutEnrollmentState_value = map[string]int32{
		"CHECKOUT_ENROLLMENT_STATE_UNSPECIFIED": 0,
		"INACTIVE":                              1,
		"ENROLLED":                              2,
		"OPTED_OUT":                             3,
	}
)

func (x CheckoutSettings_CheckoutEnrollmentState) Enum() *CheckoutSettings_CheckoutEnrollmentState {
	p := new(CheckoutSettings_CheckoutEnrollmentState)
	*p = x
	return p
}

func (x CheckoutSettings_CheckoutEnrollmentState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckoutSettings_CheckoutEnrollmentState) Descriptor() protoreflect.EnumDescriptor {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_enumTypes[0].Descriptor()
}

func (CheckoutSettings_CheckoutEnrollmentState) Type() protoreflect.EnumType {
	return &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_enumTypes[0]
}

func (x CheckoutSettings_CheckoutEnrollmentState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckoutSettings_CheckoutEnrollmentState.Descriptor instead.
func (CheckoutSettings_CheckoutEnrollmentState) EnumDescriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{4, 0}
}

// Enum indicating the review state of merchant in `Checkout`
// program.
type CheckoutSettings_CheckoutReviewState int32

const (
	// Default review state when review state is not specified.
	CheckoutSettings_CHECKOUT_REVIEW_STATE_UNSPECIFIED CheckoutSettings_CheckoutReviewState = 0
	// Merchant provided URLs are being reviewed for data quality issues.
	CheckoutSettings_IN_REVIEW CheckoutSettings_CheckoutReviewState = 1
	// Merchant account has been approved. Indicates the data quality checks
	// have passed.
	CheckoutSettings_APPROVED CheckoutSettings_CheckoutReviewState = 2
	// Merchant account has been disapproved due to data quality issues.
	CheckoutSettings_DISAPPROVED CheckoutSettings_CheckoutReviewState = 3
)

// Enum value maps for CheckoutSettings_CheckoutReviewState.
var (
	CheckoutSettings_CheckoutReviewState_name = map[int32]string{
		0: "CHECKOUT_REVIEW_STATE_UNSPECIFIED",
		1: "IN_REVIEW",
		2: "APPROVED",
		3: "DISAPPROVED",
	}
	CheckoutSettings_CheckoutReviewState_value = map[string]int32{
		"CHECKOUT_REVIEW_STATE_UNSPECIFIED": 0,
		"IN_REVIEW":                         1,
		"APPROVED":                          2,
		"DISAPPROVED":                       3,
	}
)

func (x CheckoutSettings_CheckoutReviewState) Enum() *CheckoutSettings_CheckoutReviewState {
	p := new(CheckoutSettings_CheckoutReviewState)
	*p = x
	return p
}

func (x CheckoutSettings_CheckoutReviewState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckoutSettings_CheckoutReviewState) Descriptor() protoreflect.EnumDescriptor {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_enumTypes[1].Descriptor()
}

func (CheckoutSettings_CheckoutReviewState) Type() protoreflect.EnumType {
	return &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_enumTypes[1]
}

func (x CheckoutSettings_CheckoutReviewState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckoutSettings_CheckoutReviewState.Descriptor instead.
func (CheckoutSettings_CheckoutReviewState) EnumDescriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{4, 1}
}

// Request message for `GetCheckoutSettings` method.
type GetCheckoutSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The name/identifier of the merchant account.
	// Format: `accounts/{account}/programs/{program}/checkoutSettings`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetCheckoutSettingsRequest) Reset() {
	*x = GetCheckoutSettingsRequest{}
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCheckoutSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckoutSettingsRequest) ProtoMessage() {}

func (x *GetCheckoutSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckoutSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetCheckoutSettingsRequest) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{0}
}

func (x *GetCheckoutSettingsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request message for the `CreateCheckoutSettings` method.
type CreateCheckoutSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The merchant account for which the `CheckoutSettings` will be
	// created.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The `CheckoutSettings` object to create.
	CheckoutSettings *CheckoutSettings `protobuf:"bytes,2,opt,name=checkout_settings,json=checkoutSettings,proto3" json:"checkout_settings,omitempty"`
}

func (x *CreateCheckoutSettingsRequest) Reset() {
	*x = CreateCheckoutSettingsRequest{}
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCheckoutSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckoutSettingsRequest) ProtoMessage() {}

func (x *CreateCheckoutSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckoutSettingsRequest.ProtoReflect.Descriptor instead.
func (*CreateCheckoutSettingsRequest) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCheckoutSettingsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateCheckoutSettingsRequest) GetCheckoutSettings() *CheckoutSettings {
	if x != nil {
		return x.CheckoutSettings
	}
	return nil
}

// Request message for the `UpdateCheckoutSettings` method.
type UpdateCheckoutSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The updated version of the `CheckoutSettings`.
	// The `name` field is used to identify the `CheckoutSettings`.
	// Format: `accounts/{account}/programs/{program}/checkoutSettings`
	CheckoutSettings *CheckoutSettings `protobuf:"bytes,1,opt,name=checkout_settings,json=checkoutSettings,proto3" json:"checkout_settings,omitempty"`
	// Required. List of fields being updated.
	// The following fields are supported (in both `snake_case` and
	// `lowerCamelCase`):
	//
	// - `eligible_destinations`
	// - `uri_settings`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateCheckoutSettingsRequest) Reset() {
	*x = UpdateCheckoutSettingsRequest{}
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCheckoutSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckoutSettingsRequest) ProtoMessage() {}

func (x *UpdateCheckoutSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckoutSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckoutSettingsRequest) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCheckoutSettingsRequest) GetCheckoutSettings() *CheckoutSettings {
	if x != nil {
		return x.CheckoutSettings
	}
	return nil
}

func (x *UpdateCheckoutSettingsRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// Request message for the `DeleteCheckoutSettings` method.
type DeleteCheckoutSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The name/identifier of the merchant account.
	// Format: `accounts/{account}/programs/{program}/checkoutSettings`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteCheckoutSettingsRequest) Reset() {
	*x = DeleteCheckoutSettingsRequest{}
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCheckoutSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCheckoutSettingsRequest) ProtoMessage() {}

func (x *DeleteCheckoutSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCheckoutSettingsRequest.ProtoReflect.Descriptor instead.
func (*DeleteCheckoutSettingsRequest) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCheckoutSettingsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// [CheckoutSettings](https://support.google.com/merchants/answer/13945960) for
// a specific merchant.
type CheckoutSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The resource name of the program configuration settings.
	// Format: `accounts/{account}/programs/{program}/checkoutSettings`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// URI settings for cart or checkout URL.
	UriSettings *UriSettings `protobuf:"bytes,2,opt,name=uri_settings,json=uriSettings,proto3,oneof" json:"uri_settings,omitempty"`
	// Optional. The destinations (also known as [Marketing
	// methods](https://support.google.com/merchants/answer/15130232)) to which
	// the checkout program applies, valid destination values are `SHOPPING_ADS`,
	// `FREE_LISTINGS`
	EligibleDestinations []typepb.Destination_DestinationEnum `protobuf:"varint,8,rep,packed,name=eligible_destinations,json=eligibleDestinations,proto3,enum=google.shopping.type.Destination_DestinationEnum" json:"eligible_destinations,omitempty"`
	// Output only. Reflects the merchant enrollment state in `Checkout` program.
	EnrollmentState *CheckoutSettings_CheckoutEnrollmentState `protobuf:"varint,3,opt,name=enrollment_state,json=enrollmentState,proto3,enum=google.shopping.merchant.accounts.v1.CheckoutSettings_CheckoutEnrollmentState,oneof" json:"enrollment_state,omitempty"`
	// Output only. Reflects the merchant review state in `Checkout` program.
	// This is set based on the data quality reviews of the URL provided by
	// the merchant.
	// A merchant with enrollment state
	// as `ENROLLED` can be in the following review states: `IN_REVIEW`,
	// `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
	// `ENROLLED` before a review can begin for the merchant.For more details,
	// check the help center doc.
	ReviewState *CheckoutSettings_CheckoutReviewState `protobuf:"varint,4,opt,name=review_state,json=reviewState,proto3,enum=google.shopping.merchant.accounts.v1.CheckoutSettings_CheckoutReviewState,oneof" json:"review_state,omitempty"`
	// Output only. The effective value of `uri_settings` for a given merchant. If
	// account level settings are present then this value will be a copy of url
	// settings. Otherwise, it will have the value of the parent account (for only
	// marketplace sellers).
	EffectiveUriSettings *UriSettings `protobuf:"bytes,5,opt,name=effective_uri_settings,json=effectiveUriSettings,proto3" json:"effective_uri_settings,omitempty"`
	// Output only. The effective value of enrollment_state for a given merchant
	// ID. If account level settings are present then this value will be a copy of
	// the account level settings. Otherwise, it will have the value of the parent
	// account (for only marketplace sellers).
	EffectiveEnrollmentState *CheckoutSettings_CheckoutEnrollmentState `protobuf:"varint,6,opt,name=effective_enrollment_state,json=effectiveEnrollmentState,proto3,enum=google.shopping.merchant.accounts.v1.CheckoutSettings_CheckoutEnrollmentState,oneof" json:"effective_enrollment_state,omitempty"`
	// Output only. The effective value of `review_state` for a given merchant ID.
	// If account level settings are present then this value will be a copy of the
	// account level settings. Otherwise, it will have the value of the parent
	// account (for only marketplace sellers).
	EffectiveReviewState *CheckoutSettings_CheckoutReviewState `protobuf:"varint,7,opt,name=effective_review_state,json=effectiveReviewState,proto3,enum=google.shopping.merchant.accounts.v1.CheckoutSettings_CheckoutReviewState,oneof" json:"effective_review_state,omitempty"`
}

func (x *CheckoutSettings) Reset() {
	*x = CheckoutSettings{}
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckoutSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutSettings) ProtoMessage() {}

func (x *CheckoutSettings) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutSettings.ProtoReflect.Descriptor instead.
func (*CheckoutSettings) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{4}
}

func (x *CheckoutSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckoutSettings) GetUriSettings() *UriSettings {
	if x != nil {
		return x.UriSettings
	}
	return nil
}

func (x *CheckoutSettings) GetEligibleDestinations() []typepb.Destination_DestinationEnum {
	if x != nil {
		return x.EligibleDestinations
	}
	return nil
}

func (x *CheckoutSettings) GetEnrollmentState() CheckoutSettings_CheckoutEnrollmentState {
	if x != nil && x.EnrollmentState != nil {
		return *x.EnrollmentState
	}
	return CheckoutSettings_CHECKOUT_ENROLLMENT_STATE_UNSPECIFIED
}

func (x *CheckoutSettings) GetReviewState() CheckoutSettings_CheckoutReviewState {
	if x != nil && x.ReviewState != nil {
		return *x.ReviewState
	}
	return CheckoutSettings_CHECKOUT_REVIEW_STATE_UNSPECIFIED
}

func (x *CheckoutSettings) GetEffectiveUriSettings() *UriSettings {
	if x != nil {
		return x.EffectiveUriSettings
	}
	return nil
}

func (x *CheckoutSettings) GetEffectiveEnrollmentState() CheckoutSettings_CheckoutEnrollmentState {
	if x != nil && x.EffectiveEnrollmentState != nil {
		return *x.EffectiveEnrollmentState
	}
	return CheckoutSettings_CHECKOUT_ENROLLMENT_STATE_UNSPECIFIED
}

func (x *CheckoutSettings) GetEffectiveReviewState() CheckoutSettings_CheckoutReviewState {
	if x != nil && x.EffectiveReviewState != nil {
		return *x.EffectiveReviewState
	}
	return CheckoutSettings_CHECKOUT_REVIEW_STATE_UNSPECIFIED
}

// URL settings for cart or checkout URL.
type UriSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifications related to the `Checkout` URL. The `UriTemplate` is
	// of the form `https://www.mystore.com/checkout?item_id={id}`
	// where `{id}` will be automatically replaced with [offer_id]
	// (https://developers.google.com/shopping-content/reference/rest/v2.1/products#Product.FIELDS.offer_id)
	// attribute from the merchant account
	//
	// Types that are assignable to UriTemplate:
	//
	//	*UriSettings_CheckoutUriTemplate
	//	*UriSettings_CartUriTemplate
	UriTemplate isUriSettings_UriTemplate `protobuf_oneof:"uri_template"`
}

func (x *UriSettings) Reset() {
	*x = UriSettings{}
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UriSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UriSettings) ProtoMessage() {}

func (x *UriSettings) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UriSettings.ProtoReflect.Descriptor instead.
func (*UriSettings) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP(), []int{5}
}

func (m *UriSettings) GetUriTemplate() isUriSettings_UriTemplate {
	if m != nil {
		return m.UriTemplate
	}
	return nil
}

func (x *UriSettings) GetCheckoutUriTemplate() string {
	if x, ok := x.GetUriTemplate().(*UriSettings_CheckoutUriTemplate); ok {
		return x.CheckoutUriTemplate
	}
	return ""
}

func (x *UriSettings) GetCartUriTemplate() string {
	if x, ok := x.GetUriTemplate().(*UriSettings_CartUriTemplate); ok {
		return x.CartUriTemplate
	}
	return ""
}

type isUriSettings_UriTemplate interface {
	isUriSettings_UriTemplate()
}

type UriSettings_CheckoutUriTemplate struct {
	// Checkout URL template. When the placeholders are expanded will redirect
	// the buyer to the merchant checkout page with the item in the cart. For
	// more details, check the [help center
	// doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-level-url-formatting%2Caccount-level-url-formatting)
	CheckoutUriTemplate string `protobuf:"bytes,1,opt,name=checkout_uri_template,json=checkoutUriTemplate,proto3,oneof"`
}

type UriSettings_CartUriTemplate struct {
	// Cart URL template. When the placeholders are expanded will redirect the
	// buyer to the cart page on the merchant website with the selected
	// item in cart. For more details, check the [help center
	// doc](https://support.google.com/merchants/answer/13945960#method1&zippy=%2Cproduct-level-url-formatting%2Caccount-level-url-formatting)
	CartUriTemplate string `protobuf:"bytes,2,opt,name=cart_uri_template,json=cartUriTemplate,proto3,oneof"`
}

func (*UriSettings_CheckoutUriTemplate) isUriSettings_UriTemplate() {}

func (*UriSettings_CartUriTemplate) isUriSettings_UriTemplate() {}

var File_google_shopping_merchant_accounts_v1_checkoutsettings_proto protoreflect.FileDescriptor

var file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x33, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2d, 0x0a, 0x2b, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd6,
	0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x33, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2d, 0x12, 0x2b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x68, 0x0a,
	0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x11, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x68, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x33, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2d, 0x0a, 0x2b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xdc, 0x0a, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a,
	0x0c, 0x75, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x72, 0x69, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x72, 0x69, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x6b, 0x0a, 0x15, 0x65, 0x6c, 0x69, 0x67,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x14, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x01, 0x52, 0x0f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x77, 0x0a, 0x0c, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x48, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x16, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x72, 0x69, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x14, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x72, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x1a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x03, 0x52, 0x18,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x8a, 0x01, 0x0a, 0x16,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x04, 0x52,
	0x14, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x22, 0x6f, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x4f, 0x55, 0x54, 0x5f,
	0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50,
	0x54, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x22, 0x6a, 0x0a, 0x13, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x21, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x4f, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x56,
	0x49, 0x45, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x5f, 0x52, 0x45,
	0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x53, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x45, 0x44, 0x10, 0x03, 0x3a, 0x85, 0x01, 0xea, 0x41, 0x81, 0x01, 0x0a, 0x2b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x36, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x2f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x7d,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x32, 0x10, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x81,
	0x01, 0x0a, 0x0b, 0x55, 0x72, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x69, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x74, 0x55, 0x72, 0x69, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x75, 0x72, 0x69, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x32, 0xb0, 0x08, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xda,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x49, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12,
	0x3a, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x3d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x2a, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x7d, 0x12, 0x89, 0x02, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x72, 0xda, 0x41, 0x18, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x51, 0x3a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x3c, 0x2f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x9f, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x87, 0x01, 0xda, 0x41, 0x1d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x61, 0x3a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x32, 0x4c, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x2a, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x7d, 0x12, 0xc0, 0x01, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x49, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c,
	0x2a, 0x3a, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x2a, 0x2f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x2a, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x7d, 0x1a, 0x47, 0xca, 0x41,
	0x1a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0xd2, 0x41, 0x27, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x88, 0x02, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x42, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x70, 0x62, 0x3b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x70, 0x62, 0xaa, 0x02, 0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x24, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x28, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a,
	0x53, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x3a, 0x3a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescOnce sync.Once
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescData = file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDesc
)

func file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescGZIP() []byte {
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescOnce.Do(func() {
		file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescData)
	})
	return file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDescData
}

var file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_goTypes = []any{
	(CheckoutSettings_CheckoutEnrollmentState)(0), // 0: google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState
	(CheckoutSettings_CheckoutReviewState)(0),     // 1: google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState
	(*GetCheckoutSettingsRequest)(nil),            // 2: google.shopping.merchant.accounts.v1.GetCheckoutSettingsRequest
	(*CreateCheckoutSettingsRequest)(nil),         // 3: google.shopping.merchant.accounts.v1.CreateCheckoutSettingsRequest
	(*UpdateCheckoutSettingsRequest)(nil),         // 4: google.shopping.merchant.accounts.v1.UpdateCheckoutSettingsRequest
	(*DeleteCheckoutSettingsRequest)(nil),         // 5: google.shopping.merchant.accounts.v1.DeleteCheckoutSettingsRequest
	(*CheckoutSettings)(nil),                      // 6: google.shopping.merchant.accounts.v1.CheckoutSettings
	(*UriSettings)(nil),                           // 7: google.shopping.merchant.accounts.v1.UriSettings
	(*fieldmaskpb.FieldMask)(nil),                 // 8: google.protobuf.FieldMask
	(typepb.Destination_DestinationEnum)(0),       // 9: google.shopping.type.Destination.DestinationEnum
	(*emptypb.Empty)(nil),                         // 10: google.protobuf.Empty
}
var file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_depIdxs = []int32{
	6,  // 0: google.shopping.merchant.accounts.v1.CreateCheckoutSettingsRequest.checkout_settings:type_name -> google.shopping.merchant.accounts.v1.CheckoutSettings
	6,  // 1: google.shopping.merchant.accounts.v1.UpdateCheckoutSettingsRequest.checkout_settings:type_name -> google.shopping.merchant.accounts.v1.CheckoutSettings
	8,  // 2: google.shopping.merchant.accounts.v1.UpdateCheckoutSettingsRequest.update_mask:type_name -> google.protobuf.FieldMask
	7,  // 3: google.shopping.merchant.accounts.v1.CheckoutSettings.uri_settings:type_name -> google.shopping.merchant.accounts.v1.UriSettings
	9,  // 4: google.shopping.merchant.accounts.v1.CheckoutSettings.eligible_destinations:type_name -> google.shopping.type.Destination.DestinationEnum
	0,  // 5: google.shopping.merchant.accounts.v1.CheckoutSettings.enrollment_state:type_name -> google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState
	1,  // 6: google.shopping.merchant.accounts.v1.CheckoutSettings.review_state:type_name -> google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState
	7,  // 7: google.shopping.merchant.accounts.v1.CheckoutSettings.effective_uri_settings:type_name -> google.shopping.merchant.accounts.v1.UriSettings
	0,  // 8: google.shopping.merchant.accounts.v1.CheckoutSettings.effective_enrollment_state:type_name -> google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState
	1,  // 9: google.shopping.merchant.accounts.v1.CheckoutSettings.effective_review_state:type_name -> google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState
	2,  // 10: google.shopping.merchant.accounts.v1.CheckoutSettingsService.GetCheckoutSettings:input_type -> google.shopping.merchant.accounts.v1.GetCheckoutSettingsRequest
	3,  // 11: google.shopping.merchant.accounts.v1.CheckoutSettingsService.CreateCheckoutSettings:input_type -> google.shopping.merchant.accounts.v1.CreateCheckoutSettingsRequest
	4,  // 12: google.shopping.merchant.accounts.v1.CheckoutSettingsService.UpdateCheckoutSettings:input_type -> google.shopping.merchant.accounts.v1.UpdateCheckoutSettingsRequest
	5,  // 13: google.shopping.merchant.accounts.v1.CheckoutSettingsService.DeleteCheckoutSettings:input_type -> google.shopping.merchant.accounts.v1.DeleteCheckoutSettingsRequest
	6,  // 14: google.shopping.merchant.accounts.v1.CheckoutSettingsService.GetCheckoutSettings:output_type -> google.shopping.merchant.accounts.v1.CheckoutSettings
	6,  // 15: google.shopping.merchant.accounts.v1.CheckoutSettingsService.CreateCheckoutSettings:output_type -> google.shopping.merchant.accounts.v1.CheckoutSettings
	6,  // 16: google.shopping.merchant.accounts.v1.CheckoutSettingsService.UpdateCheckoutSettings:output_type -> google.shopping.merchant.accounts.v1.CheckoutSettings
	10, // 17: google.shopping.merchant.accounts.v1.CheckoutSettingsService.DeleteCheckoutSettings:output_type -> google.protobuf.Empty
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_init() }
func file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_init() {
	if File_google_shopping_merchant_accounts_v1_checkoutsettings_proto != nil {
		return
	}
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[4].OneofWrappers = []any{}
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes[5].OneofWrappers = []any{
		(*UriSettings_CheckoutUriTemplate)(nil),
		(*UriSettings_CartUriTemplate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_goTypes,
		DependencyIndexes: file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_depIdxs,
		EnumInfos:         file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_enumTypes,
		MessageInfos:      file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_msgTypes,
	}.Build()
	File_google_shopping_merchant_accounts_v1_checkoutsettings_proto = out.File
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_rawDesc = nil
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_goTypes = nil
	file_google_shopping_merchant_accounts_v1_checkoutsettings_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CheckoutSettingsServiceClient is the client API for CheckoutSettingsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckoutSettingsServiceClient interface {
	// Gets `CheckoutSettings` for the given merchant. This includes
	// information about review state, enrollment state and URL settings.
	GetCheckoutSettings(ctx context.Context, in *GetCheckoutSettingsRequest, opts ...grpc.CallOption) (*CheckoutSettings, error)
	// Creates `CheckoutSettings` for the given merchant.
	CreateCheckoutSettings(ctx context.Context, in *CreateCheckoutSettingsRequest, opts ...grpc.CallOption) (*CheckoutSettings, error)
	// Updates `CheckoutSettings` for the given merchant.
	UpdateCheckoutSettings(ctx context.Context, in *UpdateCheckoutSettingsRequest, opts ...grpc.CallOption) (*CheckoutSettings, error)
	// Deletes `CheckoutSettings` and unenrolls merchant from
	// `Checkout` program.
	DeleteCheckoutSettings(ctx context.Context, in *DeleteCheckoutSettingsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type checkoutSettingsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCheckoutSettingsServiceClient(cc grpc.ClientConnInterface) CheckoutSettingsServiceClient {
	return &checkoutSettingsServiceClient{cc}
}

func (c *checkoutSettingsServiceClient) GetCheckoutSettings(ctx context.Context, in *GetCheckoutSettingsRequest, opts ...grpc.CallOption) (*CheckoutSettings, error) {
	out := new(CheckoutSettings)
	err := c.cc.Invoke(ctx, "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/GetCheckoutSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkoutSettingsServiceClient) CreateCheckoutSettings(ctx context.Context, in *CreateCheckoutSettingsRequest, opts ...grpc.CallOption) (*CheckoutSettings, error) {
	out := new(CheckoutSettings)
	err := c.cc.Invoke(ctx, "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/CreateCheckoutSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkoutSettingsServiceClient) UpdateCheckoutSettings(ctx context.Context, in *UpdateCheckoutSettingsRequest, opts ...grpc.CallOption) (*CheckoutSettings, error) {
	out := new(CheckoutSettings)
	err := c.cc.Invoke(ctx, "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/UpdateCheckoutSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkoutSettingsServiceClient) DeleteCheckoutSettings(ctx context.Context, in *DeleteCheckoutSettingsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/DeleteCheckoutSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckoutSettingsServiceServer is the server API for CheckoutSettingsService service.
type CheckoutSettingsServiceServer interface {
	// Gets `CheckoutSettings` for the given merchant. This includes
	// information about review state, enrollment state and URL settings.
	GetCheckoutSettings(context.Context, *GetCheckoutSettingsRequest) (*CheckoutSettings, error)
	// Creates `CheckoutSettings` for the given merchant.
	CreateCheckoutSettings(context.Context, *CreateCheckoutSettingsRequest) (*CheckoutSettings, error)
	// Updates `CheckoutSettings` for the given merchant.
	UpdateCheckoutSettings(context.Context, *UpdateCheckoutSettingsRequest) (*CheckoutSettings, error)
	// Deletes `CheckoutSettings` and unenrolls merchant from
	// `Checkout` program.
	DeleteCheckoutSettings(context.Context, *DeleteCheckoutSettingsRequest) (*emptypb.Empty, error)
}

// UnimplementedCheckoutSettingsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCheckoutSettingsServiceServer struct {
}

func (*UnimplementedCheckoutSettingsServiceServer) GetCheckoutSettings(context.Context, *GetCheckoutSettingsRequest) (*CheckoutSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCheckoutSettings not implemented")
}
func (*UnimplementedCheckoutSettingsServiceServer) CreateCheckoutSettings(context.Context, *CreateCheckoutSettingsRequest) (*CheckoutSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCheckoutSettings not implemented")
}
func (*UnimplementedCheckoutSettingsServiceServer) UpdateCheckoutSettings(context.Context, *UpdateCheckoutSettingsRequest) (*CheckoutSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCheckoutSettings not implemented")
}
func (*UnimplementedCheckoutSettingsServiceServer) DeleteCheckoutSettings(context.Context, *DeleteCheckoutSettingsRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCheckoutSettings not implemented")
}

func RegisterCheckoutSettingsServiceServer(s *grpc.Server, srv CheckoutSettingsServiceServer) {
	s.RegisterService(&_CheckoutSettingsService_serviceDesc, srv)
}

func _CheckoutSettingsService_GetCheckoutSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCheckoutSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutSettingsServiceServer).GetCheckoutSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/GetCheckoutSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutSettingsServiceServer).GetCheckoutSettings(ctx, req.(*GetCheckoutSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CheckoutSettingsService_CreateCheckoutSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCheckoutSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutSettingsServiceServer).CreateCheckoutSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/CreateCheckoutSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutSettingsServiceServer).CreateCheckoutSettings(ctx, req.(*CreateCheckoutSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CheckoutSettingsService_UpdateCheckoutSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCheckoutSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutSettingsServiceServer).UpdateCheckoutSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/UpdateCheckoutSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutSettingsServiceServer).UpdateCheckoutSettings(ctx, req.(*UpdateCheckoutSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CheckoutSettingsService_DeleteCheckoutSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCheckoutSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutSettingsServiceServer).DeleteCheckoutSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.shopping.merchant.accounts.v1.CheckoutSettingsService/DeleteCheckoutSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutSettingsServiceServer).DeleteCheckoutSettings(ctx, req.(*DeleteCheckoutSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CheckoutSettingsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.shopping.merchant.accounts.v1.CheckoutSettingsService",
	HandlerType: (*CheckoutSettingsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCheckoutSettings",
			Handler:    _CheckoutSettingsService_GetCheckoutSettings_Handler,
		},
		{
			MethodName: "CreateCheckoutSettings",
			Handler:    _CheckoutSettingsService_CreateCheckoutSettings_Handler,
		},
		{
			MethodName: "UpdateCheckoutSettings",
			Handler:    _CheckoutSettingsService_UpdateCheckoutSettings_Handler,
		},
		{
			MethodName: "DeleteCheckoutSettings",
			Handler:    _CheckoutSettingsService_DeleteCheckoutSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/shopping/merchant/accounts/v1/checkoutsettings.proto",
}
