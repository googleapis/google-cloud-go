// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.3
// source: google/shopping/merchant/ordertracking/v1beta/order_tracking_signals.proto

package ordertrackingpb

import (
	context "context"
	reflect "reflect"
	sync "sync"

	typepb "cloud.google.com/go/shopping/type/typepb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The current status of the shipments.
type OrderTrackingSignal_ShippingInfo_ShippingState int32

const (
	// The shipping status is not known to business.
	OrderTrackingSignal_ShippingInfo_SHIPPING_STATE_UNSPECIFIED OrderTrackingSignal_ShippingInfo_ShippingState = 0
	// All items are shipped.
	OrderTrackingSignal_ShippingInfo_SHIPPED OrderTrackingSignal_ShippingInfo_ShippingState = 1
	// The shipment is already delivered.
	OrderTrackingSignal_ShippingInfo_DELIVERED OrderTrackingSignal_ShippingInfo_ShippingState = 2
)

// Enum value maps for OrderTrackingSignal_ShippingInfo_ShippingState.
var (
	OrderTrackingSignal_ShippingInfo_ShippingState_name = map[int32]string{
		0: "SHIPPING_STATE_UNSPECIFIED",
		1: "SHIPPED",
		2: "DELIVERED",
	}
	OrderTrackingSignal_ShippingInfo_ShippingState_value = map[string]int32{
		"SHIPPING_STATE_UNSPECIFIED": 0,
		"SHIPPED":                    1,
		"DELIVERED":                  2,
	}
)

func (x OrderTrackingSignal_ShippingInfo_ShippingState) Enum() *OrderTrackingSignal_ShippingInfo_ShippingState {
	p := new(OrderTrackingSignal_ShippingInfo_ShippingState)
	*p = x
	return p
}

func (x OrderTrackingSignal_ShippingInfo_ShippingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderTrackingSignal_ShippingInfo_ShippingState) Descriptor() protoreflect.EnumDescriptor {
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_enumTypes[0].Descriptor()
}

func (OrderTrackingSignal_ShippingInfo_ShippingState) Type() protoreflect.EnumType {
	return &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_enumTypes[0]
}

func (x OrderTrackingSignal_ShippingInfo_ShippingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderTrackingSignal_ShippingInfo_ShippingState.Descriptor instead.
func (OrderTrackingSignal_ShippingInfo_ShippingState) EnumDescriptor() ([]byte, []int) {
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescGZIP(), []int{1, 0, 0}
}

// Signals only can be created but not updated.
// Businesses need to call this API only when the order is completely shipped.
// Creates new order signal.
type CreateOrderTrackingSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The account of the business for which the order signal is
	// created. Format: accounts/{account}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Output only. The ID that uniquely identifies this order tracking signal.
	OrderTrackingSignalId string `protobuf:"bytes,2,opt,name=order_tracking_signal_id,json=orderTrackingSignalId,proto3" json:"order_tracking_signal_id,omitempty"`
	// Required. The order signal to be created.
	OrderTrackingSignal *OrderTrackingSignal `protobuf:"bytes,3,opt,name=order_tracking_signal,json=orderTrackingSignal,proto3" json:"order_tracking_signal,omitempty"`
}

func (x *CreateOrderTrackingSignalRequest) Reset() {
	*x = CreateOrderTrackingSignalRequest{}
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderTrackingSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderTrackingSignalRequest) ProtoMessage() {}

func (x *CreateOrderTrackingSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderTrackingSignalRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderTrackingSignalRequest) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOrderTrackingSignalRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateOrderTrackingSignalRequest) GetOrderTrackingSignalId() string {
	if x != nil {
		return x.OrderTrackingSignalId
	}
	return ""
}

func (x *CreateOrderTrackingSignalRequest) GetOrderTrackingSignal() *OrderTrackingSignal {
	if x != nil {
		return x.OrderTrackingSignal
	}
	return nil
}

// Represents a business trade from which signals are extracted, such as
// shipping.
type OrderTrackingSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The ID that uniquely identifies this order tracking signal.
	OrderTrackingSignalId int64 `protobuf:"varint,11,opt,name=order_tracking_signal_id,json=orderTrackingSignalId,proto3" json:"order_tracking_signal_id,omitempty"`
	// Optional. The Google Merchant Center ID of this order tracking signal. This
	// value is optional. If left unset, the caller's Merchant Center ID is used.
	// You must request access in order to provide data on behalf of another
	// business. For more information, see [Submitting Order Tracking
	// Signals](/shopping-content/guides/order-tracking-signals).
	MerchantId int64 `protobuf:"varint,12,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// Required. The time when the order was created on the businesses side.
	// Include the year and timezone string, if available.
	OrderCreatedTime *datetime.DateTime `protobuf:"bytes,1,opt,name=order_created_time,json=orderCreatedTime,proto3" json:"order_created_time,omitempty"`
	// Required. The ID of the order on the businesses side. This field will be
	// hashed in returned OrderTrackingSignal creation response.
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Required. The shipping information for the order.
	ShippingInfo []*OrderTrackingSignal_ShippingInfo `protobuf:"bytes,3,rep,name=shipping_info,json=shippingInfo,proto3" json:"shipping_info,omitempty"`
	// Required. Information about line items in the order.
	LineItems []*OrderTrackingSignal_LineItemDetails `protobuf:"bytes,4,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	// Optional. The mapping of the line items to the shipment information.
	ShipmentLineItemMapping []*OrderTrackingSignal_ShipmentLineItemMapping `protobuf:"bytes,5,rep,name=shipment_line_item_mapping,json=shipmentLineItemMapping,proto3" json:"shipment_line_item_mapping,omitempty"`
	// Optional. The shipping fee of the order;
	// this value should be set to zero in the case of free shipping.
	CustomerShippingFee *typepb.Price `protobuf:"bytes,6,opt,name=customer_shipping_fee,json=customerShippingFee,proto3,oneof" json:"customer_shipping_fee,omitempty"`
	// Optional. The delivery postal code, as a continuous string without spaces
	// or dashes, for example "95016". This field will be anonymized in returned
	// OrderTrackingSignal creation response.
	DeliveryPostalCode string `protobuf:"bytes,9,opt,name=delivery_postal_code,json=deliveryPostalCode,proto3" json:"delivery_postal_code,omitempty"`
	// Optional. The [CLDR territory code]
	// (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for
	// the shipping destination.
	DeliveryRegionCode string `protobuf:"bytes,10,opt,name=delivery_region_code,json=deliveryRegionCode,proto3" json:"delivery_region_code,omitempty"`
}

func (x *OrderTrackingSignal) Reset() {
	*x = OrderTrackingSignal{}
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderTrackingSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTrackingSignal) ProtoMessage() {}

func (x *OrderTrackingSignal) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTrackingSignal.ProtoReflect.Descriptor instead.
func (*OrderTrackingSignal) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescGZIP(), []int{1}
}

func (x *OrderTrackingSignal) GetOrderTrackingSignalId() int64 {
	if x != nil {
		return x.OrderTrackingSignalId
	}
	return 0
}

func (x *OrderTrackingSignal) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *OrderTrackingSignal) GetOrderCreatedTime() *datetime.DateTime {
	if x != nil {
		return x.OrderCreatedTime
	}
	return nil
}

func (x *OrderTrackingSignal) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderTrackingSignal) GetShippingInfo() []*OrderTrackingSignal_ShippingInfo {
	if x != nil {
		return x.ShippingInfo
	}
	return nil
}

func (x *OrderTrackingSignal) GetLineItems() []*OrderTrackingSignal_LineItemDetails {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *OrderTrackingSignal) GetShipmentLineItemMapping() []*OrderTrackingSignal_ShipmentLineItemMapping {
	if x != nil {
		return x.ShipmentLineItemMapping
	}
	return nil
}

func (x *OrderTrackingSignal) GetCustomerShippingFee() *typepb.Price {
	if x != nil {
		return x.CustomerShippingFee
	}
	return nil
}

func (x *OrderTrackingSignal) GetDeliveryPostalCode() string {
	if x != nil {
		return x.DeliveryPostalCode
	}
	return ""
}

func (x *OrderTrackingSignal) GetDeliveryRegionCode() string {
	if x != nil {
		return x.DeliveryRegionCode
	}
	return ""
}

// The shipping information for the order.
type OrderTrackingSignal_ShippingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The shipment ID. This field will be hashed in returned
	// OrderTrackingSignal creation response.
	ShipmentId string `protobuf:"bytes,1,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	// Optional. The tracking ID of the shipment. This field is required if one
	// of the following fields is absent: earliest_delivery_promise_time,
	// latest_delivery_promise_time, and actual_delivery_time.
	TrackingId string `protobuf:"bytes,2,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	// Optional. The name of the shipping carrier for the delivery. This field
	// is required if one of the following fields is absent:
	// earliest_delivery_promise_time, latest_delivery_promise_time,
	// and actual_delivery_time.
	Carrier string `protobuf:"bytes,3,opt,name=carrier,proto3" json:"carrier,omitempty"`
	// Optional. The service type for fulfillment, such as GROUND, FIRST_CLASS,
	// etc.
	CarrierService string `protobuf:"bytes,4,opt,name=carrier_service,json=carrierService,proto3" json:"carrier_service,omitempty"`
	// Optional. The time when the shipment was shipped.
	// Include the year and timezone string, if available.
	ShippedTime *datetime.DateTime `protobuf:"bytes,5,opt,name=shipped_time,json=shippedTime,proto3" json:"shipped_time,omitempty"`
	// Optional. The earliest delivery promised time.
	// Include the year and timezone string, if available.
	// This field is required, if one of the following fields is absent:
	// tracking_id or carrier_name.
	EarliestDeliveryPromiseTime *datetime.DateTime `protobuf:"bytes,6,opt,name=earliest_delivery_promise_time,json=earliestDeliveryPromiseTime,proto3" json:"earliest_delivery_promise_time,omitempty"`
	// Optional. The latest delivery promised time.
	// Include the year and timezone string, if available.
	// This field is required, if one of the following fields is absent:
	// tracking_id or carrier_name.
	LatestDeliveryPromiseTime *datetime.DateTime `protobuf:"bytes,7,opt,name=latest_delivery_promise_time,json=latestDeliveryPromiseTime,proto3" json:"latest_delivery_promise_time,omitempty"`
	// Optional. The time when the shipment was actually delivered.
	// Include the year and timezone string, if available.
	// This field is required, if one of the following fields is absent:
	// tracking_id or carrier_name.
	ActualDeliveryTime *datetime.DateTime `protobuf:"bytes,8,opt,name=actual_delivery_time,json=actualDeliveryTime,proto3" json:"actual_delivery_time,omitempty"`
	// Required. The status of the shipment.
	ShippingStatus OrderTrackingSignal_ShippingInfo_ShippingState `protobuf:"varint,9,opt,name=shipping_status,json=shippingStatus,proto3,enum=google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal_ShippingInfo_ShippingState" json:"shipping_status,omitempty"`
	// Required. The origin postal code, as a continuous string without spaces
	// or dashes, for example "95016". This field will be anonymized in returned
	// OrderTrackingSignal creation response.
	OriginPostalCode string `protobuf:"bytes,10,opt,name=origin_postal_code,json=originPostalCode,proto3" json:"origin_postal_code,omitempty"`
	// Required. The [CLDR territory code]
	// (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for
	// the shipping origin.
	OriginRegionCode string `protobuf:"bytes,11,opt,name=origin_region_code,json=originRegionCode,proto3" json:"origin_region_code,omitempty"`
}

func (x *OrderTrackingSignal_ShippingInfo) Reset() {
	*x = OrderTrackingSignal_ShippingInfo{}
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderTrackingSignal_ShippingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTrackingSignal_ShippingInfo) ProtoMessage() {}

func (x *OrderTrackingSignal_ShippingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTrackingSignal_ShippingInfo.ProtoReflect.Descriptor instead.
func (*OrderTrackingSignal_ShippingInfo) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OrderTrackingSignal_ShippingInfo) GetShipmentId() string {
	if x != nil {
		return x.ShipmentId
	}
	return ""
}

func (x *OrderTrackingSignal_ShippingInfo) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *OrderTrackingSignal_ShippingInfo) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *OrderTrackingSignal_ShippingInfo) GetCarrierService() string {
	if x != nil {
		return x.CarrierService
	}
	return ""
}

func (x *OrderTrackingSignal_ShippingInfo) GetShippedTime() *datetime.DateTime {
	if x != nil {
		return x.ShippedTime
	}
	return nil
}

func (x *OrderTrackingSignal_ShippingInfo) GetEarliestDeliveryPromiseTime() *datetime.DateTime {
	if x != nil {
		return x.EarliestDeliveryPromiseTime
	}
	return nil
}

func (x *OrderTrackingSignal_ShippingInfo) GetLatestDeliveryPromiseTime() *datetime.DateTime {
	if x != nil {
		return x.LatestDeliveryPromiseTime
	}
	return nil
}

func (x *OrderTrackingSignal_ShippingInfo) GetActualDeliveryTime() *datetime.DateTime {
	if x != nil {
		return x.ActualDeliveryTime
	}
	return nil
}

func (x *OrderTrackingSignal_ShippingInfo) GetShippingStatus() OrderTrackingSignal_ShippingInfo_ShippingState {
	if x != nil {
		return x.ShippingStatus
	}
	return OrderTrackingSignal_ShippingInfo_SHIPPING_STATE_UNSPECIFIED
}

func (x *OrderTrackingSignal_ShippingInfo) GetOriginPostalCode() string {
	if x != nil {
		return x.OriginPostalCode
	}
	return ""
}

func (x *OrderTrackingSignal_ShippingInfo) GetOriginRegionCode() string {
	if x != nil {
		return x.OriginRegionCode
	}
	return ""
}

// The line items of the order.
type OrderTrackingSignal_LineItemDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID for this line item.
	LineItemId string `protobuf:"bytes,1,opt,name=line_item_id,json=lineItemId,proto3" json:"line_item_id,omitempty"`
	// Required. The Content API REST ID of the product, in the
	// form channel:contentLanguage:targetCountry:offerId.
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// Optional. The Global Trade Item Number.
	Gtin string `protobuf:"bytes,3,opt,name=gtin,proto3" json:"gtin,omitempty"`
	// Optional. The manufacturer part number.
	Mpn string `protobuf:"bytes,4,opt,name=mpn,proto3" json:"mpn,omitempty"`
	// Optional. Plain text title of this product.
	ProductTitle *string `protobuf:"bytes,5,opt,name=product_title,json=productTitle,proto3,oneof" json:"product_title,omitempty"`
	// Optional. Brand of the product.
	Brand *string `protobuf:"bytes,6,opt,name=brand,proto3,oneof" json:"brand,omitempty"`
	// Required. The quantity of the line item in the order.
	Quantity int64 `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *OrderTrackingSignal_LineItemDetails) Reset() {
	*x = OrderTrackingSignal_LineItemDetails{}
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderTrackingSignal_LineItemDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTrackingSignal_LineItemDetails) ProtoMessage() {}

func (x *OrderTrackingSignal_LineItemDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTrackingSignal_LineItemDetails.ProtoReflect.Descriptor instead.
func (*OrderTrackingSignal_LineItemDetails) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescGZIP(), []int{1, 1}
}

func (x *OrderTrackingSignal_LineItemDetails) GetLineItemId() string {
	if x != nil {
		return x.LineItemId
	}
	return ""
}

func (x *OrderTrackingSignal_LineItemDetails) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OrderTrackingSignal_LineItemDetails) GetGtin() string {
	if x != nil {
		return x.Gtin
	}
	return ""
}

func (x *OrderTrackingSignal_LineItemDetails) GetMpn() string {
	if x != nil {
		return x.Mpn
	}
	return ""
}

func (x *OrderTrackingSignal_LineItemDetails) GetProductTitle() string {
	if x != nil && x.ProductTitle != nil {
		return *x.ProductTitle
	}
	return ""
}

func (x *OrderTrackingSignal_LineItemDetails) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *OrderTrackingSignal_LineItemDetails) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Represents how many items are in the shipment for the given shipment_id
// and line_item_id.
type OrderTrackingSignal_ShipmentLineItemMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The shipment ID. This field will be hashed in returned
	// OrderTrackingSignal creation response.
	ShipmentId string `protobuf:"bytes,1,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	// Required. The line item ID.
	LineItemId string `protobuf:"bytes,2,opt,name=line_item_id,json=lineItemId,proto3" json:"line_item_id,omitempty"`
	// Required. The line item quantity in the shipment.
	Quantity int64 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *OrderTrackingSignal_ShipmentLineItemMapping) Reset() {
	*x = OrderTrackingSignal_ShipmentLineItemMapping{}
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderTrackingSignal_ShipmentLineItemMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTrackingSignal_ShipmentLineItemMapping) ProtoMessage() {}

func (x *OrderTrackingSignal_ShipmentLineItemMapping) ProtoReflect() protoreflect.Message {
	mi := &file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTrackingSignal_ShipmentLineItemMapping.ProtoReflect.Descriptor instead.
func (*OrderTrackingSignal_ShipmentLineItemMapping) Descriptor() ([]byte, []int) {
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescGZIP(), []int{1, 2}
}

func (x *OrderTrackingSignal_ShipmentLineItemMapping) GetShipmentId() string {
	if x != nil {
		return x.ShipmentId
	}
	return ""
}

func (x *OrderTrackingSignal_ShipmentLineItemMapping) GetLineItemId() string {
	if x != nil {
		return x.LineItemId
	}
	return ""
}

func (x *OrderTrackingSignal_ShipmentLineItemMapping) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

var File_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto protoreflect.FileDescriptor

var file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDesc = []byte{
	0x0a, 0x4a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x02, 0x0a,
	0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2a, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x15, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x7b, 0x0a, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x22, 0xb3, 0x10, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x18, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x12,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x79, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x76, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x9c, 0x01, 0x0a, 0x1a, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x17, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x59, 0x0a, 0x15, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x13, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x14, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x12, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x1a, 0xb3, 0x06, 0x0a, 0x0c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x0f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0e, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x1e, 0x65, 0x61,
	0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x1b,
	0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x1c, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x19, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x12, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x5d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x0d, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x48, 0x49, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x48, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x49,
	0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x98, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x67, 0x74, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x67, 0x74, 0x69, 0x6e, 0x12,
	0x15, 0x0a, 0x03, 0x6d, 0x70, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x03, 0x6d, 0x70, 0x6e, 0x12, 0x2d, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x1a, 0x87, 0x01, 0x0a, 0x17, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x24,
	0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x32, 0x9a, 0x03, 0x0a, 0x1b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb1, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x12, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x22, 0x7f, 0xda, 0x41, 0x1f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x2c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x57, 0x3a, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x22, 0x3e, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x1a, 0x47, 0xca, 0x41, 0x1a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0xd2, 0x41, 0x27, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0xfe, 0x02, 0xea, 0x41, 0x38, 0x0a, 0x22, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x7d, 0x0a, 0x31, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x42, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x5d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0xaa, 0x02, 0x2d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x31, 0x42, 0x65, 0x74, 0x61,
	0xca, 0x02, 0x2d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x53, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0xea, 0x02, 0x31, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x53, 0x68, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x3a, 0x3a, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescOnce sync.Once
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescData = file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDesc
)

func file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescGZIP() []byte {
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescOnce.Do(func() {
		file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescData)
	})
	return file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDescData
}

var file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_goTypes = []any{
	(OrderTrackingSignal_ShippingInfo_ShippingState)(0), // 0: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo.ShippingState
	(*CreateOrderTrackingSignalRequest)(nil),            // 1: google.shopping.merchant.ordertracking.v1beta.CreateOrderTrackingSignalRequest
	(*OrderTrackingSignal)(nil),                         // 2: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal
	(*OrderTrackingSignal_ShippingInfo)(nil),            // 3: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo
	(*OrderTrackingSignal_LineItemDetails)(nil),         // 4: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.LineItemDetails
	(*OrderTrackingSignal_ShipmentLineItemMapping)(nil), // 5: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShipmentLineItemMapping
	(*datetime.DateTime)(nil),                           // 6: google.type.DateTime
	(*typepb.Price)(nil),                                // 7: google.shopping.type.Price
}
var file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_depIdxs = []int32{
	2,  // 0: google.shopping.merchant.ordertracking.v1beta.CreateOrderTrackingSignalRequest.order_tracking_signal:type_name -> google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal
	6,  // 1: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.order_created_time:type_name -> google.type.DateTime
	3,  // 2: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.shipping_info:type_name -> google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo
	4,  // 3: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.line_items:type_name -> google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.LineItemDetails
	5,  // 4: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.shipment_line_item_mapping:type_name -> google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShipmentLineItemMapping
	7,  // 5: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.customer_shipping_fee:type_name -> google.shopping.type.Price
	6,  // 6: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo.shipped_time:type_name -> google.type.DateTime
	6,  // 7: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo.earliest_delivery_promise_time:type_name -> google.type.DateTime
	6,  // 8: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo.latest_delivery_promise_time:type_name -> google.type.DateTime
	6,  // 9: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo.actual_delivery_time:type_name -> google.type.DateTime
	0,  // 10: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo.shipping_status:type_name -> google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal.ShippingInfo.ShippingState
	1,  // 11: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignalsService.CreateOrderTrackingSignal:input_type -> google.shopping.merchant.ordertracking.v1beta.CreateOrderTrackingSignalRequest
	2,  // 12: google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignalsService.CreateOrderTrackingSignal:output_type -> google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignal
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_init() }
func file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_init() {
	if File_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto != nil {
		return
	}
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[1].OneofWrappers = []any{}
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_goTypes,
		DependencyIndexes: file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_depIdxs,
		EnumInfos:         file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_enumTypes,
		MessageInfos:      file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_msgTypes,
	}.Build()
	File_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto = out.File
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_rawDesc = nil
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_goTypes = nil
	file_google_shopping_merchant_ordertracking_v1beta_order_tracking_signals_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderTrackingSignalsServiceClient is the client API for OrderTrackingSignalsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderTrackingSignalsServiceClient interface {
	// Creates new order tracking signal.
	CreateOrderTrackingSignal(ctx context.Context, in *CreateOrderTrackingSignalRequest, opts ...grpc.CallOption) (*OrderTrackingSignal, error)
}

type orderTrackingSignalsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderTrackingSignalsServiceClient(cc grpc.ClientConnInterface) OrderTrackingSignalsServiceClient {
	return &orderTrackingSignalsServiceClient{cc}
}

func (c *orderTrackingSignalsServiceClient) CreateOrderTrackingSignal(ctx context.Context, in *CreateOrderTrackingSignalRequest, opts ...grpc.CallOption) (*OrderTrackingSignal, error) {
	out := new(OrderTrackingSignal)
	err := c.cc.Invoke(ctx, "/google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignalsService/CreateOrderTrackingSignal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderTrackingSignalsServiceServer is the server API for OrderTrackingSignalsService service.
type OrderTrackingSignalsServiceServer interface {
	// Creates new order tracking signal.
	CreateOrderTrackingSignal(context.Context, *CreateOrderTrackingSignalRequest) (*OrderTrackingSignal, error)
}

// UnimplementedOrderTrackingSignalsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderTrackingSignalsServiceServer struct {
}

func (*UnimplementedOrderTrackingSignalsServiceServer) CreateOrderTrackingSignal(context.Context, *CreateOrderTrackingSignalRequest) (*OrderTrackingSignal, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrderTrackingSignal not implemented")
}

func RegisterOrderTrackingSignalsServiceServer(s *grpc.Server, srv OrderTrackingSignalsServiceServer) {
	s.RegisterService(&_OrderTrackingSignalsService_serviceDesc, srv)
}

func _OrderTrackingSignalsService_CreateOrderTrackingSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderTrackingSignalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderTrackingSignalsServiceServer).CreateOrderTrackingSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignalsService/CreateOrderTrackingSignal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderTrackingSignalsServiceServer).CreateOrderTrackingSignal(ctx, req.(*CreateOrderTrackingSignalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderTrackingSignalsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.shopping.merchant.ordertracking.v1beta.OrderTrackingSignalsService",
	HandlerType: (*OrderTrackingSignalsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrderTrackingSignal",
			Handler:    _OrderTrackingSignalsService_CreateOrderTrackingSignal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/shopping/merchant/ordertracking/v1beta/order_tracking_signals.proto",
}
