// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/discoveryengine/v1/assist_answer.proto

package discoveryenginepb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// State of the answer generation.
type AssistAnswer_State int32

const (
	// Unknown.
	AssistAnswer_STATE_UNSPECIFIED AssistAnswer_State = 0
	// Assist operation is currently in progress.
	AssistAnswer_IN_PROGRESS AssistAnswer_State = 1
	// Assist operation has failed.
	AssistAnswer_FAILED AssistAnswer_State = 2
	// Assist operation has succeeded.
	AssistAnswer_SUCCEEDED AssistAnswer_State = 3
	// Assist operation has been skipped.
	AssistAnswer_SKIPPED AssistAnswer_State = 4
)

// Enum value maps for AssistAnswer_State.
var (
	AssistAnswer_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "IN_PROGRESS",
		2: "FAILED",
		3: "SUCCEEDED",
		4: "SKIPPED",
	}
	AssistAnswer_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"IN_PROGRESS":       1,
		"FAILED":            2,
		"SUCCEEDED":         3,
		"SKIPPED":           4,
	}
)

func (x AssistAnswer_State) Enum() *AssistAnswer_State {
	p := new(AssistAnswer_State)
	*p = x
	return p
}

func (x AssistAnswer_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssistAnswer_State) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes[0].Descriptor()
}

func (AssistAnswer_State) Type() protoreflect.EnumType {
	return &file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes[0]
}

func (x AssistAnswer_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssistAnswer_State.Descriptor instead.
func (AssistAnswer_State) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{0, 0}
}

// Possible reasons for not answering an assist call.
type AssistAnswer_AssistSkippedReason int32

const (
	// Default value. Skip reason is not specified.
	AssistAnswer_ASSIST_SKIPPED_REASON_UNSPECIFIED AssistAnswer_AssistSkippedReason = 0
	// The assistant ignored the query, because it did not appear to be
	// answer-seeking.
	AssistAnswer_NON_ASSIST_SEEKING_QUERY_IGNORED AssistAnswer_AssistSkippedReason = 1
	// The assistant ignored the query or refused to answer because of a
	// customer policy violation (e.g., the query or the answer contained a
	// banned phrase).
	AssistAnswer_CUSTOMER_POLICY_VIOLATION AssistAnswer_AssistSkippedReason = 2
)

// Enum value maps for AssistAnswer_AssistSkippedReason.
var (
	AssistAnswer_AssistSkippedReason_name = map[int32]string{
		0: "ASSIST_SKIPPED_REASON_UNSPECIFIED",
		1: "NON_ASSIST_SEEKING_QUERY_IGNORED",
		2: "CUSTOMER_POLICY_VIOLATION",
	}
	AssistAnswer_AssistSkippedReason_value = map[string]int32{
		"ASSIST_SKIPPED_REASON_UNSPECIFIED": 0,
		"NON_ASSIST_SEEKING_QUERY_IGNORED":  1,
		"CUSTOMER_POLICY_VIOLATION":         2,
	}
)

func (x AssistAnswer_AssistSkippedReason) Enum() *AssistAnswer_AssistSkippedReason {
	p := new(AssistAnswer_AssistSkippedReason)
	*p = x
	return p
}

func (x AssistAnswer_AssistSkippedReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssistAnswer_AssistSkippedReason) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes[1].Descriptor()
}

func (AssistAnswer_AssistSkippedReason) Type() protoreflect.EnumType {
	return &file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes[1]
}

func (x AssistAnswer_AssistSkippedReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssistAnswer_AssistSkippedReason.Descriptor instead.
func (AssistAnswer_AssistSkippedReason) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{0, 1}
}

// Enumeration of possible outcomes of the code execution.
type AssistantContent_CodeExecutionResult_Outcome int32

const (
	// Unspecified status. This value should not be used.
	AssistantContent_CodeExecutionResult_OUTCOME_UNSPECIFIED AssistantContent_CodeExecutionResult_Outcome = 0
	// Code execution completed successfully.
	AssistantContent_CodeExecutionResult_OUTCOME_OK AssistantContent_CodeExecutionResult_Outcome = 1
	// Code execution finished but with a failure. `stderr` should contain the
	// reason.
	AssistantContent_CodeExecutionResult_OUTCOME_FAILED AssistantContent_CodeExecutionResult_Outcome = 2
	// Code execution ran for too long, and was cancelled. There may or may
	// not be a partial output present.
	AssistantContent_CodeExecutionResult_OUTCOME_DEADLINE_EXCEEDED AssistantContent_CodeExecutionResult_Outcome = 3
)

// Enum value maps for AssistantContent_CodeExecutionResult_Outcome.
var (
	AssistantContent_CodeExecutionResult_Outcome_name = map[int32]string{
		0: "OUTCOME_UNSPECIFIED",
		1: "OUTCOME_OK",
		2: "OUTCOME_FAILED",
		3: "OUTCOME_DEADLINE_EXCEEDED",
	}
	AssistantContent_CodeExecutionResult_Outcome_value = map[string]int32{
		"OUTCOME_UNSPECIFIED":       0,
		"OUTCOME_OK":                1,
		"OUTCOME_FAILED":            2,
		"OUTCOME_DEADLINE_EXCEEDED": 3,
	}
)

func (x AssistantContent_CodeExecutionResult_Outcome) Enum() *AssistantContent_CodeExecutionResult_Outcome {
	p := new(AssistantContent_CodeExecutionResult_Outcome)
	*p = x
	return p
}

func (x AssistantContent_CodeExecutionResult_Outcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssistantContent_CodeExecutionResult_Outcome) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes[2].Descriptor()
}

func (AssistantContent_CodeExecutionResult_Outcome) Type() protoreflect.EnumType {
	return &file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes[2]
}

func (x AssistantContent_CodeExecutionResult_Outcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssistantContent_CodeExecutionResult_Outcome.Descriptor instead.
func (AssistantContent_CodeExecutionResult_Outcome) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{1, 3, 0}
}

// AssistAnswer resource, main part of
// [AssistResponse][google.cloud.discoveryengine.v1.AssistResponse].
type AssistAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. Resource name of the `AssistAnswer`.
	// Format:
	// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/sessions/{session}/assistAnswers/{assist_answer}`
	//
	// This field must be a UTF-8 encoded string with a length limit of 1024
	// characters.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// State of the answer generation.
	State AssistAnswer_State `protobuf:"varint,2,opt,name=state,proto3,enum=google.cloud.discoveryengine.v1.AssistAnswer_State" json:"state,omitempty"`
	// Replies of the assistant.
	Replies []*AssistAnswer_Reply `protobuf:"bytes,3,rep,name=replies,proto3" json:"replies,omitempty"`
	// Reasons for not answering the assist call.
	AssistSkippedReasons []AssistAnswer_AssistSkippedReason `protobuf:"varint,5,rep,packed,name=assist_skipped_reasons,json=assistSkippedReasons,proto3,enum=google.cloud.discoveryengine.v1.AssistAnswer_AssistSkippedReason" json:"assist_skipped_reasons,omitempty"`
}

func (x *AssistAnswer) Reset() {
	*x = AssistAnswer{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistAnswer) ProtoMessage() {}

func (x *AssistAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistAnswer.ProtoReflect.Descriptor instead.
func (*AssistAnswer) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{0}
}

func (x *AssistAnswer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssistAnswer) GetState() AssistAnswer_State {
	if x != nil {
		return x.State
	}
	return AssistAnswer_STATE_UNSPECIFIED
}

func (x *AssistAnswer) GetReplies() []*AssistAnswer_Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *AssistAnswer) GetAssistSkippedReasons() []AssistAnswer_AssistSkippedReason {
	if x != nil {
		return x.AssistSkippedReasons
	}
	return nil
}

// Multi-modal content.
type AssistantContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contained data.
	//
	// Types that are assignable to Data:
	//
	//	*AssistantContent_Text
	//	*AssistantContent_InlineData
	//	*AssistantContent_File_
	//	*AssistantContent_ExecutableCode_
	//	*AssistantContent_CodeExecutionResult_
	Data isAssistantContent_Data `protobuf_oneof:"data"`
	// The producer of the content. Can be "model" or "user".
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// Optional. Indicates if the part is thought from the model.
	Thought bool `protobuf:"varint,6,opt,name=thought,proto3" json:"thought,omitempty"`
}

func (x *AssistantContent) Reset() {
	*x = AssistantContent{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantContent) ProtoMessage() {}

func (x *AssistantContent) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantContent.ProtoReflect.Descriptor instead.
func (*AssistantContent) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{1}
}

func (m *AssistantContent) GetData() isAssistantContent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *AssistantContent) GetText() string {
	if x, ok := x.GetData().(*AssistantContent_Text); ok {
		return x.Text
	}
	return ""
}

func (x *AssistantContent) GetInlineData() *AssistantContent_Blob {
	if x, ok := x.GetData().(*AssistantContent_InlineData); ok {
		return x.InlineData
	}
	return nil
}

func (x *AssistantContent) GetFile() *AssistantContent_File {
	if x, ok := x.GetData().(*AssistantContent_File_); ok {
		return x.File
	}
	return nil
}

func (x *AssistantContent) GetExecutableCode() *AssistantContent_ExecutableCode {
	if x, ok := x.GetData().(*AssistantContent_ExecutableCode_); ok {
		return x.ExecutableCode
	}
	return nil
}

func (x *AssistantContent) GetCodeExecutionResult() *AssistantContent_CodeExecutionResult {
	if x, ok := x.GetData().(*AssistantContent_CodeExecutionResult_); ok {
		return x.CodeExecutionResult
	}
	return nil
}

func (x *AssistantContent) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AssistantContent) GetThought() bool {
	if x != nil {
		return x.Thought
	}
	return false
}

type isAssistantContent_Data interface {
	isAssistantContent_Data()
}

type AssistantContent_Text struct {
	// Inline text.
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type AssistantContent_InlineData struct {
	// Inline binary data.
	InlineData *AssistantContent_Blob `protobuf:"bytes,3,opt,name=inline_data,json=inlineData,proto3,oneof"`
}

type AssistantContent_File_ struct {
	// A file, e.g., an audio summary.
	File *AssistantContent_File `protobuf:"bytes,4,opt,name=file,proto3,oneof"`
}

type AssistantContent_ExecutableCode_ struct {
	// Code generated by the model that is meant to be executed.
	ExecutableCode *AssistantContent_ExecutableCode `protobuf:"bytes,7,opt,name=executable_code,json=executableCode,proto3,oneof"`
}

type AssistantContent_CodeExecutionResult_ struct {
	// Result of executing an ExecutableCode.
	CodeExecutionResult *AssistantContent_CodeExecutionResult `protobuf:"bytes,8,opt,name=code_execution_result,json=codeExecutionResult,proto3,oneof"`
}

func (*AssistantContent_Text) isAssistantContent_Data() {}

func (*AssistantContent_InlineData) isAssistantContent_Data() {}

func (*AssistantContent_File_) isAssistantContent_Data() {}

func (*AssistantContent_ExecutableCode_) isAssistantContent_Data() {}

func (*AssistantContent_CodeExecutionResult_) isAssistantContent_Data() {}

// A piece of content and possibly its grounding information.
//
// Not all content needs grounding. Phrases like "Of course, I will gladly
// search it for you." do not need grounding.
type AssistantGroundedContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Grounding metadata for various modals. It only supports text for now.
	//
	// Types that are assignable to Metadata:
	//
	//	*AssistantGroundedContent_TextGroundingMetadata_
	Metadata isAssistantGroundedContent_Metadata `protobuf_oneof:"metadata"`
	// The content.
	Content *AssistantContent `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AssistantGroundedContent) Reset() {
	*x = AssistantGroundedContent{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantGroundedContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantGroundedContent) ProtoMessage() {}

func (x *AssistantGroundedContent) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantGroundedContent.ProtoReflect.Descriptor instead.
func (*AssistantGroundedContent) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{2}
}

func (m *AssistantGroundedContent) GetMetadata() isAssistantGroundedContent_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *AssistantGroundedContent) GetTextGroundingMetadata() *AssistantGroundedContent_TextGroundingMetadata {
	if x, ok := x.GetMetadata().(*AssistantGroundedContent_TextGroundingMetadata_); ok {
		return x.TextGroundingMetadata
	}
	return nil
}

func (x *AssistantGroundedContent) GetContent() *AssistantContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type isAssistantGroundedContent_Metadata interface {
	isAssistantGroundedContent_Metadata()
}

type AssistantGroundedContent_TextGroundingMetadata_ struct {
	// Metadata for grounding based on text sources.
	TextGroundingMetadata *AssistantGroundedContent_TextGroundingMetadata `protobuf:"bytes,3,opt,name=text_grounding_metadata,json=textGroundingMetadata,proto3,oneof"`
}

func (*AssistantGroundedContent_TextGroundingMetadata_) isAssistantGroundedContent_Metadata() {}

// One part of the multi-part response of the assist call.
type AssistAnswer_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Alternatives for the assistant reply.
	//
	// Types that are assignable to Reply:
	//
	//	*AssistAnswer_Reply_GroundedContent
	Reply isAssistAnswer_Reply_Reply `protobuf_oneof:"reply"`
}

func (x *AssistAnswer_Reply) Reset() {
	*x = AssistAnswer_Reply{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistAnswer_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistAnswer_Reply) ProtoMessage() {}

func (x *AssistAnswer_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistAnswer_Reply.ProtoReflect.Descriptor instead.
func (*AssistAnswer_Reply) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{0, 0}
}

func (m *AssistAnswer_Reply) GetReply() isAssistAnswer_Reply_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (x *AssistAnswer_Reply) GetGroundedContent() *AssistantGroundedContent {
	if x, ok := x.GetReply().(*AssistAnswer_Reply_GroundedContent); ok {
		return x.GroundedContent
	}
	return nil
}

type isAssistAnswer_Reply_Reply interface {
	isAssistAnswer_Reply_Reply()
}

type AssistAnswer_Reply_GroundedContent struct {
	// Possibly grounded response text or media from the assistant.
	GroundedContent *AssistantGroundedContent `protobuf:"bytes,1,opt,name=grounded_content,json=groundedContent,proto3,oneof"`
}

func (*AssistAnswer_Reply_GroundedContent) isAssistAnswer_Reply_Reply() {}

// Inline blob.
type AssistantContent_Blob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The media type (MIME type) of the generated data.
	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Required. Raw bytes.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AssistantContent_Blob) Reset() {
	*x = AssistantContent_Blob{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantContent_Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantContent_Blob) ProtoMessage() {}

func (x *AssistantContent_Blob) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantContent_Blob.ProtoReflect.Descriptor instead.
func (*AssistantContent_Blob) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AssistantContent_Blob) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *AssistantContent_Blob) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// A file, e.g., an audio summary.
type AssistantContent_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The media type (MIME type) of the file.
	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Required. The file ID.
	FileId string `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
}

func (x *AssistantContent_File) Reset() {
	*x = AssistantContent_File{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantContent_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantContent_File) ProtoMessage() {}

func (x *AssistantContent_File) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantContent_File.ProtoReflect.Descriptor instead.
func (*AssistantContent_File) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AssistantContent_File) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *AssistantContent_File) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

// Code generated by the model that is meant to be executed by the model.
type AssistantContent_ExecutableCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The code content. Currently only supports Python.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AssistantContent_ExecutableCode) Reset() {
	*x = AssistantContent_ExecutableCode{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantContent_ExecutableCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantContent_ExecutableCode) ProtoMessage() {}

func (x *AssistantContent_ExecutableCode) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantContent_ExecutableCode.ProtoReflect.Descriptor instead.
func (*AssistantContent_ExecutableCode) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AssistantContent_ExecutableCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Result of executing ExecutableCode.
type AssistantContent_CodeExecutionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Outcome of the code execution.
	Outcome AssistantContent_CodeExecutionResult_Outcome `protobuf:"varint,1,opt,name=outcome,proto3,enum=google.cloud.discoveryengine.v1.AssistantContent_CodeExecutionResult_Outcome" json:"outcome,omitempty"`
	// Optional. Contains stdout when code execution is successful, stderr or
	// other description otherwise.
	Output string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *AssistantContent_CodeExecutionResult) Reset() {
	*x = AssistantContent_CodeExecutionResult{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantContent_CodeExecutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantContent_CodeExecutionResult) ProtoMessage() {}

func (x *AssistantContent_CodeExecutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantContent_CodeExecutionResult.ProtoReflect.Descriptor instead.
func (*AssistantContent_CodeExecutionResult) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{1, 3}
}

func (x *AssistantContent_CodeExecutionResult) GetOutcome() AssistantContent_CodeExecutionResult_Outcome {
	if x != nil {
		return x.Outcome
	}
	return AssistantContent_CodeExecutionResult_OUTCOME_UNSPECIFIED
}

func (x *AssistantContent_CodeExecutionResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

// Grounding details for text sources.
type AssistantGroundedContent_TextGroundingMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Grounding information for parts of the text.
	Segments []*AssistantGroundedContent_TextGroundingMetadata_Segment `protobuf:"bytes,4,rep,name=segments,proto3" json:"segments,omitempty"`
	// References for the grounded text.
	References []*AssistantGroundedContent_TextGroundingMetadata_Reference `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *AssistantGroundedContent_TextGroundingMetadata) Reset() {
	*x = AssistantGroundedContent_TextGroundingMetadata{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantGroundedContent_TextGroundingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantGroundedContent_TextGroundingMetadata) ProtoMessage() {}

func (x *AssistantGroundedContent_TextGroundingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantGroundedContent_TextGroundingMetadata.ProtoReflect.Descriptor instead.
func (*AssistantGroundedContent_TextGroundingMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AssistantGroundedContent_TextGroundingMetadata) GetSegments() []*AssistantGroundedContent_TextGroundingMetadata_Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *AssistantGroundedContent_TextGroundingMetadata) GetReferences() []*AssistantGroundedContent_TextGroundingMetadata_Reference {
	if x != nil {
		return x.References
	}
	return nil
}

// Grounding information for a segment of the text.
type AssistantGroundedContent_TextGroundingMetadata_Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Zero-based index indicating the start of the segment, measured in bytes
	// of a UTF-8 string (i.e. characters encoded on multiple bytes have a
	// length of more than one).
	StartIndex int64 `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	// End of the segment, exclusive.
	EndIndex int64 `protobuf:"varint,2,opt,name=end_index,json=endIndex,proto3" json:"end_index,omitempty"`
	// References for the segment.
	ReferenceIndices []int32 `protobuf:"varint,4,rep,packed,name=reference_indices,json=referenceIndices,proto3" json:"reference_indices,omitempty"`
	// Score for the segment.
	GroundingScore float32 `protobuf:"fixed32,5,opt,name=grounding_score,json=groundingScore,proto3" json:"grounding_score,omitempty"`
	// The text segment itself.
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) Reset() {
	*x = AssistantGroundedContent_TextGroundingMetadata_Segment{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantGroundedContent_TextGroundingMetadata_Segment) ProtoMessage() {}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantGroundedContent_TextGroundingMetadata_Segment.ProtoReflect.Descriptor instead.
func (*AssistantGroundedContent_TextGroundingMetadata_Segment) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) GetStartIndex() int64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) GetEndIndex() int64 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) GetReferenceIndices() []int32 {
	if x != nil {
		return x.ReferenceIndices
	}
	return nil
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) GetGroundingScore() float32 {
	if x != nil {
		return x.GroundingScore
	}
	return 0
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Segment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Referenced content and related document metadata.
type AssistantGroundedContent_TextGroundingMetadata_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Referenced text content.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// Document metadata.
	DocumentMetadata *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata `protobuf:"bytes,2,opt,name=document_metadata,json=documentMetadata,proto3" json:"document_metadata,omitempty"`
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference) Reset() {
	*x = AssistantGroundedContent_TextGroundingMetadata_Reference{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantGroundedContent_TextGroundingMetadata_Reference) ProtoMessage() {}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantGroundedContent_TextGroundingMetadata_Reference.ProtoReflect.Descriptor instead.
func (*AssistantGroundedContent_TextGroundingMetadata_Reference) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{2, 0, 1}
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference) GetDocumentMetadata() *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata {
	if x != nil {
		return x.DocumentMetadata
	}
	return nil
}

// Document metadata.
type AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Document resource name.
	Document *string `protobuf:"bytes,1,opt,name=document,proto3,oneof" json:"document,omitempty"`
	// URI for the document. It may contain a URL that redirects to the
	// actual website.
	Uri *string `protobuf:"bytes,2,opt,name=uri,proto3,oneof" json:"uri,omitempty"`
	// Title.
	Title *string `protobuf:"bytes,3,opt,name=title,proto3,oneof" json:"title,omitempty"`
	// Page identifier.
	PageIdentifier *string `protobuf:"bytes,4,opt,name=page_identifier,json=pageIdentifier,proto3,oneof" json:"page_identifier,omitempty"`
	// Domain name from the document URI. Note that the `uri` field may
	// contain a URL that redirects to the actual website, in which case
	// this will contain the domain name of the target site.
	Domain *string `protobuf:"bytes,5,opt,name=domain,proto3,oneof" json:"domain,omitempty"`
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) Reset() {
	*x = AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata{}
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) ProtoMessage() {}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata.ProtoReflect.Descriptor instead.
func (*AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP(), []int{2, 0, 1, 0}
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) GetDocument() string {
	if x != nil && x.Document != nil {
		return *x.Document
	}
	return ""
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) GetPageIdentifier() string {
	if x != nil && x.PageIdentifier != nil {
		return *x.PageIdentifier
	}
	return ""
}

func (x *AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

var File_google_cloud_discoveryengine_v1_assist_answer_proto protoreflect.FileDescriptor

var file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDesc = []byte{
	0x0a, 0x33, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xca, 0x06, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x5f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x14, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x1a,
	0x78, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x07, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x57, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f,
	0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45,
	0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44,
	0x10, 0x04, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x53, 0x6b, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x53,
	0x53, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x53, 0x54, 0x5f,
	0x53, 0x45, 0x45, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x49, 0x47,
	0x4e, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x3a, 0xb6, 0x01, 0xea, 0x41, 0xb2, 0x01, 0x0a, 0x2b, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x82, 0x01, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x7d, 0x2f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x7d, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x7d, 0x22,
	0xb6, 0x07, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x59, 0x0a, 0x0b, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x6b, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x7b, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x07, 0x74, 0x68, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x74, 0x68, 0x6f, 0x75, 0x67, 0x68, 0x74,
	0x1a, 0x41, 0x0a, 0x04, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x46, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6d,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x1a, 0x29, 0x0a, 0x0e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x87, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x64, 0x65, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6c,
	0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x65, 0x0a, 0x07, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x44, 0x45, 0x41,
	0x44, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03,
	0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9e, 0x09, 0x0a, 0x18, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x17, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x15, 0x74, 0x65, 0x78, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x4b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x9c,
	0x07, 0x0a, 0x15, 0x54, 0x65, 0x78, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x73, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x79, 0x0a,
	0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x59, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0xb1, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xde, 0x03, 0x0a,
	0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x97, 0x01, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x6a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x9c,
	0x02, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0xfa, 0x41, 0x29, 0x0a, 0x27, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x03, 0x75, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0e, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x75, 0x72, 0x69, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x84, 0x02, 0x0a, 0x23, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x42, 0x11, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x70, 0x62, 0x3b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x70, 0x62, 0xa2, 0x02, 0x0f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x59, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0xaa, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x22, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescOnce sync.Once
	file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescData = file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDesc
)

func file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescGZIP() []byte {
	file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescOnce.Do(func() {
		file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescData)
	})
	return file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDescData
}

var file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_google_cloud_discoveryengine_v1_assist_answer_proto_goTypes = []any{
	(AssistAnswer_State)(0),                                                           // 0: google.cloud.discoveryengine.v1.AssistAnswer.State
	(AssistAnswer_AssistSkippedReason)(0),                                             // 1: google.cloud.discoveryengine.v1.AssistAnswer.AssistSkippedReason
	(AssistantContent_CodeExecutionResult_Outcome)(0),                                 // 2: google.cloud.discoveryengine.v1.AssistantContent.CodeExecutionResult.Outcome
	(*AssistAnswer)(nil),                                                              // 3: google.cloud.discoveryengine.v1.AssistAnswer
	(*AssistantContent)(nil),                                                          // 4: google.cloud.discoveryengine.v1.AssistantContent
	(*AssistantGroundedContent)(nil),                                                  // 5: google.cloud.discoveryengine.v1.AssistantGroundedContent
	(*AssistAnswer_Reply)(nil),                                                        // 6: google.cloud.discoveryengine.v1.AssistAnswer.Reply
	(*AssistantContent_Blob)(nil),                                                     // 7: google.cloud.discoveryengine.v1.AssistantContent.Blob
	(*AssistantContent_File)(nil),                                                     // 8: google.cloud.discoveryengine.v1.AssistantContent.File
	(*AssistantContent_ExecutableCode)(nil),                                           // 9: google.cloud.discoveryengine.v1.AssistantContent.ExecutableCode
	(*AssistantContent_CodeExecutionResult)(nil),                                      // 10: google.cloud.discoveryengine.v1.AssistantContent.CodeExecutionResult
	(*AssistantGroundedContent_TextGroundingMetadata)(nil),                            // 11: google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata
	(*AssistantGroundedContent_TextGroundingMetadata_Segment)(nil),                    // 12: google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Segment
	(*AssistantGroundedContent_TextGroundingMetadata_Reference)(nil),                  // 13: google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Reference
	(*AssistantGroundedContent_TextGroundingMetadata_Reference_DocumentMetadata)(nil), // 14: google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Reference.DocumentMetadata
}
var file_google_cloud_discoveryengine_v1_assist_answer_proto_depIdxs = []int32{
	0,  // 0: google.cloud.discoveryengine.v1.AssistAnswer.state:type_name -> google.cloud.discoveryengine.v1.AssistAnswer.State
	6,  // 1: google.cloud.discoveryengine.v1.AssistAnswer.replies:type_name -> google.cloud.discoveryengine.v1.AssistAnswer.Reply
	1,  // 2: google.cloud.discoveryengine.v1.AssistAnswer.assist_skipped_reasons:type_name -> google.cloud.discoveryengine.v1.AssistAnswer.AssistSkippedReason
	7,  // 3: google.cloud.discoveryengine.v1.AssistantContent.inline_data:type_name -> google.cloud.discoveryengine.v1.AssistantContent.Blob
	8,  // 4: google.cloud.discoveryengine.v1.AssistantContent.file:type_name -> google.cloud.discoveryengine.v1.AssistantContent.File
	9,  // 5: google.cloud.discoveryengine.v1.AssistantContent.executable_code:type_name -> google.cloud.discoveryengine.v1.AssistantContent.ExecutableCode
	10, // 6: google.cloud.discoveryengine.v1.AssistantContent.code_execution_result:type_name -> google.cloud.discoveryengine.v1.AssistantContent.CodeExecutionResult
	11, // 7: google.cloud.discoveryengine.v1.AssistantGroundedContent.text_grounding_metadata:type_name -> google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata
	4,  // 8: google.cloud.discoveryengine.v1.AssistantGroundedContent.content:type_name -> google.cloud.discoveryengine.v1.AssistantContent
	5,  // 9: google.cloud.discoveryengine.v1.AssistAnswer.Reply.grounded_content:type_name -> google.cloud.discoveryengine.v1.AssistantGroundedContent
	2,  // 10: google.cloud.discoveryengine.v1.AssistantContent.CodeExecutionResult.outcome:type_name -> google.cloud.discoveryengine.v1.AssistantContent.CodeExecutionResult.Outcome
	12, // 11: google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.segments:type_name -> google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Segment
	13, // 12: google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.references:type_name -> google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Reference
	14, // 13: google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Reference.document_metadata:type_name -> google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Reference.DocumentMetadata
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_google_cloud_discoveryengine_v1_assist_answer_proto_init() }
func file_google_cloud_discoveryengine_v1_assist_answer_proto_init() {
	if File_google_cloud_discoveryengine_v1_assist_answer_proto != nil {
		return
	}
	file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[1].OneofWrappers = []any{
		(*AssistantContent_Text)(nil),
		(*AssistantContent_InlineData)(nil),
		(*AssistantContent_File_)(nil),
		(*AssistantContent_ExecutableCode_)(nil),
		(*AssistantContent_CodeExecutionResult_)(nil),
	}
	file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[2].OneofWrappers = []any{
		(*AssistantGroundedContent_TextGroundingMetadata_)(nil),
	}
	file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[3].OneofWrappers = []any{
		(*AssistAnswer_Reply_GroundedContent)(nil),
	}
	file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_discoveryengine_v1_assist_answer_proto_goTypes,
		DependencyIndexes: file_google_cloud_discoveryengine_v1_assist_answer_proto_depIdxs,
		EnumInfos:         file_google_cloud_discoveryengine_v1_assist_answer_proto_enumTypes,
		MessageInfos:      file_google_cloud_discoveryengine_v1_assist_answer_proto_msgTypes,
	}.Build()
	File_google_cloud_discoveryengine_v1_assist_answer_proto = out.File
	file_google_cloud_discoveryengine_v1_assist_answer_proto_rawDesc = nil
	file_google_cloud_discoveryengine_v1_assist_answer_proto_goTypes = nil
	file_google_cloud_discoveryengine_v1_assist_answer_proto_depIdxs = nil
}
