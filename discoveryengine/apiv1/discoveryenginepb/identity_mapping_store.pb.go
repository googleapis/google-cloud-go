// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/discoveryengine/v1/identity_mapping_store.proto

package discoveryenginepb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Identity Mapping Store which contains Identity Mapping Entries.
type IdentityMappingStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. The full resource name of the identity mapping store.
	// Format:
	// `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
	// This field must be a UTF-8 encoded string with a length limit of 1024
	// characters.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Input only. The KMS key to be used to protect this Identity Mapping Store
	// at creation time.
	//
	// Must be set for requests that need to comply with CMEK Org Policy
	// protections.
	//
	// If this field is set and processed successfully, the Identity Mapping Store
	// will be protected by the KMS key, as indicated in the cmek_config field.
	KmsKeyName string `protobuf:"bytes,3,opt,name=kms_key_name,json=kmsKeyName,proto3" json:"kms_key_name,omitempty"`
	// Output only. CMEK-related information for the Identity Mapping Store.
	CmekConfig *CmekConfig `protobuf:"bytes,4,opt,name=cmek_config,json=cmekConfig,proto3" json:"cmek_config,omitempty"`
}

func (x *IdentityMappingStore) Reset() {
	*x = IdentityMappingStore{}
	mi := &file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityMappingStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityMappingStore) ProtoMessage() {}

func (x *IdentityMappingStore) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityMappingStore.ProtoReflect.Descriptor instead.
func (*IdentityMappingStore) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescGZIP(), []int{0}
}

func (x *IdentityMappingStore) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IdentityMappingStore) GetKmsKeyName() string {
	if x != nil {
		return x.KmsKeyName
	}
	return ""
}

func (x *IdentityMappingStore) GetCmekConfig() *CmekConfig {
	if x != nil {
		return x.CmekConfig
	}
	return nil
}

// Identity Mapping Entry that maps an external identity to an internal
// identity.
type IdentityMappingEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Union field identity_provider_id. Identity Provider id can be a user or a
	// group.
	//
	// Types that are assignable to IdentityProviderId:
	//
	//	*IdentityMappingEntry_UserId
	//	*IdentityMappingEntry_GroupId
	IdentityProviderId isIdentityMappingEntry_IdentityProviderId `protobuf_oneof:"identity_provider_id"`
	// Required. Identity outside the customer identity provider.
	// The length limit of external identity will be of 100 characters.
	ExternalIdentity string `protobuf:"bytes,1,opt,name=external_identity,json=externalIdentity,proto3" json:"external_identity,omitempty"`
}

func (x *IdentityMappingEntry) Reset() {
	*x = IdentityMappingEntry{}
	mi := &file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityMappingEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityMappingEntry) ProtoMessage() {}

func (x *IdentityMappingEntry) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityMappingEntry.ProtoReflect.Descriptor instead.
func (*IdentityMappingEntry) Descriptor() ([]byte, []int) {
	return file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescGZIP(), []int{1}
}

func (m *IdentityMappingEntry) GetIdentityProviderId() isIdentityMappingEntry_IdentityProviderId {
	if m != nil {
		return m.IdentityProviderId
	}
	return nil
}

func (x *IdentityMappingEntry) GetUserId() string {
	if x, ok := x.GetIdentityProviderId().(*IdentityMappingEntry_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *IdentityMappingEntry) GetGroupId() string {
	if x, ok := x.GetIdentityProviderId().(*IdentityMappingEntry_GroupId); ok {
		return x.GroupId
	}
	return ""
}

func (x *IdentityMappingEntry) GetExternalIdentity() string {
	if x != nil {
		return x.ExternalIdentity
	}
	return ""
}

type isIdentityMappingEntry_IdentityProviderId interface {
	isIdentityMappingEntry_IdentityProviderId()
}

type IdentityMappingEntry_UserId struct {
	// User identifier.
	// For Google Workspace user account, user_id should be the google workspace
	// user email.
	// For non-google identity provider, user_id is the mapped user identifier
	// configured during the workforcepool config.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type IdentityMappingEntry_GroupId struct {
	// Group identifier.
	// For Google Workspace user account, group_id should be the google
	// workspace group email.
	// For non-google identity provider, group_id is the mapped group identifier
	// configured during the workforcepool config.
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3,oneof"`
}

func (*IdentityMappingEntry_UserId) isIdentityMappingEntry_IdentityProviderId() {}

func (*IdentityMappingEntry_GroupId) isIdentityMappingEntry_IdentityProviderId() {}

var File_google_cloud_discoveryengine_v1_identity_mapping_store_proto protoreflect.FileDescriptor

var file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6d, 0x65,
	0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x02, 0x0a, 0x14, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x05, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0c, 0x6b, 0x6d, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x04, 0x52, 0x0a, 0x6b, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x51, 0x0a, 0x0b, 0x63, 0x6d, 0x65, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6d, 0x65, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x6d, 0x65, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x3a, 0x91, 0x01, 0xea, 0x41, 0x8d, 0x01, 0x0a, 0x33, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x56,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x7d, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x19, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x16, 0x0a, 0x14, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x42, 0x8c, 0x02, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x19, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x70, 0x62, 0x3b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x70, 0x62, 0xa2, 0x02, 0x0f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x59, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0xaa, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x22, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescOnce sync.Once
	file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescData = file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDesc
)

func file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescGZIP() []byte {
	file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescOnce.Do(func() {
		file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescData)
	})
	return file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDescData
}

var file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_goTypes = []any{
	(*IdentityMappingStore)(nil), // 0: google.cloud.discoveryengine.v1.IdentityMappingStore
	(*IdentityMappingEntry)(nil), // 1: google.cloud.discoveryengine.v1.IdentityMappingEntry
	(*CmekConfig)(nil),           // 2: google.cloud.discoveryengine.v1.CmekConfig
}
var file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_depIdxs = []int32{
	2, // 0: google.cloud.discoveryengine.v1.IdentityMappingStore.cmek_config:type_name -> google.cloud.discoveryengine.v1.CmekConfig
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_init() }
func file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_init() {
	if File_google_cloud_discoveryengine_v1_identity_mapping_store_proto != nil {
		return
	}
	file_google_cloud_discoveryengine_v1_cmek_config_service_proto_init()
	file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_msgTypes[1].OneofWrappers = []any{
		(*IdentityMappingEntry_UserId)(nil),
		(*IdentityMappingEntry_GroupId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_goTypes,
		DependencyIndexes: file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_depIdxs,
		MessageInfos:      file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_msgTypes,
	}.Build()
	File_google_cloud_discoveryengine_v1_identity_mapping_store_proto = out.File
	file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_rawDesc = nil
	file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_goTypes = nil
	file_google_cloud_discoveryengine_v1_identity_mapping_store_proto_depIdxs = nil
}
