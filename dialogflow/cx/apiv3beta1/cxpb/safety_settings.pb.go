// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.3
// source: google/cloud/dialogflow/cx/v3beta1/safety_settings.proto

package cxpb

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Strategy for matching phrases.
type SafetySettings_PhraseMatchStrategy int32

const (
	// Unspecified, defaults to PARTIAL_MATCH.
	SafetySettings_PHRASE_MATCH_STRATEGY_UNSPECIFIED SafetySettings_PhraseMatchStrategy = 0
	// Text that contains the phrase as a substring will be matched, e.g. "foo"
	// will match "afoobar".
	SafetySettings_PARTIAL_MATCH SafetySettings_PhraseMatchStrategy = 1
	// Text that contains the tokenized words of the phrase will be matched,
	// e.g. "foo" will match "a foo bar" and "foo bar", but not "foobar".
	SafetySettings_WORD_MATCH SafetySettings_PhraseMatchStrategy = 2
)

// Enum value maps for SafetySettings_PhraseMatchStrategy.
var (
	SafetySettings_PhraseMatchStrategy_name = map[int32]string{
		0: "PHRASE_MATCH_STRATEGY_UNSPECIFIED",
		1: "PARTIAL_MATCH",
		2: "WORD_MATCH",
	}
	SafetySettings_PhraseMatchStrategy_value = map[string]int32{
		"PHRASE_MATCH_STRATEGY_UNSPECIFIED": 0,
		"PARTIAL_MATCH":                     1,
		"WORD_MATCH":                        2,
	}
)

func (x SafetySettings_PhraseMatchStrategy) Enum() *SafetySettings_PhraseMatchStrategy {
	p := new(SafetySettings_PhraseMatchStrategy)
	*p = x
	return p
}

func (x SafetySettings_PhraseMatchStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SafetySettings_PhraseMatchStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_enumTypes[0].Descriptor()
}

func (SafetySettings_PhraseMatchStrategy) Type() protoreflect.EnumType {
	return &file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_enumTypes[0]
}

func (x SafetySettings_PhraseMatchStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SafetySettings_PhraseMatchStrategy.Descriptor instead.
func (SafetySettings_PhraseMatchStrategy) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescGZIP(), []int{0, 0}
}

// Settings for Generative Safety.
type SafetySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Default phrase match strategy for banned phrases.
	DefaultBannedPhraseMatchStrategy SafetySettings_PhraseMatchStrategy `protobuf:"varint,4,opt,name=default_banned_phrase_match_strategy,json=defaultBannedPhraseMatchStrategy,proto3,enum=google.cloud.dialogflow.cx.v3beta1.SafetySettings_PhraseMatchStrategy" json:"default_banned_phrase_match_strategy,omitempty"`
	// Banned phrases for generated text.
	BannedPhrases []*SafetySettings_Phrase `protobuf:"bytes,1,rep,name=banned_phrases,json=bannedPhrases,proto3" json:"banned_phrases,omitempty"`
}

func (x *SafetySettings) Reset() {
	*x = SafetySettings{}
	mi := &file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SafetySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafetySettings) ProtoMessage() {}

func (x *SafetySettings) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafetySettings.ProtoReflect.Descriptor instead.
func (*SafetySettings) Descriptor() ([]byte, []int) {
	return file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescGZIP(), []int{0}
}

func (x *SafetySettings) GetDefaultBannedPhraseMatchStrategy() SafetySettings_PhraseMatchStrategy {
	if x != nil {
		return x.DefaultBannedPhraseMatchStrategy
	}
	return SafetySettings_PHRASE_MATCH_STRATEGY_UNSPECIFIED
}

func (x *SafetySettings) GetBannedPhrases() []*SafetySettings_Phrase {
	if x != nil {
		return x.BannedPhrases
	}
	return nil
}

// Text input which can be used for prompt or banned phrases.
type SafetySettings_Phrase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Text input which can be used for prompt or banned phrases.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Required. Language code of the phrase.
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *SafetySettings_Phrase) Reset() {
	*x = SafetySettings_Phrase{}
	mi := &file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SafetySettings_Phrase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafetySettings_Phrase) ProtoMessage() {}

func (x *SafetySettings_Phrase) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafetySettings_Phrase.ProtoReflect.Descriptor instead.
func (*SafetySettings_Phrase) Descriptor() ([]byte, []int) {
	return file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SafetySettings_Phrase) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SafetySettings_Phrase) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

var File_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto protoreflect.FileDescriptor

var file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDesc = []byte{
	0x0a, 0x38, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x78, 0x2f, 0x76, 0x33, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x78, 0x2e, 0x76, 0x33, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xbe, 0x03, 0x0a, 0x0e, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x78, 0x2e, 0x76,
	0x33, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x20,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x60, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x63, 0x78, 0x2e, 0x76, 0x33, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x73, 0x1a, 0x4b, 0x0a, 0x06, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x5f, 0x0a, 0x13, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x48, 0x52, 0x41, 0x53, 0x45,
	0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x02,
	0x42, 0xca, 0x01, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x63, 0x78, 0x2e, 0x76, 0x33, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x13, 0x53, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x36, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x63, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x33, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x63, 0x78, 0x70, 0x62, 0x3b, 0x63, 0x78, 0x70, 0x62, 0xa2, 0x02, 0x02, 0x44, 0x46, 0xaa,
	0x02, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x78, 0x2e, 0x56, 0x33, 0x42,
	0x65, 0x74, 0x61, 0x31, 0xea, 0x02, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x66, 0x6c, 0x6f, 0x77,
	0x3a, 0x3a, 0x43, 0x58, 0x3a, 0x3a, 0x56, 0x33, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescOnce sync.Once
	file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescData = file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDesc
)

func file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescGZIP() []byte {
	file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescOnce.Do(func() {
		file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescData)
	})
	return file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDescData
}

var file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_goTypes = []any{
	(SafetySettings_PhraseMatchStrategy)(0), // 0: google.cloud.dialogflow.cx.v3beta1.SafetySettings.PhraseMatchStrategy
	(*SafetySettings)(nil),                  // 1: google.cloud.dialogflow.cx.v3beta1.SafetySettings
	(*SafetySettings_Phrase)(nil),           // 2: google.cloud.dialogflow.cx.v3beta1.SafetySettings.Phrase
}
var file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_depIdxs = []int32{
	0, // 0: google.cloud.dialogflow.cx.v3beta1.SafetySettings.default_banned_phrase_match_strategy:type_name -> google.cloud.dialogflow.cx.v3beta1.SafetySettings.PhraseMatchStrategy
	2, // 1: google.cloud.dialogflow.cx.v3beta1.SafetySettings.banned_phrases:type_name -> google.cloud.dialogflow.cx.v3beta1.SafetySettings.Phrase
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_init() }
func file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_init() {
	if File_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_goTypes,
		DependencyIndexes: file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_depIdxs,
		EnumInfos:         file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_enumTypes,
		MessageInfos:      file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_msgTypes,
	}.Build()
	File_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto = out.File
	file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_rawDesc = nil
	file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_goTypes = nil
	file_google_cloud_dialogflow_cx_v3beta1_safety_settings_proto_depIdxs = nil
}
