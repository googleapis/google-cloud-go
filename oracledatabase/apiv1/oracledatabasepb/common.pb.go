// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/oracledatabase/v1/common.proto

package oracledatabasepb

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The compute model of the Exadata Infrastructure, VM Cluster and Autonomous
// Database.
type ComputeModel int32

const (
	// Unspecified compute model.
	ComputeModel_COMPUTE_MODEL_UNSPECIFIED ComputeModel = 0
	// Abstract measure of compute resources. ECPUs are based on the number of
	// cores elastically allocated from a pool of compute and storage servers.
	ComputeModel_COMPUTE_MODEL_ECPU ComputeModel = 1
	// Physical measure of compute resources. OCPUs are based on the physical
	// core of a processor.
	ComputeModel_COMPUTE_MODEL_OCPU ComputeModel = 2
)

// Enum value maps for ComputeModel.
var (
	ComputeModel_name = map[int32]string{
		0: "COMPUTE_MODEL_UNSPECIFIED",
		1: "COMPUTE_MODEL_ECPU",
		2: "COMPUTE_MODEL_OCPU",
	}
	ComputeModel_value = map[string]int32{
		"COMPUTE_MODEL_UNSPECIFIED": 0,
		"COMPUTE_MODEL_ECPU":        1,
		"COMPUTE_MODEL_OCPU":        2,
	}
)

func (x ComputeModel) Enum() *ComputeModel {
	p := new(ComputeModel)
	*p = x
	return p
}

func (x ComputeModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputeModel) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_oracledatabase_v1_common_proto_enumTypes[0].Descriptor()
}

func (ComputeModel) Type() protoreflect.EnumType {
	return &file_google_cloud_oracledatabase_v1_common_proto_enumTypes[0]
}

func (x ComputeModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputeModel.Descriptor instead.
func (ComputeModel) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_oracledatabase_v1_common_proto_rawDescGZIP(), []int{0}
}

// The various connection states of the WorkloadIdentityPoolConnection.
type IdentityConnector_ConnectionState int32

const (
	// Default unspecified value.
	IdentityConnector_CONNECTION_STATE_UNSPECIFIED IdentityConnector_ConnectionState = 0
	// The identity pool connection is connected.
	IdentityConnector_CONNECTED IdentityConnector_ConnectionState = 1
	// The identity pool connection is partially connected.
	IdentityConnector_PARTIALLY_CONNECTED IdentityConnector_ConnectionState = 2
	// The identity pool connection is disconnected.
	IdentityConnector_DISCONNECTED IdentityConnector_ConnectionState = 3
	// The identity pool connection is in an unknown state.
	IdentityConnector_UNKNOWN IdentityConnector_ConnectionState = 4
)

// Enum value maps for IdentityConnector_ConnectionState.
var (
	IdentityConnector_ConnectionState_name = map[int32]string{
		0: "CONNECTION_STATE_UNSPECIFIED",
		1: "CONNECTED",
		2: "PARTIALLY_CONNECTED",
		3: "DISCONNECTED",
		4: "UNKNOWN",
	}
	IdentityConnector_ConnectionState_value = map[string]int32{
		"CONNECTION_STATE_UNSPECIFIED": 0,
		"CONNECTED":                    1,
		"PARTIALLY_CONNECTED":          2,
		"DISCONNECTED":                 3,
		"UNKNOWN":                      4,
	}
)

func (x IdentityConnector_ConnectionState) Enum() *IdentityConnector_ConnectionState {
	p := new(IdentityConnector_ConnectionState)
	*p = x
	return p
}

func (x IdentityConnector_ConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityConnector_ConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_oracledatabase_v1_common_proto_enumTypes[1].Descriptor()
}

func (IdentityConnector_ConnectionState) Type() protoreflect.EnumType {
	return &file_google_cloud_oracledatabase_v1_common_proto_enumTypes[1]
}

func (x IdentityConnector_ConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityConnector_ConnectionState.Descriptor instead.
func (IdentityConnector_ConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_oracledatabase_v1_common_proto_rawDescGZIP(), []int{1, 0}
}

// The CustomerContact reference as defined by Oracle.
// https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/CustomerContact
type CustomerContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The email address used by Oracle to send notifications regarding
	// databases and infrastructure.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CustomerContact) Reset() {
	*x = CustomerContact{}
	mi := &file_google_cloud_oracledatabase_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerContact) ProtoMessage() {}

func (x *CustomerContact) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_oracledatabase_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerContact.ProtoReflect.Descriptor instead.
func (*CustomerContact) Descriptor() ([]byte, []int) {
	return file_google_cloud_oracledatabase_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *CustomerContact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// The identity connector details which will allow OCI to securely access
// the resources in the customer project.
type IdentityConnector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. A google managed service account on which customers can grant
	// roles to access resources in the customer project. Example:
	// `p176944527254-55-75119d87fd8f@gcp-sa-oci.iam.gserviceaccount.com`
	ServiceAgentEmail string `protobuf:"bytes,1,opt,name=service_agent_email,json=serviceAgentEmail,proto3" json:"service_agent_email,omitempty"`
	// Output only. The connection state of the identity connector.
	ConnectionState IdentityConnector_ConnectionState `protobuf:"varint,2,opt,name=connection_state,json=connectionState,proto3,enum=google.cloud.oracledatabase.v1.IdentityConnector_ConnectionState" json:"connection_state,omitempty"`
}

func (x *IdentityConnector) Reset() {
	*x = IdentityConnector{}
	mi := &file_google_cloud_oracledatabase_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityConnector) ProtoMessage() {}

func (x *IdentityConnector) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_oracledatabase_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityConnector.ProtoReflect.Descriptor instead.
func (*IdentityConnector) Descriptor() ([]byte, []int) {
	return file_google_cloud_oracledatabase_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *IdentityConnector) GetServiceAgentEmail() string {
	if x != nil {
		return x.ServiceAgentEmail
	}
	return ""
}

func (x *IdentityConnector) GetConnectionState() IdentityConnector_ConnectionState {
	if x != nil {
		return x.ConnectionState
	}
	return IdentityConnector_CONNECTION_STATE_UNSPECIFIED
}

// Data collection options for diagnostics.
// https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/DataCollectionOptions
type DataCollectionOptionsCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Indicates whether to enable data collection for diagnostics.
	IsDiagnosticsEventsEnabled bool `protobuf:"varint,1,opt,name=is_diagnostics_events_enabled,json=isDiagnosticsEventsEnabled,proto3" json:"is_diagnostics_events_enabled,omitempty"`
	// Optional. Indicates whether to enable health monitoring.
	IsHealthMonitoringEnabled bool `protobuf:"varint,2,opt,name=is_health_monitoring_enabled,json=isHealthMonitoringEnabled,proto3" json:"is_health_monitoring_enabled,omitempty"`
	// Optional. Indicates whether to enable incident logs and trace collection.
	IsIncidentLogsEnabled bool `protobuf:"varint,3,opt,name=is_incident_logs_enabled,json=isIncidentLogsEnabled,proto3" json:"is_incident_logs_enabled,omitempty"`
}

func (x *DataCollectionOptionsCommon) Reset() {
	*x = DataCollectionOptionsCommon{}
	mi := &file_google_cloud_oracledatabase_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataCollectionOptionsCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCollectionOptionsCommon) ProtoMessage() {}

func (x *DataCollectionOptionsCommon) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_oracledatabase_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCollectionOptionsCommon.ProtoReflect.Descriptor instead.
func (*DataCollectionOptionsCommon) Descriptor() ([]byte, []int) {
	return file_google_cloud_oracledatabase_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *DataCollectionOptionsCommon) GetIsDiagnosticsEventsEnabled() bool {
	if x != nil {
		return x.IsDiagnosticsEventsEnabled
	}
	return false
}

func (x *DataCollectionOptionsCommon) GetIsHealthMonitoringEnabled() bool {
	if x != nil {
		return x.IsHealthMonitoringEnabled
	}
	return false
}

func (x *DataCollectionOptionsCommon) GetIsIncidentLogsEnabled() bool {
	if x != nil {
		return x.IsIncidentLogsEnabled
	}
	return false
}

var File_google_cloud_oracledatabase_v1_common_proto protoreflect.FileDescriptor

var file_google_cloud_oracledatabase_v1_common_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c,
	0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xb7, 0x02, 0x0a,
	0x11, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x71, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x7a, 0x0a, 0x0f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x1c, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x22, 0xe9, 0x01, 0x0a, 0x1b, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x1d, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x1a, 0x69, 0x73, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x44,
	0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x19, 0x69, 0x73, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x15, 0x69, 0x73, 0x49,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x2a, 0x5d, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x4c, 0x5f, 0x45, 0x43, 0x50, 0x55, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d,
	0x50, 0x55, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4f, 0x43, 0x50, 0x55, 0x10,
	0x02, 0x42, 0xe5, 0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x70, 0x62, 0x3b, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x70, 0x62, 0xaa, 0x02, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_google_cloud_oracledatabase_v1_common_proto_rawDescOnce sync.Once
	file_google_cloud_oracledatabase_v1_common_proto_rawDescData = file_google_cloud_oracledatabase_v1_common_proto_rawDesc
)

func file_google_cloud_oracledatabase_v1_common_proto_rawDescGZIP() []byte {
	file_google_cloud_oracledatabase_v1_common_proto_rawDescOnce.Do(func() {
		file_google_cloud_oracledatabase_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_oracledatabase_v1_common_proto_rawDescData)
	})
	return file_google_cloud_oracledatabase_v1_common_proto_rawDescData
}

var file_google_cloud_oracledatabase_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_google_cloud_oracledatabase_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_google_cloud_oracledatabase_v1_common_proto_goTypes = []any{
	(ComputeModel)(0),                      // 0: google.cloud.oracledatabase.v1.ComputeModel
	(IdentityConnector_ConnectionState)(0), // 1: google.cloud.oracledatabase.v1.IdentityConnector.ConnectionState
	(*CustomerContact)(nil),                // 2: google.cloud.oracledatabase.v1.CustomerContact
	(*IdentityConnector)(nil),              // 3: google.cloud.oracledatabase.v1.IdentityConnector
	(*DataCollectionOptionsCommon)(nil),    // 4: google.cloud.oracledatabase.v1.DataCollectionOptionsCommon
}
var file_google_cloud_oracledatabase_v1_common_proto_depIdxs = []int32{
	1, // 0: google.cloud.oracledatabase.v1.IdentityConnector.connection_state:type_name -> google.cloud.oracledatabase.v1.IdentityConnector.ConnectionState
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_google_cloud_oracledatabase_v1_common_proto_init() }
func file_google_cloud_oracledatabase_v1_common_proto_init() {
	if File_google_cloud_oracledatabase_v1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_oracledatabase_v1_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_oracledatabase_v1_common_proto_goTypes,
		DependencyIndexes: file_google_cloud_oracledatabase_v1_common_proto_depIdxs,
		EnumInfos:         file_google_cloud_oracledatabase_v1_common_proto_enumTypes,
		MessageInfos:      file_google_cloud_oracledatabase_v1_common_proto_msgTypes,
	}.Build()
	File_google_cloud_oracledatabase_v1_common_proto = out.File
	file_google_cloud_oracledatabase_v1_common_proto_rawDesc = nil
	file_google_cloud_oracledatabase_v1_common_proto_goTypes = nil
	file_google_cloud_oracledatabase_v1_common_proto_depIdxs = nil
}
