// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/geminidataanalytics/v1beta/credentials.proto

package geminidataanalyticspb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents different forms of credential specification.
type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The kind of credentials.
	// }
	//
	// Types that are assignable to Kind:
	//
	//	*Credentials_Oauth
	Kind isCredentials_Kind `protobuf_oneof:"kind"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescGZIP(), []int{0}
}

func (m *Credentials) GetKind() isCredentials_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Credentials) GetOauth() *OAuthCredentials {
	if x, ok := x.GetKind().(*Credentials_Oauth); ok {
		return x.Oauth
	}
	return nil
}

type isCredentials_Kind interface {
	isCredentials_Kind()
}

type Credentials_Oauth struct {
	// OAuth credentials.
	Oauth *OAuthCredentials `protobuf:"bytes,1,opt,name=oauth,proto3,oneof"`
}

func (*Credentials_Oauth) isCredentials_Kind() {}

// Represents OAuth credentials.
type OAuthCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The kind of OAuth credentials.
	//
	// Types that are assignable to Kind:
	//
	//	*OAuthCredentials_Secret
	//	*OAuthCredentials_Token
	Kind isOAuthCredentials_Kind `protobuf_oneof:"kind"`
}

func (x *OAuthCredentials) Reset() {
	*x = OAuthCredentials{}
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuthCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthCredentials) ProtoMessage() {}

func (x *OAuthCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthCredentials.ProtoReflect.Descriptor instead.
func (*OAuthCredentials) Descriptor() ([]byte, []int) {
	return file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescGZIP(), []int{1}
}

func (m *OAuthCredentials) GetKind() isOAuthCredentials_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *OAuthCredentials) GetSecret() *OAuthCredentials_SecretBased {
	if x, ok := x.GetKind().(*OAuthCredentials_Secret); ok {
		return x.Secret
	}
	return nil
}

func (x *OAuthCredentials) GetToken() *OAuthCredentials_TokenBased {
	if x, ok := x.GetKind().(*OAuthCredentials_Token); ok {
		return x.Token
	}
	return nil
}

type isOAuthCredentials_Kind interface {
	isOAuthCredentials_Kind()
}

type OAuthCredentials_Secret struct {
	// Secret-based OAuth credentials.
	Secret *OAuthCredentials_SecretBased `protobuf:"bytes,2,opt,name=secret,proto3,oneof"`
}

type OAuthCredentials_Token struct {
	// Token-based OAuth credentials.
	Token *OAuthCredentials_TokenBased `protobuf:"bytes,3,opt,name=token,proto3,oneof"`
}

func (*OAuthCredentials_Secret) isOAuthCredentials_Kind() {}

func (*OAuthCredentials_Token) isOAuthCredentials_Kind() {}

// The name of the secret containing the access token.
// Represents secret-based OAuth credentials.
type OAuthCredentials_SecretBased struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. An OAuth client ID.
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Required. An OAuth client secret.
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *OAuthCredentials_SecretBased) Reset() {
	*x = OAuthCredentials_SecretBased{}
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuthCredentials_SecretBased) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthCredentials_SecretBased) ProtoMessage() {}

func (x *OAuthCredentials_SecretBased) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthCredentials_SecretBased.ProtoReflect.Descriptor instead.
func (*OAuthCredentials_SecretBased) Descriptor() ([]byte, []int) {
	return file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OAuthCredentials_SecretBased) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuthCredentials_SecretBased) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

// Read more about Looker access tokens here:
// https://developers.looker.com/api/advanced-usage/looker-api-oauth
type OAuthCredentials_TokenBased struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The name of the secret containing the access token.
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *OAuthCredentials_TokenBased) Reset() {
	*x = OAuthCredentials_TokenBased{}
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuthCredentials_TokenBased) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthCredentials_TokenBased) ProtoMessage() {}

func (x *OAuthCredentials_TokenBased) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthCredentials_TokenBased.ProtoReflect.Descriptor instead.
func (*OAuthCredentials_TokenBased) Descriptor() ([]byte, []int) {
	return file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescGZIP(), []int{1, 1}
}

func (x *OAuthCredentials_TokenBased) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

var File_google_cloud_geminidataanalytics_v1beta_credentials_proto protoreflect.FileDescriptor

var file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDesc = []byte{
	0x0a, 0x39, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67,
	0x65, 0x6d, 0x69, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69,
	0x64, 0x61, 0x74, 0x61, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x51, 0x0a, 0x05, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x05, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22,
	0xea, 0x02, 0x0a, 0x10, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x5f, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x1a, 0x59, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x34,
	0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x42, 0xa1, 0x02, 0x0a,
	0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x42, 0x10, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x5d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x61,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2f, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x70, 0x62, 0x3b, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69,
	0x64, 0x61, 0x74, 0x61, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x70, 0x62, 0xaa,
	0x02, 0x27, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x47,
	0x65, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x56, 0x31, 0x42, 0x65, 0x74, 0x61, 0xca, 0x02, 0x27, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x44,
	0x61, 0x74, 0x61, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5c, 0x56, 0x31, 0x62,
	0x65, 0x74, 0x61, 0xea, 0x02, 0x2a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescOnce sync.Once
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescData = file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDesc
)

func file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescGZIP() []byte {
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescOnce.Do(func() {
		file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescData)
	})
	return file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDescData
}

var file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_google_cloud_geminidataanalytics_v1beta_credentials_proto_goTypes = []any{
	(*Credentials)(nil),                  // 0: google.cloud.geminidataanalytics.v1beta.Credentials
	(*OAuthCredentials)(nil),             // 1: google.cloud.geminidataanalytics.v1beta.OAuthCredentials
	(*OAuthCredentials_SecretBased)(nil), // 2: google.cloud.geminidataanalytics.v1beta.OAuthCredentials.SecretBased
	(*OAuthCredentials_TokenBased)(nil),  // 3: google.cloud.geminidataanalytics.v1beta.OAuthCredentials.TokenBased
}
var file_google_cloud_geminidataanalytics_v1beta_credentials_proto_depIdxs = []int32{
	1, // 0: google.cloud.geminidataanalytics.v1beta.Credentials.oauth:type_name -> google.cloud.geminidataanalytics.v1beta.OAuthCredentials
	2, // 1: google.cloud.geminidataanalytics.v1beta.OAuthCredentials.secret:type_name -> google.cloud.geminidataanalytics.v1beta.OAuthCredentials.SecretBased
	3, // 2: google.cloud.geminidataanalytics.v1beta.OAuthCredentials.token:type_name -> google.cloud.geminidataanalytics.v1beta.OAuthCredentials.TokenBased
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_google_cloud_geminidataanalytics_v1beta_credentials_proto_init() }
func file_google_cloud_geminidataanalytics_v1beta_credentials_proto_init() {
	if File_google_cloud_geminidataanalytics_v1beta_credentials_proto != nil {
		return
	}
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[0].OneofWrappers = []any{
		(*Credentials_Oauth)(nil),
	}
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes[1].OneofWrappers = []any{
		(*OAuthCredentials_Secret)(nil),
		(*OAuthCredentials_Token)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_geminidataanalytics_v1beta_credentials_proto_goTypes,
		DependencyIndexes: file_google_cloud_geminidataanalytics_v1beta_credentials_proto_depIdxs,
		MessageInfos:      file_google_cloud_geminidataanalytics_v1beta_credentials_proto_msgTypes,
	}.Build()
	File_google_cloud_geminidataanalytics_v1beta_credentials_proto = out.File
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_rawDesc = nil
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_goTypes = nil
	file_google_cloud_geminidataanalytics_v1beta_credentials_proto_depIdxs = nil
}
