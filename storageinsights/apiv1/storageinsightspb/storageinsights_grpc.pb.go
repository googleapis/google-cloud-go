// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.7
// source: google/cloud/storageinsights/v1/storageinsights.proto

package storageinsightspb

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	StorageInsights_ListReportConfigs_FullMethodName   = "/google.cloud.storageinsights.v1.StorageInsights/ListReportConfigs"
	StorageInsights_GetReportConfig_FullMethodName     = "/google.cloud.storageinsights.v1.StorageInsights/GetReportConfig"
	StorageInsights_CreateReportConfig_FullMethodName  = "/google.cloud.storageinsights.v1.StorageInsights/CreateReportConfig"
	StorageInsights_UpdateReportConfig_FullMethodName  = "/google.cloud.storageinsights.v1.StorageInsights/UpdateReportConfig"
	StorageInsights_DeleteReportConfig_FullMethodName  = "/google.cloud.storageinsights.v1.StorageInsights/DeleteReportConfig"
	StorageInsights_ListReportDetails_FullMethodName   = "/google.cloud.storageinsights.v1.StorageInsights/ListReportDetails"
	StorageInsights_GetReportDetail_FullMethodName     = "/google.cloud.storageinsights.v1.StorageInsights/GetReportDetail"
	StorageInsights_ListDatasetConfigs_FullMethodName  = "/google.cloud.storageinsights.v1.StorageInsights/ListDatasetConfigs"
	StorageInsights_GetDatasetConfig_FullMethodName    = "/google.cloud.storageinsights.v1.StorageInsights/GetDatasetConfig"
	StorageInsights_CreateDatasetConfig_FullMethodName = "/google.cloud.storageinsights.v1.StorageInsights/CreateDatasetConfig"
	StorageInsights_UpdateDatasetConfig_FullMethodName = "/google.cloud.storageinsights.v1.StorageInsights/UpdateDatasetConfig"
	StorageInsights_DeleteDatasetConfig_FullMethodName = "/google.cloud.storageinsights.v1.StorageInsights/DeleteDatasetConfig"
	StorageInsights_LinkDataset_FullMethodName         = "/google.cloud.storageinsights.v1.StorageInsights/LinkDataset"
	StorageInsights_UnlinkDataset_FullMethodName       = "/google.cloud.storageinsights.v1.StorageInsights/UnlinkDataset"
)

// StorageInsightsClient is the client API for StorageInsights service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StorageInsightsClient interface {
	// Lists ReportConfigs in a given project and location.
	ListReportConfigs(ctx context.Context, in *ListReportConfigsRequest, opts ...grpc.CallOption) (*ListReportConfigsResponse, error)
	// Gets details of a single ReportConfig.
	GetReportConfig(ctx context.Context, in *GetReportConfigRequest, opts ...grpc.CallOption) (*ReportConfig, error)
	// Creates a new ReportConfig in a given project and location.
	CreateReportConfig(ctx context.Context, in *CreateReportConfigRequest, opts ...grpc.CallOption) (*ReportConfig, error)
	// Updates the parameters of a single ReportConfig.
	UpdateReportConfig(ctx context.Context, in *UpdateReportConfigRequest, opts ...grpc.CallOption) (*ReportConfig, error)
	// Deletes a single ReportConfig.
	DeleteReportConfig(ctx context.Context, in *DeleteReportConfigRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Lists ReportDetails in a given project and location.
	ListReportDetails(ctx context.Context, in *ListReportDetailsRequest, opts ...grpc.CallOption) (*ListReportDetailsResponse, error)
	// Gets details of a single ReportDetail.
	GetReportDetail(ctx context.Context, in *GetReportDetailRequest, opts ...grpc.CallOption) (*ReportDetail, error)
	// Lists the dataset configurations in a given project for a given location.
	ListDatasetConfigs(ctx context.Context, in *ListDatasetConfigsRequest, opts ...grpc.CallOption) (*ListDatasetConfigsResponse, error)
	// Gets the dataset configuration in a given project for a given location.
	GetDatasetConfig(ctx context.Context, in *GetDatasetConfigRequest, opts ...grpc.CallOption) (*DatasetConfig, error)
	// Creates a dataset configuration in a given project for a given location.
	CreateDatasetConfig(ctx context.Context, in *CreateDatasetConfigRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error)
	// Updates a dataset configuration in a given project for a given location.
	UpdateDatasetConfig(ctx context.Context, in *UpdateDatasetConfigRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error)
	// Deletes a dataset configuration in a given project for a given location.
	DeleteDatasetConfig(ctx context.Context, in *DeleteDatasetConfigRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error)
	// Links a dataset to BigQuery in a given project for a given location.
	LinkDataset(ctx context.Context, in *LinkDatasetRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error)
	// Unlinks a dataset from BigQuery in a given project
	// for a given location.
	UnlinkDataset(ctx context.Context, in *UnlinkDatasetRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error)
}

type storageInsightsClient struct {
	cc grpc.ClientConnInterface
}

func NewStorageInsightsClient(cc grpc.ClientConnInterface) StorageInsightsClient {
	return &storageInsightsClient{cc}
}

func (c *storageInsightsClient) ListReportConfigs(ctx context.Context, in *ListReportConfigsRequest, opts ...grpc.CallOption) (*ListReportConfigsResponse, error) {
	out := new(ListReportConfigsResponse)
	err := c.cc.Invoke(ctx, StorageInsights_ListReportConfigs_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) GetReportConfig(ctx context.Context, in *GetReportConfigRequest, opts ...grpc.CallOption) (*ReportConfig, error) {
	out := new(ReportConfig)
	err := c.cc.Invoke(ctx, StorageInsights_GetReportConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) CreateReportConfig(ctx context.Context, in *CreateReportConfigRequest, opts ...grpc.CallOption) (*ReportConfig, error) {
	out := new(ReportConfig)
	err := c.cc.Invoke(ctx, StorageInsights_CreateReportConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) UpdateReportConfig(ctx context.Context, in *UpdateReportConfigRequest, opts ...grpc.CallOption) (*ReportConfig, error) {
	out := new(ReportConfig)
	err := c.cc.Invoke(ctx, StorageInsights_UpdateReportConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) DeleteReportConfig(ctx context.Context, in *DeleteReportConfigRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StorageInsights_DeleteReportConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) ListReportDetails(ctx context.Context, in *ListReportDetailsRequest, opts ...grpc.CallOption) (*ListReportDetailsResponse, error) {
	out := new(ListReportDetailsResponse)
	err := c.cc.Invoke(ctx, StorageInsights_ListReportDetails_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) GetReportDetail(ctx context.Context, in *GetReportDetailRequest, opts ...grpc.CallOption) (*ReportDetail, error) {
	out := new(ReportDetail)
	err := c.cc.Invoke(ctx, StorageInsights_GetReportDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) ListDatasetConfigs(ctx context.Context, in *ListDatasetConfigsRequest, opts ...grpc.CallOption) (*ListDatasetConfigsResponse, error) {
	out := new(ListDatasetConfigsResponse)
	err := c.cc.Invoke(ctx, StorageInsights_ListDatasetConfigs_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) GetDatasetConfig(ctx context.Context, in *GetDatasetConfigRequest, opts ...grpc.CallOption) (*DatasetConfig, error) {
	out := new(DatasetConfig)
	err := c.cc.Invoke(ctx, StorageInsights_GetDatasetConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) CreateDatasetConfig(ctx context.Context, in *CreateDatasetConfigRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error) {
	out := new(longrunningpb.Operation)
	err := c.cc.Invoke(ctx, StorageInsights_CreateDatasetConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) UpdateDatasetConfig(ctx context.Context, in *UpdateDatasetConfigRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error) {
	out := new(longrunningpb.Operation)
	err := c.cc.Invoke(ctx, StorageInsights_UpdateDatasetConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) DeleteDatasetConfig(ctx context.Context, in *DeleteDatasetConfigRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error) {
	out := new(longrunningpb.Operation)
	err := c.cc.Invoke(ctx, StorageInsights_DeleteDatasetConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) LinkDataset(ctx context.Context, in *LinkDatasetRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error) {
	out := new(longrunningpb.Operation)
	err := c.cc.Invoke(ctx, StorageInsights_LinkDataset_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageInsightsClient) UnlinkDataset(ctx context.Context, in *UnlinkDatasetRequest, opts ...grpc.CallOption) (*longrunningpb.Operation, error) {
	out := new(longrunningpb.Operation)
	err := c.cc.Invoke(ctx, StorageInsights_UnlinkDataset_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageInsightsServer is the server API for StorageInsights service.
// All implementations should embed UnimplementedStorageInsightsServer
// for forward compatibility
type StorageInsightsServer interface {
	// Lists ReportConfigs in a given project and location.
	ListReportConfigs(context.Context, *ListReportConfigsRequest) (*ListReportConfigsResponse, error)
	// Gets details of a single ReportConfig.
	GetReportConfig(context.Context, *GetReportConfigRequest) (*ReportConfig, error)
	// Creates a new ReportConfig in a given project and location.
	CreateReportConfig(context.Context, *CreateReportConfigRequest) (*ReportConfig, error)
	// Updates the parameters of a single ReportConfig.
	UpdateReportConfig(context.Context, *UpdateReportConfigRequest) (*ReportConfig, error)
	// Deletes a single ReportConfig.
	DeleteReportConfig(context.Context, *DeleteReportConfigRequest) (*emptypb.Empty, error)
	// Lists ReportDetails in a given project and location.
	ListReportDetails(context.Context, *ListReportDetailsRequest) (*ListReportDetailsResponse, error)
	// Gets details of a single ReportDetail.
	GetReportDetail(context.Context, *GetReportDetailRequest) (*ReportDetail, error)
	// Lists the dataset configurations in a given project for a given location.
	ListDatasetConfigs(context.Context, *ListDatasetConfigsRequest) (*ListDatasetConfigsResponse, error)
	// Gets the dataset configuration in a given project for a given location.
	GetDatasetConfig(context.Context, *GetDatasetConfigRequest) (*DatasetConfig, error)
	// Creates a dataset configuration in a given project for a given location.
	CreateDatasetConfig(context.Context, *CreateDatasetConfigRequest) (*longrunningpb.Operation, error)
	// Updates a dataset configuration in a given project for a given location.
	UpdateDatasetConfig(context.Context, *UpdateDatasetConfigRequest) (*longrunningpb.Operation, error)
	// Deletes a dataset configuration in a given project for a given location.
	DeleteDatasetConfig(context.Context, *DeleteDatasetConfigRequest) (*longrunningpb.Operation, error)
	// Links a dataset to BigQuery in a given project for a given location.
	LinkDataset(context.Context, *LinkDatasetRequest) (*longrunningpb.Operation, error)
	// Unlinks a dataset from BigQuery in a given project
	// for a given location.
	UnlinkDataset(context.Context, *UnlinkDatasetRequest) (*longrunningpb.Operation, error)
}

// UnimplementedStorageInsightsServer should be embedded to have forward compatible implementations.
type UnimplementedStorageInsightsServer struct {
}

func (UnimplementedStorageInsightsServer) ListReportConfigs(context.Context, *ListReportConfigsRequest) (*ListReportConfigsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReportConfigs not implemented")
}
func (UnimplementedStorageInsightsServer) GetReportConfig(context.Context, *GetReportConfigRequest) (*ReportConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReportConfig not implemented")
}
func (UnimplementedStorageInsightsServer) CreateReportConfig(context.Context, *CreateReportConfigRequest) (*ReportConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReportConfig not implemented")
}
func (UnimplementedStorageInsightsServer) UpdateReportConfig(context.Context, *UpdateReportConfigRequest) (*ReportConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReportConfig not implemented")
}
func (UnimplementedStorageInsightsServer) DeleteReportConfig(context.Context, *DeleteReportConfigRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReportConfig not implemented")
}
func (UnimplementedStorageInsightsServer) ListReportDetails(context.Context, *ListReportDetailsRequest) (*ListReportDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReportDetails not implemented")
}
func (UnimplementedStorageInsightsServer) GetReportDetail(context.Context, *GetReportDetailRequest) (*ReportDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReportDetail not implemented")
}
func (UnimplementedStorageInsightsServer) ListDatasetConfigs(context.Context, *ListDatasetConfigsRequest) (*ListDatasetConfigsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDatasetConfigs not implemented")
}
func (UnimplementedStorageInsightsServer) GetDatasetConfig(context.Context, *GetDatasetConfigRequest) (*DatasetConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDatasetConfig not implemented")
}
func (UnimplementedStorageInsightsServer) CreateDatasetConfig(context.Context, *CreateDatasetConfigRequest) (*longrunningpb.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDatasetConfig not implemented")
}
func (UnimplementedStorageInsightsServer) UpdateDatasetConfig(context.Context, *UpdateDatasetConfigRequest) (*longrunningpb.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDatasetConfig not implemented")
}
func (UnimplementedStorageInsightsServer) DeleteDatasetConfig(context.Context, *DeleteDatasetConfigRequest) (*longrunningpb.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDatasetConfig not implemented")
}
func (UnimplementedStorageInsightsServer) LinkDataset(context.Context, *LinkDatasetRequest) (*longrunningpb.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkDataset not implemented")
}
func (UnimplementedStorageInsightsServer) UnlinkDataset(context.Context, *UnlinkDatasetRequest) (*longrunningpb.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlinkDataset not implemented")
}

// UnsafeStorageInsightsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StorageInsightsServer will
// result in compilation errors.
type UnsafeStorageInsightsServer interface {
	mustEmbedUnimplementedStorageInsightsServer()
}

func RegisterStorageInsightsServer(s grpc.ServiceRegistrar, srv StorageInsightsServer) {
	s.RegisterService(&StorageInsights_ServiceDesc, srv)
}

func _StorageInsights_ListReportConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReportConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).ListReportConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_ListReportConfigs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).ListReportConfigs(ctx, req.(*ListReportConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_GetReportConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).GetReportConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_GetReportConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).GetReportConfig(ctx, req.(*GetReportConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_CreateReportConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReportConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).CreateReportConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_CreateReportConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).CreateReportConfig(ctx, req.(*CreateReportConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_UpdateReportConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReportConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).UpdateReportConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_UpdateReportConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).UpdateReportConfig(ctx, req.(*UpdateReportConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_DeleteReportConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReportConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).DeleteReportConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_DeleteReportConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).DeleteReportConfig(ctx, req.(*DeleteReportConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_ListReportDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReportDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).ListReportDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_ListReportDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).ListReportDetails(ctx, req.(*ListReportDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_GetReportDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).GetReportDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_GetReportDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).GetReportDetail(ctx, req.(*GetReportDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_ListDatasetConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDatasetConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).ListDatasetConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_ListDatasetConfigs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).ListDatasetConfigs(ctx, req.(*ListDatasetConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_GetDatasetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDatasetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).GetDatasetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_GetDatasetConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).GetDatasetConfig(ctx, req.(*GetDatasetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_CreateDatasetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatasetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).CreateDatasetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_CreateDatasetConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).CreateDatasetConfig(ctx, req.(*CreateDatasetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_UpdateDatasetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDatasetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).UpdateDatasetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_UpdateDatasetConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).UpdateDatasetConfig(ctx, req.(*UpdateDatasetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_DeleteDatasetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDatasetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).DeleteDatasetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_DeleteDatasetConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).DeleteDatasetConfig(ctx, req.(*DeleteDatasetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_LinkDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).LinkDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_LinkDataset_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).LinkDataset(ctx, req.(*LinkDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageInsights_UnlinkDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlinkDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageInsightsServer).UnlinkDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StorageInsights_UnlinkDataset_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageInsightsServer).UnlinkDataset(ctx, req.(*UnlinkDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StorageInsights_ServiceDesc is the grpc.ServiceDesc for StorageInsights service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StorageInsights_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.storageinsights.v1.StorageInsights",
	HandlerType: (*StorageInsightsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListReportConfigs",
			Handler:    _StorageInsights_ListReportConfigs_Handler,
		},
		{
			MethodName: "GetReportConfig",
			Handler:    _StorageInsights_GetReportConfig_Handler,
		},
		{
			MethodName: "CreateReportConfig",
			Handler:    _StorageInsights_CreateReportConfig_Handler,
		},
		{
			MethodName: "UpdateReportConfig",
			Handler:    _StorageInsights_UpdateReportConfig_Handler,
		},
		{
			MethodName: "DeleteReportConfig",
			Handler:    _StorageInsights_DeleteReportConfig_Handler,
		},
		{
			MethodName: "ListReportDetails",
			Handler:    _StorageInsights_ListReportDetails_Handler,
		},
		{
			MethodName: "GetReportDetail",
			Handler:    _StorageInsights_GetReportDetail_Handler,
		},
		{
			MethodName: "ListDatasetConfigs",
			Handler:    _StorageInsights_ListDatasetConfigs_Handler,
		},
		{
			MethodName: "GetDatasetConfig",
			Handler:    _StorageInsights_GetDatasetConfig_Handler,
		},
		{
			MethodName: "CreateDatasetConfig",
			Handler:    _StorageInsights_CreateDatasetConfig_Handler,
		},
		{
			MethodName: "UpdateDatasetConfig",
			Handler:    _StorageInsights_UpdateDatasetConfig_Handler,
		},
		{
			MethodName: "DeleteDatasetConfig",
			Handler:    _StorageInsights_DeleteDatasetConfig_Handler,
		},
		{
			MethodName: "LinkDataset",
			Handler:    _StorageInsights_LinkDataset_Handler,
		},
		{
			MethodName: "UnlinkDataset",
			Handler:    _StorageInsights_UnlinkDataset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/storageinsights/v1/storageinsights.proto",
}
