// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

package dashboard_test

import (
	"context"

	dashboard "cloud.google.com/go/monitoring/dashboard/apiv1"
	"google.golang.org/api/iterator"
	dashboardpb "google.golang.org/genproto/googleapis/monitoring/dashboard/v1"
)

func ExampleNewDashboardsClient() {
	ctx := context.Background()
	c, err := dashboard.NewDashboardsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use client.
	_ = c
}

func ExampleDashboardsClient_CreateDashboard() {
	// import dashboardpb "google.golang.org/genproto/googleapis/monitoring/dashboard/v1"

	ctx := context.Background()
	c, err := dashboard.NewDashboardsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &dashboardpb.CreateDashboardRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.CreateDashboard(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleDashboardsClient_ListDashboards() {
	// import dashboardpb "google.golang.org/genproto/googleapis/monitoring/dashboard/v1"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := dashboard.NewDashboardsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &dashboardpb.ListDashboardsRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListDashboards(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleDashboardsClient_GetDashboard() {
	// import dashboardpb "google.golang.org/genproto/googleapis/monitoring/dashboard/v1"

	ctx := context.Background()
	c, err := dashboard.NewDashboardsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &dashboardpb.GetDashboardRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetDashboard(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleDashboardsClient_DeleteDashboard() {
	ctx := context.Background()
	c, err := dashboard.NewDashboardsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &dashboardpb.DeleteDashboardRequest{
		// TODO: Fill request struct fields.
	}
	err = c.DeleteDashboard(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleDashboardsClient_UpdateDashboard() {
	// import dashboardpb "google.golang.org/genproto/googleapis/monitoring/dashboard/v1"

	ctx := context.Background()
	c, err := dashboard.NewDashboardsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &dashboardpb.UpdateDashboardRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.UpdateDashboard(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
