// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.7
// source: google/cloud/support/v2beta/attachment_service.proto

package supportpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CaseAttachmentService_ListAttachments_FullMethodName = "/google.cloud.support.v2beta.CaseAttachmentService/ListAttachments"
	CaseAttachmentService_GetAttachment_FullMethodName   = "/google.cloud.support.v2beta.CaseAttachmentService/GetAttachment"
)

// CaseAttachmentServiceClient is the client API for CaseAttachmentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CaseAttachmentServiceClient interface {
	// List all the attachments associated with a support case.
	ListAttachments(ctx context.Context, in *ListAttachmentsRequest, opts ...grpc.CallOption) (*ListAttachmentsResponse, error)
	// Retrieve an attachment.
	GetAttachment(ctx context.Context, in *GetAttachmentRequest, opts ...grpc.CallOption) (*Attachment, error)
}

type caseAttachmentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCaseAttachmentServiceClient(cc grpc.ClientConnInterface) CaseAttachmentServiceClient {
	return &caseAttachmentServiceClient{cc}
}

func (c *caseAttachmentServiceClient) ListAttachments(ctx context.Context, in *ListAttachmentsRequest, opts ...grpc.CallOption) (*ListAttachmentsResponse, error) {
	out := new(ListAttachmentsResponse)
	err := c.cc.Invoke(ctx, CaseAttachmentService_ListAttachments_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *caseAttachmentServiceClient) GetAttachment(ctx context.Context, in *GetAttachmentRequest, opts ...grpc.CallOption) (*Attachment, error) {
	out := new(Attachment)
	err := c.cc.Invoke(ctx, CaseAttachmentService_GetAttachment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CaseAttachmentServiceServer is the server API for CaseAttachmentService service.
// All implementations should embed UnimplementedCaseAttachmentServiceServer
// for forward compatibility
type CaseAttachmentServiceServer interface {
	// List all the attachments associated with a support case.
	ListAttachments(context.Context, *ListAttachmentsRequest) (*ListAttachmentsResponse, error)
	// Retrieve an attachment.
	GetAttachment(context.Context, *GetAttachmentRequest) (*Attachment, error)
}

// UnimplementedCaseAttachmentServiceServer should be embedded to have forward compatible implementations.
type UnimplementedCaseAttachmentServiceServer struct {
}

func (UnimplementedCaseAttachmentServiceServer) ListAttachments(context.Context, *ListAttachmentsRequest) (*ListAttachmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAttachments not implemented")
}
func (UnimplementedCaseAttachmentServiceServer) GetAttachment(context.Context, *GetAttachmentRequest) (*Attachment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttachment not implemented")
}

// UnsafeCaseAttachmentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CaseAttachmentServiceServer will
// result in compilation errors.
type UnsafeCaseAttachmentServiceServer interface {
	mustEmbedUnimplementedCaseAttachmentServiceServer()
}

func RegisterCaseAttachmentServiceServer(s grpc.ServiceRegistrar, srv CaseAttachmentServiceServer) {
	s.RegisterService(&CaseAttachmentService_ServiceDesc, srv)
}

func _CaseAttachmentService_ListAttachments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAttachmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaseAttachmentServiceServer).ListAttachments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CaseAttachmentService_ListAttachments_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaseAttachmentServiceServer).ListAttachments(ctx, req.(*ListAttachmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CaseAttachmentService_GetAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttachmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaseAttachmentServiceServer).GetAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CaseAttachmentService_GetAttachment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaseAttachmentServiceServer).GetAttachment(ctx, req.(*GetAttachmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CaseAttachmentService_ServiceDesc is the grpc.ServiceDesc for CaseAttachmentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CaseAttachmentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.support.v2beta.CaseAttachmentService",
	HandlerType: (*CaseAttachmentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAttachments",
			Handler:    _CaseAttachmentService_ListAttachments_Handler,
		},
		{
			MethodName: "GetAttachment",
			Handler:    _CaseAttachmentService_GetAttachment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/support/v2beta/attachment_service.proto",
}
