// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/maintenance/api/v1beta/maintenance_service.proto

package apipb

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The Category of the maintenance.
type MaintenanceCategory int32

const (
	// Unspecified category.
	MaintenanceCategory_MAINTENANCE_CATEGORY_UNSPECIFIED MaintenanceCategory = 0
	// Infrastructure maintenance events are times that Google Cloud performs
	// regular maintenance on network equipment e.g. Google Cloud Interconnect
	// These events are usually scheduled in advance and we provide
	// notification, when possible, so that users can plan for the
	// infrastructure maintenance event and prevent downtime. Infrastructure
	// maintenance events don't have a set interval between occurrences, but
	// generally occur several times a year.
	MaintenanceCategory_INFRASTRUCTURE MaintenanceCategory = 1
	// Updates that can include bug fixes, changes, or new features that are
	// backward compatible with existing versions (including patches).
	// Some SPs allow users to control the scheduling of these maintenance
	// events using maintenance windows and/or deny maintenance features.
	MaintenanceCategory_SERVICE_UPDATE MaintenanceCategory = 3
)

// Enum value maps for MaintenanceCategory.
var (
	MaintenanceCategory_name = map[int32]string{
		0: "MAINTENANCE_CATEGORY_UNSPECIFIED",
		1: "INFRASTRUCTURE",
		3: "SERVICE_UPDATE",
	}
	MaintenanceCategory_value = map[string]int32{
		"MAINTENANCE_CATEGORY_UNSPECIFIED": 0,
		"INFRASTRUCTURE":                   1,
		"SERVICE_UPDATE":                   3,
	}
)

func (x MaintenanceCategory) Enum() *MaintenanceCategory {
	p := new(MaintenanceCategory)
	*p = x
	return p
}

func (x MaintenanceCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaintenanceCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes[0].Descriptor()
}

func (MaintenanceCategory) Type() protoreflect.EnumType {
	return &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes[0]
}

func (x MaintenanceCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaintenanceCategory.Descriptor instead.
func (MaintenanceCategory) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{0}
}

// State is the state of a resource maintenance.
type ResourceMaintenance_State int32

const (
	// Unspecified state.
	ResourceMaintenance_STATE_UNSPECIFIED ResourceMaintenance_State = 0
	// Scheduled for a particular window. For disruptive maintenance it should
	// respect maintenance policy, i.e. its available windows, exclusions and
	// notification period.
	ResourceMaintenance_SCHEDULED ResourceMaintenance_State = 1
	// Maintenance is ongoing.
	ResourceMaintenance_RUNNING ResourceMaintenance_State = 2
	// No longer planned, typically when other maintenance (e.g. upgrade to
	// newer version) already happened, or the user skipped the maintenance.
	ResourceMaintenance_CANCELLED ResourceMaintenance_State = 3
	// Successfully completed.
	ResourceMaintenance_SUCCEEDED ResourceMaintenance_State = 4
)

// Enum value maps for ResourceMaintenance_State.
var (
	ResourceMaintenance_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "SCHEDULED",
		2: "RUNNING",
		3: "CANCELLED",
		4: "SUCCEEDED",
	}
	ResourceMaintenance_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"SCHEDULED":         1,
		"RUNNING":           2,
		"CANCELLED":         3,
		"SUCCEEDED":         4,
	}
)

func (x ResourceMaintenance_State) Enum() *ResourceMaintenance_State {
	p := new(ResourceMaintenance_State)
	*p = x
	return p
}

func (x ResourceMaintenance_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceMaintenance_State) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes[1].Descriptor()
}

func (ResourceMaintenance_State) Type() protoreflect.EnumType {
	return &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes[1]
}

func (x ResourceMaintenance_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceMaintenance_State.Descriptor instead.
func (ResourceMaintenance_State) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{3, 0}
}

// Sets the type of control supported. comment (as in logs).
type MaintenanceControl_Control int32

const (
	// Unspecified control.
	MaintenanceControl_CONTROL_UNSPECIFIED MaintenanceControl_Control = 0
	// Apply control.
	MaintenanceControl_APPLY MaintenanceControl_Control = 1
	// Manage policy control.
	MaintenanceControl_MANAGE_POLICY MaintenanceControl_Control = 2
	// Reschedule control.
	MaintenanceControl_RESCHEDULE MaintenanceControl_Control = 3
)

// Enum value maps for MaintenanceControl_Control.
var (
	MaintenanceControl_Control_name = map[int32]string{
		0: "CONTROL_UNSPECIFIED",
		1: "APPLY",
		2: "MANAGE_POLICY",
		3: "RESCHEDULE",
	}
	MaintenanceControl_Control_value = map[string]int32{
		"CONTROL_UNSPECIFIED": 0,
		"APPLY":               1,
		"MANAGE_POLICY":       2,
		"RESCHEDULE":          3,
	}
)

func (x MaintenanceControl_Control) Enum() *MaintenanceControl_Control {
	p := new(MaintenanceControl_Control)
	*p = x
	return p
}

func (x MaintenanceControl_Control) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaintenanceControl_Control) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes[2].Descriptor()
}

func (MaintenanceControl_Control) Type() protoreflect.EnumType {
	return &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes[2]
}

func (x MaintenanceControl_Control) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaintenanceControl_Control.Descriptor instead.
func (MaintenanceControl_Control) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{4, 0}
}

// Request message for SummarizeMaintenances custom method.
type SummarizeMaintenancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The parent of the resource maintenance.
	// eg. `projects/123/locations/*`
	Parent string `protobuf:"bytes,10006,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of resource maintenances to send per page. The default
	// page size is 20 and the maximum is 1000.
	PageSize int32 `protobuf:"varint,10505,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The page token: If the next_page_token from a previous response
	// is provided, this request will send the subsequent page.
	PageToken string `protobuf:"bytes,10506,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter the list as specified in https://google.aip.dev/160.
	// Supported fields include:
	// - state
	// - resource.location
	// - resource.resourceName
	// - resource.type
	// - maintenance.maintenanceName
	// - maintenanceStartTime
	// - maintenanceCompleteTime
	// Examples:
	// - state="SCHEDULED"
	// - resource.location="us-central1-c"
	// - resource.resourceName=~"*/instance-20241212-211259"
	// - maintenanceStartTime>"2000-10-11T20:44:51Z"
	// - state="SCHEDULED" OR resource.type="compute.googleapis.com/Instance"
	// - maintenance.maitenanceName="eb3b709c-9ca1-5472-9fb6-800a3849eda1" AND
	// maintenanceCompleteTime>"2000-10-11T20:44:51Z"
	Filter string `protobuf:"bytes,10507,opt,name=filter,proto3" json:"filter,omitempty"`
	// Order results as specified in https://google.aip.dev/132.
	OrderBy string `protobuf:"bytes,10508,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *SummarizeMaintenancesRequest) Reset() {
	*x = SummarizeMaintenancesRequest{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeMaintenancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeMaintenancesRequest) ProtoMessage() {}

func (x *SummarizeMaintenancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeMaintenancesRequest.ProtoReflect.Descriptor instead.
func (*SummarizeMaintenancesRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{0}
}

func (x *SummarizeMaintenancesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *SummarizeMaintenancesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SummarizeMaintenancesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *SummarizeMaintenancesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *SummarizeMaintenancesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type SummarizeMaintenancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resulting summaries.
	Maintenances []*MaintenanceSummary `protobuf:"bytes,10509,rep,name=maintenances,proto3" json:"maintenances,omitempty"`
	// If present, the next page token can be provided to a subsequent
	// SummarizeMaintenances call to list the next page.
	// If empty, there are no more pages.
	NextPageToken string `protobuf:"bytes,10510,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Unordered list. Locations that could not be reached.
	Unreachable []string `protobuf:"bytes,10511,rep,name=unreachable,proto3" json:"unreachable,omitempty"`
}

func (x *SummarizeMaintenancesResponse) Reset() {
	*x = SummarizeMaintenancesResponse{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeMaintenancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeMaintenancesResponse) ProtoMessage() {}

func (x *SummarizeMaintenancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeMaintenancesResponse.ProtoReflect.Descriptor instead.
func (*SummarizeMaintenancesResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{1}
}

func (x *SummarizeMaintenancesResponse) GetMaintenances() []*MaintenanceSummary {
	if x != nil {
		return x.Maintenances
	}
	return nil
}

func (x *SummarizeMaintenancesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *SummarizeMaintenancesResponse) GetUnreachable() []string {
	if x != nil {
		return x.Unreachable
	}
	return nil
}

// MaintenanceSummary contains maintenance statistics calculated based on
// ResourceMaintenances within the scope: project and location.
type MaintenanceSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The name of the maintenance.
	MaintenanceName string `protobuf:"bytes,1,opt,name=maintenance_name,json=maintenanceName,proto3" json:"maintenance_name,omitempty"`
	// Output only. The title of the maintenance.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Output only. The description of the maintenance.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. The category of the maintenance event.
	Category MaintenanceCategory `protobuf:"varint,13,opt,name=category,proto3,enum=google.cloud.maintenance.api.v1beta.MaintenanceCategory" json:"category,omitempty"`
	// Output only. Scheduled start time of the maintenance. The maintenance will
	// start at `maintenanceScheduledStartTime` or later, with best effort to
	// finish before `maintenanceScheduledEndTime`.
	MaintenanceScheduledStartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=maintenance_scheduled_start_time,json=maintenanceScheduledStartTime,proto3" json:"maintenance_scheduled_start_time,omitempty"`
	// Output only. An estimated (best effort, not guaranteed) end time of the
	// scheduled maintenance.
	MaintenanceScheduledEndTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=maintenance_scheduled_end_time,json=maintenanceScheduledEndTime,proto3" json:"maintenance_scheduled_end_time,omitempty"`
	// Output only. Actual date when the maintenance started. Field present only
	// after the state changed to `RUNNING`.
	MaintenanceStartTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=maintenance_start_time,json=maintenanceStartTime,proto3" json:"maintenance_start_time,omitempty"`
	// Output only. Actual date when the maintenance successfully completed. Field
	// present only after the state changed to `SUCCEEDED`.
	MaintenanceEndTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=maintenance_end_time,json=maintenanceEndTime,proto3" json:"maintenance_end_time,omitempty"`
	// Output only. Indicates whether the user has some control over that
	// maintenance, either proactively before maintenance was scheduled with
	// maintenance policy or with reactive controls after it was scheduled (see
	// controls field).
	UserControllable bool `protobuf:"varint,10,opt,name=user_controllable,json=userControllable,proto3" json:"user_controllable,omitempty"`
	// Output only. Control available for that Maintenance (might not be available
	// for every resource that maintenance is applied to).
	Controls []*MaintenanceControl `protobuf:"bytes,14,rep,name=controls,proto3" json:"controls,omitempty"`
	// Output only. Stats is a field of ResourceMaintenance used to aggregate the
	// stats.
	Stats []*MaintenanceSummary_Stats `protobuf:"bytes,12,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *MaintenanceSummary) Reset() {
	*x = MaintenanceSummary{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceSummary) ProtoMessage() {}

func (x *MaintenanceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceSummary.ProtoReflect.Descriptor instead.
func (*MaintenanceSummary) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{2}
}

func (x *MaintenanceSummary) GetMaintenanceName() string {
	if x != nil {
		return x.MaintenanceName
	}
	return ""
}

func (x *MaintenanceSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MaintenanceSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MaintenanceSummary) GetCategory() MaintenanceCategory {
	if x != nil {
		return x.Category
	}
	return MaintenanceCategory_MAINTENANCE_CATEGORY_UNSPECIFIED
}

func (x *MaintenanceSummary) GetMaintenanceScheduledStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceScheduledStartTime
	}
	return nil
}

func (x *MaintenanceSummary) GetMaintenanceScheduledEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceScheduledEndTime
	}
	return nil
}

func (x *MaintenanceSummary) GetMaintenanceStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceStartTime
	}
	return nil
}

func (x *MaintenanceSummary) GetMaintenanceEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceEndTime
	}
	return nil
}

func (x *MaintenanceSummary) GetUserControllable() bool {
	if x != nil {
		return x.UserControllable
	}
	return false
}

func (x *MaintenanceSummary) GetControls() []*MaintenanceControl {
	if x != nil {
		return x.Controls
	}
	return nil
}

func (x *MaintenanceSummary) GetStats() []*MaintenanceSummary_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// ResourceMaintenance is a resource that represents a maintenance operation
// on a resource.
type ResourceMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the resource_maintenance resource.
	// Format:
	// `"projects/{project}/locations/{location}/resourceMaintenance/{resource-maintenance-id}"`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. The resource spec of the resource maintenance.
	Resource *ResourceMaintenance_Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// Output only. The details of the maintenance.
	Maintenance *ResourceMaintenance_Maintenance `protobuf:"bytes,3,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	// Output only. The state of the resource maintenance.
	State ResourceMaintenance_State `protobuf:"varint,4,opt,name=state,proto3,enum=google.cloud.maintenance.api.v1beta.ResourceMaintenance_State" json:"state,omitempty"`
	// Output only. The create time of the resource maintenance.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The update time of the resource maintenance.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. The time when the resource maintenance has started.
	MaintenanceStartTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=maintenance_start_time,json=maintenanceStartTime,proto3" json:"maintenance_start_time,omitempty"`
	// Output only. The time when the resource maintenance has completed.
	MaintenanceEndTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=maintenance_end_time,json=maintenanceEndTime,proto3" json:"maintenance_end_time,omitempty"`
	// Output only. The time when the resource maintenance was cancelled.
	MaintenanceCancelTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=maintenance_cancel_time,json=maintenanceCancelTime,proto3" json:"maintenance_cancel_time,omitempty"`
	// Output only. The time when the maintenance on the resource was scheduled to
	// start.
	MaintenanceScheduledStartTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=maintenance_scheduled_start_time,json=maintenanceScheduledStartTime,proto3" json:"maintenance_scheduled_start_time,omitempty"`
	// Output only. The time when the maintenance on the resource was scheduled to
	// end.
	MaintenanceScheduledEndTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=maintenance_scheduled_end_time,json=maintenanceScheduledEndTime,proto3" json:"maintenance_scheduled_end_time,omitempty"`
	// Output only. Indicates whether the user has some control over that
	// maintenance, either
	//
	//	proactively before maintenance was scheduled with maintenance policy or
	//	with reactive controls after it was scheduled (see controls field)
	UserControllable bool `protobuf:"varint,12,opt,name=user_controllable,json=userControllable,proto3" json:"user_controllable,omitempty"`
	// Output only. The controls of the maintenance.
	Controls []*MaintenanceControl `protobuf:"bytes,13,rep,name=controls,proto3" json:"controls,omitempty"`
	// Optional. The labels on the resource, which can be used for categorization.
	// similar to Kubernetes resource labels.
	Labels map[string]string `protobuf:"bytes,10401,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. Annotations is an unstructured key-value map stored with a
	// resource that may be set by external tools to store and retrieve arbitrary
	// metadata. They are not queryable and should be preserved when modifying
	// objects.
	//
	// More info: https://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `protobuf:"bytes,10402,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. The unique identifier of the resource. UID is unique in the
	// time and space for this resource within the scope of the service. It is
	// typically generated by the server on successful creation of a resource
	// and must not be changed. UID is used to uniquely identify resources
	// with resource name reuses. This should be a UUID4.
	Uid string `protobuf:"bytes,10201,opt,name=uid,proto3" json:"uid,omitempty"`
	// Output only. An opaque value that uniquely identifies a version or
	// generation of a resource. It can be used to confirm that the client
	// and server agree on the ordering of a resource being written.
	Etag string `protobuf:"bytes,10202,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *ResourceMaintenance) Reset() {
	*x = ResourceMaintenance{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMaintenance) ProtoMessage() {}

func (x *ResourceMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMaintenance.ProtoReflect.Descriptor instead.
func (*ResourceMaintenance) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceMaintenance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceMaintenance) GetResource() *ResourceMaintenance_Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ResourceMaintenance) GetMaintenance() *ResourceMaintenance_Maintenance {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

func (x *ResourceMaintenance) GetState() ResourceMaintenance_State {
	if x != nil {
		return x.State
	}
	return ResourceMaintenance_STATE_UNSPECIFIED
}

func (x *ResourceMaintenance) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ResourceMaintenance) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ResourceMaintenance) GetMaintenanceStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceStartTime
	}
	return nil
}

func (x *ResourceMaintenance) GetMaintenanceEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceEndTime
	}
	return nil
}

func (x *ResourceMaintenance) GetMaintenanceCancelTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceCancelTime
	}
	return nil
}

func (x *ResourceMaintenance) GetMaintenanceScheduledStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceScheduledStartTime
	}
	return nil
}

func (x *ResourceMaintenance) GetMaintenanceScheduledEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaintenanceScheduledEndTime
	}
	return nil
}

func (x *ResourceMaintenance) GetUserControllable() bool {
	if x != nil {
		return x.UserControllable
	}
	return false
}

func (x *ResourceMaintenance) GetControls() []*MaintenanceControl {
	if x != nil {
		return x.Controls
	}
	return nil
}

func (x *ResourceMaintenance) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ResourceMaintenance) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ResourceMaintenance) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ResourceMaintenance) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

// The control of the maintenance.
type MaintenanceControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The control of the resource maintenance.
	Control MaintenanceControl_Control `protobuf:"varint,1,opt,name=control,proto3,enum=google.cloud.maintenance.api.v1beta.MaintenanceControl_Control" json:"control,omitempty"`
	// Indicates whether the control is available only in Service Producer API
	// (not through Unified Maintenance).
	IsCustom bool `protobuf:"varint,2,opt,name=is_custom,json=isCustom,proto3" json:"is_custom,omitempty"`
	// Link to Service Producer documentation about maintenance control. Provided
	// only when `isCustom` is `true`.
	Documentation string `protobuf:"bytes,3,opt,name=documentation,proto3" json:"documentation,omitempty"`
}

func (x *MaintenanceControl) Reset() {
	*x = MaintenanceControl{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceControl) ProtoMessage() {}

func (x *MaintenanceControl) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceControl.ProtoReflect.Descriptor instead.
func (*MaintenanceControl) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{4}
}

func (x *MaintenanceControl) GetControl() MaintenanceControl_Control {
	if x != nil {
		return x.Control
	}
	return MaintenanceControl_CONTROL_UNSPECIFIED
}

func (x *MaintenanceControl) GetIsCustom() bool {
	if x != nil {
		return x.IsCustom
	}
	return false
}

func (x *MaintenanceControl) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

// The request structure for the ListResourceMaintenances method.
type ListResourceMaintenancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The parent of the resource maintenance.
	Parent string `protobuf:"bytes,10006,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of resource maintenances to send per page.
	PageSize int32 `protobuf:"varint,10505,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The page token: If the next_page_token from a previous response
	// is provided, this request will send the subsequent page.
	PageToken string `protobuf:"bytes,10506,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter the list as specified in https://google.aip.dev/160.
	Filter string `protobuf:"bytes,10507,opt,name=filter,proto3" json:"filter,omitempty"`
	// Order results as specified in https://google.aip.dev/132.
	OrderBy string `protobuf:"bytes,10508,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListResourceMaintenancesRequest) Reset() {
	*x = ListResourceMaintenancesRequest{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResourceMaintenancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourceMaintenancesRequest) ProtoMessage() {}

func (x *ListResourceMaintenancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourceMaintenancesRequest.ProtoReflect.Descriptor instead.
func (*ListResourceMaintenancesRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListResourceMaintenancesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListResourceMaintenancesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListResourceMaintenancesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListResourceMaintenancesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListResourceMaintenancesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// The response structure for the ListResourceMaintenances method.
type ListResourceMaintenancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resulting resource maintenances.
	ResourceMaintenances []*ResourceMaintenance `protobuf:"bytes,10509,rep,name=resource_maintenances,json=resourceMaintenances,proto3" json:"resource_maintenances,omitempty"`
	// If present, the next page token can be provided to a subsequent
	// ListResourceMaintenances call to list the next page.
	// If empty, there are no more pages.
	NextPageToken string `protobuf:"bytes,10510,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Locations that could not be reached.
	Unreachable []string `protobuf:"bytes,10511,rep,name=unreachable,proto3" json:"unreachable,omitempty"`
}

func (x *ListResourceMaintenancesResponse) Reset() {
	*x = ListResourceMaintenancesResponse{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResourceMaintenancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourceMaintenancesResponse) ProtoMessage() {}

func (x *ListResourceMaintenancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourceMaintenancesResponse.ProtoReflect.Descriptor instead.
func (*ListResourceMaintenancesResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListResourceMaintenancesResponse) GetResourceMaintenances() []*ResourceMaintenance {
	if x != nil {
		return x.ResourceMaintenances
	}
	return nil
}

func (x *ListResourceMaintenancesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListResourceMaintenancesResponse) GetUnreachable() []string {
	if x != nil {
		return x.Unreachable
	}
	return nil
}

// The request structure for the GetResourceMaintenance method.
type GetResourceMaintenanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The resource name of the resource within a service.
	Name string `protobuf:"bytes,10001,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetResourceMaintenanceRequest) Reset() {
	*x = GetResourceMaintenanceRequest{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceMaintenanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceMaintenanceRequest) ProtoMessage() {}

func (x *GetResourceMaintenanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceMaintenanceRequest.ProtoReflect.Descriptor instead.
func (*GetResourceMaintenanceRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetResourceMaintenanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MaintenanceSummary_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// groupBy specifies the type of aggregate.
	// For example a group_by might be `"state"`
	GroupBy string `protobuf:"bytes,1,opt,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	// Aggregates is a list <group, count> pairs. For example, if the
	// group_by is `"state"` a possible tuple in the aggregates list could be
	// "SCHEDULED" : `11`,
	Aggregates []*MaintenanceSummary_Aggregate `protobuf:"bytes,2,rep,name=aggregates,proto3" json:"aggregates,omitempty"`
}

func (x *MaintenanceSummary_Stats) Reset() {
	*x = MaintenanceSummary_Stats{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceSummary_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceSummary_Stats) ProtoMessage() {}

func (x *MaintenanceSummary_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceSummary_Stats.ProtoReflect.Descriptor instead.
func (*MaintenanceSummary_Stats) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MaintenanceSummary_Stats) GetGroupBy() string {
	if x != nil {
		return x.GroupBy
	}
	return ""
}

func (x *MaintenanceSummary_Stats) GetAggregates() []*MaintenanceSummary_Aggregate {
	if x != nil {
		return x.Aggregates
	}
	return nil
}

type MaintenanceSummary_Aggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies what specific value of the group_by the count represents. For
	// example if group_by is `"state"` its corresponding group could be
	// `"SCHEDULED"`.
	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	// The count of the group.
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *MaintenanceSummary_Aggregate) Reset() {
	*x = MaintenanceSummary_Aggregate{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceSummary_Aggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceSummary_Aggregate) ProtoMessage() {}

func (x *MaintenanceSummary_Aggregate) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceSummary_Aggregate.ProtoReflect.Descriptor instead.
func (*MaintenanceSummary_Aggregate) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{2, 1}
}

func (x *MaintenanceSummary_Aggregate) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *MaintenanceSummary_Aggregate) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Resource contains information about the resource affected by maintenance.
type ResourceMaintenance_Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Name is the reference to the consumer resource affected by
	// the maintenance. Available values can be found here:
	// https://cloud.google.com/asset-inventory/docs/asset-names
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Output only. The location of the resource.
	// Format:
	// `us-central1`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// Output only. The type of the resource.
	// Available values can be found here:
	// https://cloud.google.com/asset-inventory/docs/asset-types#supported_resource_types
	// Please note that not all the resource types will have their maintenances
	// reported.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ResourceMaintenance_Resource) Reset() {
	*x = ResourceMaintenance_Resource{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceMaintenance_Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMaintenance_Resource) ProtoMessage() {}

func (x *ResourceMaintenance_Resource) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMaintenance_Resource.ProtoReflect.Descriptor instead.
func (*ResourceMaintenance_Resource) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ResourceMaintenance_Resource) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ResourceMaintenance_Resource) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ResourceMaintenance_Resource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Maintenance is the maintenance details of a resource's maintenance.
type ResourceMaintenance_Maintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maintenance is the name of the corresponding maintenance resource
	// following the standard naming scheme: `"{maintenance-id}"`
	MaintenanceName string `protobuf:"bytes,1,opt,name=maintenance_name,json=maintenanceName,proto3" json:"maintenance_name,omitempty"`
	// Output only. The title of the maintenance.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Output only. The description of the maintenance.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. The category of the maintenance.
	Category MaintenanceCategory `protobuf:"varint,4,opt,name=category,proto3,enum=google.cloud.maintenance.api.v1beta.MaintenanceCategory" json:"category,omitempty"`
}

func (x *ResourceMaintenance_Maintenance) Reset() {
	*x = ResourceMaintenance_Maintenance{}
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceMaintenance_Maintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMaintenance_Maintenance) ProtoMessage() {}

func (x *ResourceMaintenance_Maintenance) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMaintenance_Maintenance.ProtoReflect.Descriptor instead.
func (*ResourceMaintenance_Maintenance) Descriptor() ([]byte, []int) {
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ResourceMaintenance_Maintenance) GetMaintenanceName() string {
	if x != nil {
		return x.MaintenanceName
	}
	return ""
}

func (x *ResourceMaintenance_Maintenance) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ResourceMaintenance_Maintenance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ResourceMaintenance_Maintenance) GetCategory() MaintenanceCategory {
	if x != nil {
		return x.Category
	}
	return MaintenanceCategory_MAINTENANCE_CATEGORY_UNSPECIFIED
}

var File_google_cloud_maintenance_api_v1beta_maintenance_service_proto protoreflect.FileDescriptor

var file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x7a, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x96, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x30, 0x12,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x89, 0x52, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x8a, 0x52, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x8b, 0x52, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x8c, 0x52, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0xce, 0x01, 0x0a, 0x1d, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0c,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x8d, 0x52, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0c, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x8e, 0x52,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x8f, 0x52, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x06, 0x52, 0x0b,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x82, 0x08, 0x0a, 0x12,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x2e, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x68, 0x0a, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x1d, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x1e, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x1b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x55, 0x0a, 0x16, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x58, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a,
	0x85, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x79, 0x12, 0x61, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xa2, 0x10, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x62, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x59, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x55, 0x0a, 0x16, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x17, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x15, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x68, 0x0a, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x1d, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x64,
	0x0a, 0x1e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x1b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x12, 0x62, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0xa1, 0x51, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x71, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xa2, 0x51, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0xd9,
	0x4f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x03, 0xe2, 0x8c, 0xcf, 0xd7, 0x08, 0x02,
	0x08, 0x01, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18,
	0xda, 0x4f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x65, 0x74, 0x61,
	0x67, 0x1a, 0x6e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x1a, 0xd5, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x3a, 0xb4,
	0x01, 0xea, 0x41, 0xb0, 0x01, 0x0a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x53, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2a, 0x14, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x32, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x84, 0x02, 0x0a, 0x12, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x59, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x41, 0x4e,
	0x41, 0x47, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x52, 0x45, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x03, 0x22, 0xe5, 0x01, 0x0a,
	0x1f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x96, 0x4e, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x36, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x30, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x89,
	0x52, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x8a, 0x52,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x17, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x8b, 0x52, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x8c, 0x52, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x22, 0xde, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x8d, 0x52, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x8e, 0x52, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x8f, 0x52, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x6c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x91,
	0x4e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x30, 0x0a, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x2a, 0x63, 0x0a, 0x13, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x41,
	0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x46, 0x52, 0x41, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x55,
	0x52, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x32, 0xb6, 0x06, 0x0a, 0x0b, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0xf7, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x7a, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0xda, 0x41, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x48, 0x12, 0x46, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x3a, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x7a, 0x65, 0x12, 0xf6, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0xda, 0x41,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x12, 0x3c, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0xe3, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x4b, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3e, 0x12, 0x3c, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x2a,
	0x7d, 0x1a, 0x4e, 0xca, 0x41, 0x1a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0xd2, 0x41, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x42, 0x77, 0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x42, 0x0f, 0x55, 0x4d,
	0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x39, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x61,
	0x70, 0x69, 0x70, 0x62, 0x3b, 0x61, 0x70, 0x69, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescOnce sync.Once
	file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescData = file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDesc
)

func file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescGZIP() []byte {
	file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescOnce.Do(func() {
		file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescData)
	})
	return file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDescData
}

var file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_goTypes = []any{
	(MaintenanceCategory)(0),                 // 0: google.cloud.maintenance.api.v1beta.MaintenanceCategory
	(ResourceMaintenance_State)(0),           // 1: google.cloud.maintenance.api.v1beta.ResourceMaintenance.State
	(MaintenanceControl_Control)(0),          // 2: google.cloud.maintenance.api.v1beta.MaintenanceControl.Control
	(*SummarizeMaintenancesRequest)(nil),     // 3: google.cloud.maintenance.api.v1beta.SummarizeMaintenancesRequest
	(*SummarizeMaintenancesResponse)(nil),    // 4: google.cloud.maintenance.api.v1beta.SummarizeMaintenancesResponse
	(*MaintenanceSummary)(nil),               // 5: google.cloud.maintenance.api.v1beta.MaintenanceSummary
	(*ResourceMaintenance)(nil),              // 6: google.cloud.maintenance.api.v1beta.ResourceMaintenance
	(*MaintenanceControl)(nil),               // 7: google.cloud.maintenance.api.v1beta.MaintenanceControl
	(*ListResourceMaintenancesRequest)(nil),  // 8: google.cloud.maintenance.api.v1beta.ListResourceMaintenancesRequest
	(*ListResourceMaintenancesResponse)(nil), // 9: google.cloud.maintenance.api.v1beta.ListResourceMaintenancesResponse
	(*GetResourceMaintenanceRequest)(nil),    // 10: google.cloud.maintenance.api.v1beta.GetResourceMaintenanceRequest
	(*MaintenanceSummary_Stats)(nil),         // 11: google.cloud.maintenance.api.v1beta.MaintenanceSummary.Stats
	(*MaintenanceSummary_Aggregate)(nil),     // 12: google.cloud.maintenance.api.v1beta.MaintenanceSummary.Aggregate
	(*ResourceMaintenance_Resource)(nil),     // 13: google.cloud.maintenance.api.v1beta.ResourceMaintenance.Resource
	(*ResourceMaintenance_Maintenance)(nil),  // 14: google.cloud.maintenance.api.v1beta.ResourceMaintenance.Maintenance
	nil,                                      // 15: google.cloud.maintenance.api.v1beta.ResourceMaintenance.LabelsEntry
	nil,                                      // 16: google.cloud.maintenance.api.v1beta.ResourceMaintenance.AnnotationsEntry
	(*timestamppb.Timestamp)(nil),            // 17: google.protobuf.Timestamp
}
var file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_depIdxs = []int32{
	5,  // 0: google.cloud.maintenance.api.v1beta.SummarizeMaintenancesResponse.maintenances:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceSummary
	0,  // 1: google.cloud.maintenance.api.v1beta.MaintenanceSummary.category:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceCategory
	17, // 2: google.cloud.maintenance.api.v1beta.MaintenanceSummary.maintenance_scheduled_start_time:type_name -> google.protobuf.Timestamp
	17, // 3: google.cloud.maintenance.api.v1beta.MaintenanceSummary.maintenance_scheduled_end_time:type_name -> google.protobuf.Timestamp
	17, // 4: google.cloud.maintenance.api.v1beta.MaintenanceSummary.maintenance_start_time:type_name -> google.protobuf.Timestamp
	17, // 5: google.cloud.maintenance.api.v1beta.MaintenanceSummary.maintenance_end_time:type_name -> google.protobuf.Timestamp
	7,  // 6: google.cloud.maintenance.api.v1beta.MaintenanceSummary.controls:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceControl
	11, // 7: google.cloud.maintenance.api.v1beta.MaintenanceSummary.stats:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceSummary.Stats
	13, // 8: google.cloud.maintenance.api.v1beta.ResourceMaintenance.resource:type_name -> google.cloud.maintenance.api.v1beta.ResourceMaintenance.Resource
	14, // 9: google.cloud.maintenance.api.v1beta.ResourceMaintenance.maintenance:type_name -> google.cloud.maintenance.api.v1beta.ResourceMaintenance.Maintenance
	1,  // 10: google.cloud.maintenance.api.v1beta.ResourceMaintenance.state:type_name -> google.cloud.maintenance.api.v1beta.ResourceMaintenance.State
	17, // 11: google.cloud.maintenance.api.v1beta.ResourceMaintenance.create_time:type_name -> google.protobuf.Timestamp
	17, // 12: google.cloud.maintenance.api.v1beta.ResourceMaintenance.update_time:type_name -> google.protobuf.Timestamp
	17, // 13: google.cloud.maintenance.api.v1beta.ResourceMaintenance.maintenance_start_time:type_name -> google.protobuf.Timestamp
	17, // 14: google.cloud.maintenance.api.v1beta.ResourceMaintenance.maintenance_end_time:type_name -> google.protobuf.Timestamp
	17, // 15: google.cloud.maintenance.api.v1beta.ResourceMaintenance.maintenance_cancel_time:type_name -> google.protobuf.Timestamp
	17, // 16: google.cloud.maintenance.api.v1beta.ResourceMaintenance.maintenance_scheduled_start_time:type_name -> google.protobuf.Timestamp
	17, // 17: google.cloud.maintenance.api.v1beta.ResourceMaintenance.maintenance_scheduled_end_time:type_name -> google.protobuf.Timestamp
	7,  // 18: google.cloud.maintenance.api.v1beta.ResourceMaintenance.controls:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceControl
	15, // 19: google.cloud.maintenance.api.v1beta.ResourceMaintenance.labels:type_name -> google.cloud.maintenance.api.v1beta.ResourceMaintenance.LabelsEntry
	16, // 20: google.cloud.maintenance.api.v1beta.ResourceMaintenance.annotations:type_name -> google.cloud.maintenance.api.v1beta.ResourceMaintenance.AnnotationsEntry
	2,  // 21: google.cloud.maintenance.api.v1beta.MaintenanceControl.control:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceControl.Control
	6,  // 22: google.cloud.maintenance.api.v1beta.ListResourceMaintenancesResponse.resource_maintenances:type_name -> google.cloud.maintenance.api.v1beta.ResourceMaintenance
	12, // 23: google.cloud.maintenance.api.v1beta.MaintenanceSummary.Stats.aggregates:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceSummary.Aggregate
	0,  // 24: google.cloud.maintenance.api.v1beta.ResourceMaintenance.Maintenance.category:type_name -> google.cloud.maintenance.api.v1beta.MaintenanceCategory
	3,  // 25: google.cloud.maintenance.api.v1beta.Maintenance.SummarizeMaintenances:input_type -> google.cloud.maintenance.api.v1beta.SummarizeMaintenancesRequest
	8,  // 26: google.cloud.maintenance.api.v1beta.Maintenance.ListResourceMaintenances:input_type -> google.cloud.maintenance.api.v1beta.ListResourceMaintenancesRequest
	10, // 27: google.cloud.maintenance.api.v1beta.Maintenance.GetResourceMaintenance:input_type -> google.cloud.maintenance.api.v1beta.GetResourceMaintenanceRequest
	4,  // 28: google.cloud.maintenance.api.v1beta.Maintenance.SummarizeMaintenances:output_type -> google.cloud.maintenance.api.v1beta.SummarizeMaintenancesResponse
	9,  // 29: google.cloud.maintenance.api.v1beta.Maintenance.ListResourceMaintenances:output_type -> google.cloud.maintenance.api.v1beta.ListResourceMaintenancesResponse
	6,  // 30: google.cloud.maintenance.api.v1beta.Maintenance.GetResourceMaintenance:output_type -> google.cloud.maintenance.api.v1beta.ResourceMaintenance
	28, // [28:31] is the sub-list for method output_type
	25, // [25:28] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_init() }
func file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_init() {
	if File_google_cloud_maintenance_api_v1beta_maintenance_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_goTypes,
		DependencyIndexes: file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_depIdxs,
		EnumInfos:         file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_enumTypes,
		MessageInfos:      file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_msgTypes,
	}.Build()
	File_google_cloud_maintenance_api_v1beta_maintenance_service_proto = out.File
	file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_rawDesc = nil
	file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_goTypes = nil
	file_google_cloud_maintenance_api_v1beta_maintenance_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MaintenanceClient is the client API for Maintenance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MaintenanceClient interface {
	// Retrieves the statistics of a specific maintenance.
	SummarizeMaintenances(ctx context.Context, in *SummarizeMaintenancesRequest, opts ...grpc.CallOption) (*SummarizeMaintenancesResponse, error)
	// Retrieve a collection of resource maintenances.
	ListResourceMaintenances(ctx context.Context, in *ListResourceMaintenancesRequest, opts ...grpc.CallOption) (*ListResourceMaintenancesResponse, error)
	// Retrieve a single resource maintenance.
	GetResourceMaintenance(ctx context.Context, in *GetResourceMaintenanceRequest, opts ...grpc.CallOption) (*ResourceMaintenance, error)
}

type maintenanceClient struct {
	cc grpc.ClientConnInterface
}

func NewMaintenanceClient(cc grpc.ClientConnInterface) MaintenanceClient {
	return &maintenanceClient{cc}
}

func (c *maintenanceClient) SummarizeMaintenances(ctx context.Context, in *SummarizeMaintenancesRequest, opts ...grpc.CallOption) (*SummarizeMaintenancesResponse, error) {
	out := new(SummarizeMaintenancesResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.maintenance.api.v1beta.Maintenance/SummarizeMaintenances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *maintenanceClient) ListResourceMaintenances(ctx context.Context, in *ListResourceMaintenancesRequest, opts ...grpc.CallOption) (*ListResourceMaintenancesResponse, error) {
	out := new(ListResourceMaintenancesResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.maintenance.api.v1beta.Maintenance/ListResourceMaintenances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *maintenanceClient) GetResourceMaintenance(ctx context.Context, in *GetResourceMaintenanceRequest, opts ...grpc.CallOption) (*ResourceMaintenance, error) {
	out := new(ResourceMaintenance)
	err := c.cc.Invoke(ctx, "/google.cloud.maintenance.api.v1beta.Maintenance/GetResourceMaintenance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MaintenanceServer is the server API for Maintenance service.
type MaintenanceServer interface {
	// Retrieves the statistics of a specific maintenance.
	SummarizeMaintenances(context.Context, *SummarizeMaintenancesRequest) (*SummarizeMaintenancesResponse, error)
	// Retrieve a collection of resource maintenances.
	ListResourceMaintenances(context.Context, *ListResourceMaintenancesRequest) (*ListResourceMaintenancesResponse, error)
	// Retrieve a single resource maintenance.
	GetResourceMaintenance(context.Context, *GetResourceMaintenanceRequest) (*ResourceMaintenance, error)
}

// UnimplementedMaintenanceServer can be embedded to have forward compatible implementations.
type UnimplementedMaintenanceServer struct {
}

func (*UnimplementedMaintenanceServer) SummarizeMaintenances(context.Context, *SummarizeMaintenancesRequest) (*SummarizeMaintenancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SummarizeMaintenances not implemented")
}
func (*UnimplementedMaintenanceServer) ListResourceMaintenances(context.Context, *ListResourceMaintenancesRequest) (*ListResourceMaintenancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResourceMaintenances not implemented")
}
func (*UnimplementedMaintenanceServer) GetResourceMaintenance(context.Context, *GetResourceMaintenanceRequest) (*ResourceMaintenance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceMaintenance not implemented")
}

func RegisterMaintenanceServer(s *grpc.Server, srv MaintenanceServer) {
	s.RegisterService(&_Maintenance_serviceDesc, srv)
}

func _Maintenance_SummarizeMaintenances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SummarizeMaintenancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MaintenanceServer).SummarizeMaintenances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.maintenance.api.v1beta.Maintenance/SummarizeMaintenances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MaintenanceServer).SummarizeMaintenances(ctx, req.(*SummarizeMaintenancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Maintenance_ListResourceMaintenances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceMaintenancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MaintenanceServer).ListResourceMaintenances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.maintenance.api.v1beta.Maintenance/ListResourceMaintenances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MaintenanceServer).ListResourceMaintenances(ctx, req.(*ListResourceMaintenancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Maintenance_GetResourceMaintenance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceMaintenanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MaintenanceServer).GetResourceMaintenance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.maintenance.api.v1beta.Maintenance/GetResourceMaintenance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MaintenanceServer).GetResourceMaintenance(ctx, req.(*GetResourceMaintenanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Maintenance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.maintenance.api.v1beta.Maintenance",
	HandlerType: (*MaintenanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SummarizeMaintenances",
			Handler:    _Maintenance_SummarizeMaintenances_Handler,
		},
		{
			MethodName: "ListResourceMaintenances",
			Handler:    _Maintenance_ListResourceMaintenances_Handler,
		},
		{
			MethodName: "GetResourceMaintenance",
			Handler:    _Maintenance_GetResourceMaintenance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/maintenance/api/v1beta/maintenance_service.proto",
}
