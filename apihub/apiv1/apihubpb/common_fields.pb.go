// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/apihub/v1/common_fields.proto

package apihubpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Lint state represents success or failure for linting.
type LintState int32

const (
	// Lint state unspecified.
	LintState_LINT_STATE_UNSPECIFIED LintState = 0
	// Linting was completed successfully.
	LintState_LINT_STATE_SUCCESS LintState = 1
	// Linting encountered errors.
	LintState_LINT_STATE_ERROR LintState = 2
)

// Enum value maps for LintState.
var (
	LintState_name = map[int32]string{
		0: "LINT_STATE_UNSPECIFIED",
		1: "LINT_STATE_SUCCESS",
		2: "LINT_STATE_ERROR",
	}
	LintState_value = map[string]int32{
		"LINT_STATE_UNSPECIFIED": 0,
		"LINT_STATE_SUCCESS":     1,
		"LINT_STATE_ERROR":       2,
	}
)

func (x LintState) Enum() *LintState {
	p := new(LintState)
	*p = x
	return p
}

func (x LintState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LintState) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[0].Descriptor()
}

func (LintState) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[0]
}

func (x LintState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LintState.Descriptor instead.
func (LintState) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{0}
}

// Enumeration of linter types.
type Linter int32

const (
	// Linter type unspecified.
	Linter_LINTER_UNSPECIFIED Linter = 0
	// Linter type spectral.
	Linter_SPECTRAL Linter = 1
	// Linter type other.
	Linter_OTHER Linter = 2
)

// Enum value maps for Linter.
var (
	Linter_name = map[int32]string{
		0: "LINTER_UNSPECIFIED",
		1: "SPECTRAL",
		2: "OTHER",
	}
	Linter_value = map[string]int32{
		"LINTER_UNSPECIFIED": 0,
		"SPECTRAL":           1,
		"OTHER":              2,
	}
)

func (x Linter) Enum() *Linter {
	p := new(Linter)
	*p = x
	return p
}

func (x Linter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Linter) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[1].Descriptor()
}

func (Linter) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[1]
}

func (x Linter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Linter.Descriptor instead.
func (Linter) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{1}
}

// Severity of the issue.
type Severity int32

const (
	// Severity unspecified.
	Severity_SEVERITY_UNSPECIFIED Severity = 0
	// Severity error.
	Severity_SEVERITY_ERROR Severity = 1
	// Severity warning.
	Severity_SEVERITY_WARNING Severity = 2
	// Severity info.
	Severity_SEVERITY_INFO Severity = 3
	// Severity hint.
	Severity_SEVERITY_HINT Severity = 4
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_ERROR",
		2: "SEVERITY_WARNING",
		3: "SEVERITY_INFO",
		4: "SEVERITY_HINT",
	}
	Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_ERROR":       1,
		"SEVERITY_WARNING":     2,
		"SEVERITY_INFO":        3,
		"SEVERITY_HINT":        4,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[2].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[2]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{2}
}

// AuthType represents the authentication type.
type AuthType int32

const (
	// Authentication type not specified.
	AuthType_AUTH_TYPE_UNSPECIFIED AuthType = 0
	// No authentication.
	AuthType_NO_AUTH AuthType = 1
	// Google service account authentication.
	AuthType_GOOGLE_SERVICE_ACCOUNT AuthType = 2
	// Username and password authentication.
	AuthType_USER_PASSWORD AuthType = 3
	// API Key authentication.
	AuthType_API_KEY AuthType = 4
	// Oauth 2.0 client credentials grant authentication.
	AuthType_OAUTH2_CLIENT_CREDENTIALS AuthType = 5
)

// Enum value maps for AuthType.
var (
	AuthType_name = map[int32]string{
		0: "AUTH_TYPE_UNSPECIFIED",
		1: "NO_AUTH",
		2: "GOOGLE_SERVICE_ACCOUNT",
		3: "USER_PASSWORD",
		4: "API_KEY",
		5: "OAUTH2_CLIENT_CREDENTIALS",
	}
	AuthType_value = map[string]int32{
		"AUTH_TYPE_UNSPECIFIED":     0,
		"NO_AUTH":                   1,
		"GOOGLE_SERVICE_ACCOUNT":    2,
		"USER_PASSWORD":             3,
		"API_KEY":                   4,
		"OAUTH2_CLIENT_CREDENTIALS": 5,
	}
)

func (x AuthType) Enum() *AuthType {
	p := new(AuthType)
	*p = x
	return p
}

func (x AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[3].Descriptor()
}

func (AuthType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[3]
}

func (x AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthType.Descriptor instead.
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{3}
}

// Enum for the plugin category.
type PluginCategory int32

const (
	// Default unspecified plugin type.
	PluginCategory_PLUGIN_CATEGORY_UNSPECIFIED PluginCategory = 0
	// API_GATEWAY plugins represent plugins built for API Gateways like Apigee.
	PluginCategory_API_GATEWAY PluginCategory = 1
	// API_PRODUCER plugins represent plugins built for API Producers like
	// Cloud Run, Application Integration etc.
	PluginCategory_API_PRODUCER PluginCategory = 2
)

// Enum value maps for PluginCategory.
var (
	PluginCategory_name = map[int32]string{
		0: "PLUGIN_CATEGORY_UNSPECIFIED",
		1: "API_GATEWAY",
		2: "API_PRODUCER",
	}
	PluginCategory_value = map[string]int32{
		"PLUGIN_CATEGORY_UNSPECIFIED": 0,
		"API_GATEWAY":                 1,
		"API_PRODUCER":                2,
	}
)

func (x PluginCategory) Enum() *PluginCategory {
	p := new(PluginCategory)
	*p = x
	return p
}

func (x PluginCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[4].Descriptor()
}

func (PluginCategory) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[4]
}

func (x PluginCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginCategory.Descriptor instead.
func (PluginCategory) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{4}
}

// Specifies the parsing mode for API specifications during creation and
// update.
// - `RELAXED`: Parsing errors in the specification content do not fail the
// API call.
// - `STRICT`: Parsing errors in the specification content result in failure
// of the API call.
// If not specified, defaults to `RELAXED`.
type Spec_ParsingMode int32

const (
	// Defaults to `RELAXED`.
	Spec_PARSING_MODE_UNSPECIFIED Spec_ParsingMode = 0
	// Parsing of the Spec on create and update is relaxed, meaning that
	// parsing errors the spec contents will not fail the API call.
	Spec_RELAXED Spec_ParsingMode = 1
	// Parsing of the Spec on create and update is strict, meaning that
	// parsing errors in the spec contents will fail the API call.
	Spec_STRICT Spec_ParsingMode = 2
)

// Enum value maps for Spec_ParsingMode.
var (
	Spec_ParsingMode_name = map[int32]string{
		0: "PARSING_MODE_UNSPECIFIED",
		1: "RELAXED",
		2: "STRICT",
	}
	Spec_ParsingMode_value = map[string]int32{
		"PARSING_MODE_UNSPECIFIED": 0,
		"RELAXED":                  1,
		"STRICT":                   2,
	}
)

func (x Spec_ParsingMode) Enum() *Spec_ParsingMode {
	p := new(Spec_ParsingMode)
	*p = x
	return p
}

func (x Spec_ParsingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Spec_ParsingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[5].Descriptor()
}

func (Spec_ParsingMode) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[5]
}

func (x Spec_ParsingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Spec_ParsingMode.Descriptor instead.
func (Spec_ParsingMode) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{2, 0}
}

// Enumeration of definition types.
type Definition_Type int32

const (
	// Definition type unspecified.
	Definition_TYPE_UNSPECIFIED Definition_Type = 0
	// Definition type schema.
	Definition_SCHEMA Definition_Type = 1
)

// Enum value maps for Definition_Type.
var (
	Definition_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "SCHEMA",
	}
	Definition_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"SCHEMA":           1,
	}
)

func (x Definition_Type) Enum() *Definition_Type {
	p := new(Definition_Type)
	*p = x
	return p
}

func (x Definition_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Definition_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[6].Descriptor()
}

func (Definition_Type) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[6]
}

func (x Definition_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Definition_Type.Descriptor instead.
func (Definition_Type) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{5, 0}
}

// Enumeration of attribute definition types.
type Attribute_DefinitionType int32

const (
	// Attribute definition type unspecified.
	Attribute_DEFINITION_TYPE_UNSPECIFIED Attribute_DefinitionType = 0
	// The attribute is predefined by the API Hub. Note that only the list of
	// allowed values can be updated in this case via UpdateAttribute method.
	Attribute_SYSTEM_DEFINED Attribute_DefinitionType = 1
	// The attribute is defined by the user.
	Attribute_USER_DEFINED Attribute_DefinitionType = 2
)

// Enum value maps for Attribute_DefinitionType.
var (
	Attribute_DefinitionType_name = map[int32]string{
		0: "DEFINITION_TYPE_UNSPECIFIED",
		1: "SYSTEM_DEFINED",
		2: "USER_DEFINED",
	}
	Attribute_DefinitionType_value = map[string]int32{
		"DEFINITION_TYPE_UNSPECIFIED": 0,
		"SYSTEM_DEFINED":              1,
		"USER_DEFINED":                2,
	}
)

func (x Attribute_DefinitionType) Enum() *Attribute_DefinitionType {
	p := new(Attribute_DefinitionType)
	*p = x
	return p
}

func (x Attribute_DefinitionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_DefinitionType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[7].Descriptor()
}

func (Attribute_DefinitionType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[7]
}

func (x Attribute_DefinitionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_DefinitionType.Descriptor instead.
func (Attribute_DefinitionType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{6, 0}
}

// Enumeration for the scope of the attribute representing the resource in the
// API Hub to which the attribute can be linked.
type Attribute_Scope int32

const (
	// Scope Unspecified.
	Attribute_SCOPE_UNSPECIFIED Attribute_Scope = 0
	// Attribute can be linked to an API.
	Attribute_API Attribute_Scope = 1
	// Attribute can be linked to an API version.
	Attribute_VERSION Attribute_Scope = 2
	// Attribute can be linked to a Spec.
	Attribute_SPEC Attribute_Scope = 3
	// Attribute can be linked to an API Operation.
	Attribute_API_OPERATION Attribute_Scope = 4
	// Attribute can be linked to a Deployment.
	Attribute_DEPLOYMENT Attribute_Scope = 5
	// Attribute can be linked to a Dependency.
	Attribute_DEPENDENCY Attribute_Scope = 6
	// Attribute can be linked to a definition.
	Attribute_DEFINITION Attribute_Scope = 7
	// Attribute can be linked to a ExternalAPI.
	Attribute_EXTERNAL_API Attribute_Scope = 8
	// Attribute can be linked to a Plugin.
	Attribute_PLUGIN Attribute_Scope = 9
)

// Enum value maps for Attribute_Scope.
var (
	Attribute_Scope_name = map[int32]string{
		0: "SCOPE_UNSPECIFIED",
		1: "API",
		2: "VERSION",
		3: "SPEC",
		4: "API_OPERATION",
		5: "DEPLOYMENT",
		6: "DEPENDENCY",
		7: "DEFINITION",
		8: "EXTERNAL_API",
		9: "PLUGIN",
	}
	Attribute_Scope_value = map[string]int32{
		"SCOPE_UNSPECIFIED": 0,
		"API":               1,
		"VERSION":           2,
		"SPEC":              3,
		"API_OPERATION":     4,
		"DEPLOYMENT":        5,
		"DEPENDENCY":        6,
		"DEFINITION":        7,
		"EXTERNAL_API":      8,
		"PLUGIN":            9,
	}
)

func (x Attribute_Scope) Enum() *Attribute_Scope {
	p := new(Attribute_Scope)
	*p = x
	return p
}

func (x Attribute_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[8].Descriptor()
}

func (Attribute_Scope) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[8]
}

func (x Attribute_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_Scope.Descriptor instead.
func (Attribute_Scope) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{6, 1}
}

// Enumeration of attribute's data type.
type Attribute_DataType int32

const (
	// Attribute data type unspecified.
	Attribute_DATA_TYPE_UNSPECIFIED Attribute_DataType = 0
	// Attribute's value is of type enum.
	Attribute_ENUM Attribute_DataType = 1
	// Attribute's value is of type json.
	Attribute_JSON Attribute_DataType = 2
	// Attribute's value is of type string.
	Attribute_STRING Attribute_DataType = 3
	// Attribute's value is of type uri.
	Attribute_URI Attribute_DataType = 4
)

// Enum value maps for Attribute_DataType.
var (
	Attribute_DataType_name = map[int32]string{
		0: "DATA_TYPE_UNSPECIFIED",
		1: "ENUM",
		2: "JSON",
		3: "STRING",
		4: "URI",
	}
	Attribute_DataType_value = map[string]int32{
		"DATA_TYPE_UNSPECIFIED": 0,
		"ENUM":                  1,
		"JSON":                  2,
		"STRING":                3,
		"URI":                   4,
	}
)

func (x Attribute_DataType) Enum() *Attribute_DataType {
	p := new(Attribute_DataType)
	*p = x
	return p
}

func (x Attribute_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[9].Descriptor()
}

func (Attribute_DataType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[9]
}

func (x Attribute_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attribute_DataType.Descriptor instead.
func (Attribute_DataType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{6, 2}
}

// Enumeration of spec formats.
type OpenApiSpecDetails_Format int32

const (
	// SpecFile type unspecified.
	OpenApiSpecDetails_FORMAT_UNSPECIFIED OpenApiSpecDetails_Format = 0
	// OpenAPI Spec v2.0.
	OpenApiSpecDetails_OPEN_API_SPEC_2_0 OpenApiSpecDetails_Format = 1
	// OpenAPI Spec v3.0.
	OpenApiSpecDetails_OPEN_API_SPEC_3_0 OpenApiSpecDetails_Format = 2
	// OpenAPI Spec v3.1.
	OpenApiSpecDetails_OPEN_API_SPEC_3_1 OpenApiSpecDetails_Format = 3
)

// Enum value maps for OpenApiSpecDetails_Format.
var (
	OpenApiSpecDetails_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "OPEN_API_SPEC_2_0",
		2: "OPEN_API_SPEC_3_0",
		3: "OPEN_API_SPEC_3_1",
	}
	OpenApiSpecDetails_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"OPEN_API_SPEC_2_0":  1,
		"OPEN_API_SPEC_3_0":  2,
		"OPEN_API_SPEC_3_1":  3,
	}
)

func (x OpenApiSpecDetails_Format) Enum() *OpenApiSpecDetails_Format {
	p := new(OpenApiSpecDetails_Format)
	*p = x
	return p
}

func (x OpenApiSpecDetails_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenApiSpecDetails_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[10].Descriptor()
}

func (OpenApiSpecDetails_Format) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[10]
}

func (x OpenApiSpecDetails_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenApiSpecDetails_Format.Descriptor instead.
func (OpenApiSpecDetails_Format) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{9, 0}
}

// Enumeration of Method types.
type HttpOperation_Method int32

const (
	// Method unspecified.
	HttpOperation_METHOD_UNSPECIFIED HttpOperation_Method = 0
	// Get Operation type.
	HttpOperation_GET HttpOperation_Method = 1
	// Put Operation type.
	HttpOperation_PUT HttpOperation_Method = 2
	// Post Operation type.
	HttpOperation_POST HttpOperation_Method = 3
	// Delete Operation type.
	HttpOperation_DELETE HttpOperation_Method = 4
	// Options Operation type.
	HttpOperation_OPTIONS HttpOperation_Method = 5
	// Head Operation type.
	HttpOperation_HEAD HttpOperation_Method = 6
	// Patch Operation type.
	HttpOperation_PATCH HttpOperation_Method = 7
	// Trace Operation type.
	HttpOperation_TRACE HttpOperation_Method = 8
)

// Enum value maps for HttpOperation_Method.
var (
	HttpOperation_Method_name = map[int32]string{
		0: "METHOD_UNSPECIFIED",
		1: "GET",
		2: "PUT",
		3: "POST",
		4: "DELETE",
		5: "OPTIONS",
		6: "HEAD",
		7: "PATCH",
		8: "TRACE",
	}
	HttpOperation_Method_value = map[string]int32{
		"METHOD_UNSPECIFIED": 0,
		"GET":                1,
		"PUT":                2,
		"POST":               3,
		"DELETE":             4,
		"OPTIONS":            5,
		"HEAD":               6,
		"PATCH":              7,
		"TRACE":              8,
	}
)

func (x HttpOperation_Method) Enum() *HttpOperation_Method {
	p := new(HttpOperation_Method)
	*p = x
	return p
}

func (x HttpOperation_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpOperation_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[11].Descriptor()
}

func (HttpOperation_Method) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[11]
}

func (x HttpOperation_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpOperation_Method.Descriptor instead.
func (HttpOperation_Method) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{11, 0}
}

// Possible states for a dependency.
type Dependency_State int32

const (
	// Default value. This value is unused.
	Dependency_STATE_UNSPECIFIED Dependency_State = 0
	// Dependency will be in a proposed state when it is newly identified by the
	// API hub on its own.
	Dependency_PROPOSED Dependency_State = 1
	// Dependency will be in a validated state when it is validated by the
	// admin or manually created in the API hub.
	Dependency_VALIDATED Dependency_State = 2
)

// Enum value maps for Dependency_State.
var (
	Dependency_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "PROPOSED",
		2: "VALIDATED",
	}
	Dependency_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"PROPOSED":          1,
		"VALIDATED":         2,
	}
)

func (x Dependency_State) Enum() *Dependency_State {
	p := new(Dependency_State)
	*p = x
	return p
}

func (x Dependency_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dependency_State) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[12].Descriptor()
}

func (Dependency_State) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[12]
}

func (x Dependency_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dependency_State.Descriptor instead.
func (Dependency_State) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{17, 0}
}

// Possible modes of discovering the dependency.
type Dependency_DiscoveryMode int32

const (
	// Default value. This value is unused.
	Dependency_DISCOVERY_MODE_UNSPECIFIED Dependency_DiscoveryMode = 0
	// Manual mode of discovery when the dependency is defined by the user.
	Dependency_MANUAL Dependency_DiscoveryMode = 1
)

// Enum value maps for Dependency_DiscoveryMode.
var (
	Dependency_DiscoveryMode_name = map[int32]string{
		0: "DISCOVERY_MODE_UNSPECIFIED",
		1: "MANUAL",
	}
	Dependency_DiscoveryMode_value = map[string]int32{
		"DISCOVERY_MODE_UNSPECIFIED": 0,
		"MANUAL":                     1,
	}
)

func (x Dependency_DiscoveryMode) Enum() *Dependency_DiscoveryMode {
	p := new(Dependency_DiscoveryMode)
	*p = x
	return p
}

func (x Dependency_DiscoveryMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dependency_DiscoveryMode) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[13].Descriptor()
}

func (Dependency_DiscoveryMode) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[13]
}

func (x Dependency_DiscoveryMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dependency_DiscoveryMode.Descriptor instead.
func (Dependency_DiscoveryMode) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{17, 1}
}

// Possible values representing an error in the dependency.
type DependencyErrorDetail_Error int32

const (
	// Default value used for no error in the dependency.
	DependencyErrorDetail_ERROR_UNSPECIFIED DependencyErrorDetail_Error = 0
	// Supplier entity has been deleted.
	DependencyErrorDetail_SUPPLIER_NOT_FOUND DependencyErrorDetail_Error = 1
	// Supplier entity has been recreated.
	DependencyErrorDetail_SUPPLIER_RECREATED DependencyErrorDetail_Error = 2
)

// Enum value maps for DependencyErrorDetail_Error.
var (
	DependencyErrorDetail_Error_name = map[int32]string{
		0: "ERROR_UNSPECIFIED",
		1: "SUPPLIER_NOT_FOUND",
		2: "SUPPLIER_RECREATED",
	}
	DependencyErrorDetail_Error_value = map[string]int32{
		"ERROR_UNSPECIFIED":  0,
		"SUPPLIER_NOT_FOUND": 1,
		"SUPPLIER_RECREATED": 2,
	}
)

func (x DependencyErrorDetail_Error) Enum() *DependencyErrorDetail_Error {
	p := new(DependencyErrorDetail_Error)
	*p = x
	return p
}

func (x DependencyErrorDetail_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DependencyErrorDetail_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[14].Descriptor()
}

func (DependencyErrorDetail_Error) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[14]
}

func (x DependencyErrorDetail_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DependencyErrorDetail_Error.Descriptor instead.
func (DependencyErrorDetail_Error) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{19, 0}
}

// State of the ApiHub Instance.
type ApiHubInstance_State int32

const (
	// The default value. This value is used if the state is omitted.
	ApiHubInstance_STATE_UNSPECIFIED ApiHubInstance_State = 0
	// The ApiHub instance has not been initialized or has been deleted.
	ApiHubInstance_INACTIVE ApiHubInstance_State = 1
	// The ApiHub instance is being created.
	ApiHubInstance_CREATING ApiHubInstance_State = 2
	// The ApiHub instance has been created and is ready for use.
	ApiHubInstance_ACTIVE ApiHubInstance_State = 3
	// The ApiHub instance is being updated.
	ApiHubInstance_UPDATING ApiHubInstance_State = 4
	// The ApiHub instance is being deleted.
	ApiHubInstance_DELETING ApiHubInstance_State = 5
	// The ApiHub instance encountered an error during a state change.
	ApiHubInstance_FAILED ApiHubInstance_State = 6
)

// Enum value maps for ApiHubInstance_State.
var (
	ApiHubInstance_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "INACTIVE",
		2: "CREATING",
		3: "ACTIVE",
		4: "UPDATING",
		5: "DELETING",
		6: "FAILED",
	}
	ApiHubInstance_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"INACTIVE":          1,
		"CREATING":          2,
		"ACTIVE":            3,
		"UPDATING":          4,
		"DELETING":          5,
		"FAILED":            6,
	}
)

func (x ApiHubInstance_State) Enum() *ApiHubInstance_State {
	p := new(ApiHubInstance_State)
	*p = x
	return p
}

func (x ApiHubInstance_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiHubInstance_State) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[15].Descriptor()
}

func (ApiHubInstance_State) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[15]
}

func (x ApiHubInstance_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiHubInstance_State.Descriptor instead.
func (ApiHubInstance_State) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{25, 0}
}

// Types of data encryption.
type ApiHubInstance_Config_EncryptionType int32

const (
	// Encryption type unspecified.
	ApiHubInstance_Config_ENCRYPTION_TYPE_UNSPECIFIED ApiHubInstance_Config_EncryptionType = 0
	// Default encryption using Google managed encryption key.
	ApiHubInstance_Config_GMEK ApiHubInstance_Config_EncryptionType = 1
	// Encryption using customer managed encryption key.
	ApiHubInstance_Config_CMEK ApiHubInstance_Config_EncryptionType = 2
)

// Enum value maps for ApiHubInstance_Config_EncryptionType.
var (
	ApiHubInstance_Config_EncryptionType_name = map[int32]string{
		0: "ENCRYPTION_TYPE_UNSPECIFIED",
		1: "GMEK",
		2: "CMEK",
	}
	ApiHubInstance_Config_EncryptionType_value = map[string]int32{
		"ENCRYPTION_TYPE_UNSPECIFIED": 0,
		"GMEK":                        1,
		"CMEK":                        2,
	}
)

func (x ApiHubInstance_Config_EncryptionType) Enum() *ApiHubInstance_Config_EncryptionType {
	p := new(ApiHubInstance_Config_EncryptionType)
	*p = x
	return p
}

func (x ApiHubInstance_Config_EncryptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiHubInstance_Config_EncryptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[16].Descriptor()
}

func (ApiHubInstance_Config_EncryptionType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[16]
}

func (x ApiHubInstance_Config_EncryptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiHubInstance_Config_EncryptionType.Descriptor instead.
func (ApiHubInstance_Config_EncryptionType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{25, 0, 0}
}

// ValueType indicates the data type of the value.
type ConfigVariableTemplate_ValueType int32

const (
	// Value type is not specified.
	ConfigVariableTemplate_VALUE_TYPE_UNSPECIFIED ConfigVariableTemplate_ValueType = 0
	// Value type is string.
	ConfigVariableTemplate_STRING ConfigVariableTemplate_ValueType = 1
	// Value type is integer.
	ConfigVariableTemplate_INT ConfigVariableTemplate_ValueType = 2
	// Value type is boolean.
	ConfigVariableTemplate_BOOL ConfigVariableTemplate_ValueType = 3
	// Value type is secret.
	ConfigVariableTemplate_SECRET ConfigVariableTemplate_ValueType = 4
	// Value type is enum.
	ConfigVariableTemplate_ENUM ConfigVariableTemplate_ValueType = 5
	// Value type is multi select.
	ConfigVariableTemplate_MULTI_SELECT ConfigVariableTemplate_ValueType = 6
	// Value type is multi string.
	ConfigVariableTemplate_MULTI_STRING ConfigVariableTemplate_ValueType = 7
	// Value type is multi int.
	ConfigVariableTemplate_MULTI_INT ConfigVariableTemplate_ValueType = 8
)

// Enum value maps for ConfigVariableTemplate_ValueType.
var (
	ConfigVariableTemplate_ValueType_name = map[int32]string{
		0: "VALUE_TYPE_UNSPECIFIED",
		1: "STRING",
		2: "INT",
		3: "BOOL",
		4: "SECRET",
		5: "ENUM",
		6: "MULTI_SELECT",
		7: "MULTI_STRING",
		8: "MULTI_INT",
	}
	ConfigVariableTemplate_ValueType_value = map[string]int32{
		"VALUE_TYPE_UNSPECIFIED": 0,
		"STRING":                 1,
		"INT":                    2,
		"BOOL":                   3,
		"SECRET":                 4,
		"ENUM":                   5,
		"MULTI_SELECT":           6,
		"MULTI_STRING":           7,
		"MULTI_INT":              8,
	}
)

func (x ConfigVariableTemplate_ValueType) Enum() *ConfigVariableTemplate_ValueType {
	p := new(ConfigVariableTemplate_ValueType)
	*p = x
	return p
}

func (x ConfigVariableTemplate_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigVariableTemplate_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[17].Descriptor()
}

func (ConfigVariableTemplate_ValueType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[17]
}

func (x ConfigVariableTemplate_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigVariableTemplate_ValueType.Descriptor instead.
func (ConfigVariableTemplate_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{29, 0}
}

// Enum of location an HTTP element can be.
type AuthConfig_ApiKeyConfig_HttpElementLocation int32

const (
	// HTTP element location not specified.
	AuthConfig_ApiKeyConfig_HTTP_ELEMENT_LOCATION_UNSPECIFIED AuthConfig_ApiKeyConfig_HttpElementLocation = 0
	// Element is in the HTTP request query.
	AuthConfig_ApiKeyConfig_QUERY AuthConfig_ApiKeyConfig_HttpElementLocation = 1
	// Element is in the HTTP request header.
	AuthConfig_ApiKeyConfig_HEADER AuthConfig_ApiKeyConfig_HttpElementLocation = 2
	// Element is in the HTTP request path.
	AuthConfig_ApiKeyConfig_PATH AuthConfig_ApiKeyConfig_HttpElementLocation = 3
	// Element is in the HTTP request body.
	AuthConfig_ApiKeyConfig_BODY AuthConfig_ApiKeyConfig_HttpElementLocation = 4
	// Element is in the HTTP request cookie.
	AuthConfig_ApiKeyConfig_COOKIE AuthConfig_ApiKeyConfig_HttpElementLocation = 5
)

// Enum value maps for AuthConfig_ApiKeyConfig_HttpElementLocation.
var (
	AuthConfig_ApiKeyConfig_HttpElementLocation_name = map[int32]string{
		0: "HTTP_ELEMENT_LOCATION_UNSPECIFIED",
		1: "QUERY",
		2: "HEADER",
		3: "PATH",
		4: "BODY",
		5: "COOKIE",
	}
	AuthConfig_ApiKeyConfig_HttpElementLocation_value = map[string]int32{
		"HTTP_ELEMENT_LOCATION_UNSPECIFIED": 0,
		"QUERY":                             1,
		"HEADER":                            2,
		"PATH":                              3,
		"BODY":                              4,
		"COOKIE":                            5,
	}
)

func (x AuthConfig_ApiKeyConfig_HttpElementLocation) Enum() *AuthConfig_ApiKeyConfig_HttpElementLocation {
	p := new(AuthConfig_ApiKeyConfig_HttpElementLocation)
	*p = x
	return p
}

func (x AuthConfig_ApiKeyConfig_HttpElementLocation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthConfig_ApiKeyConfig_HttpElementLocation) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[18].Descriptor()
}

func (AuthConfig_ApiKeyConfig_HttpElementLocation) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[18]
}

func (x AuthConfig_ApiKeyConfig_HttpElementLocation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthConfig_ApiKeyConfig_HttpElementLocation.Descriptor instead.
func (AuthConfig_ApiKeyConfig_HttpElementLocation) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{32, 2, 0}
}

// The possible types of the source.
type SourceMetadata_SourceType int32

const (
	// Source type not specified.
	SourceMetadata_SOURCE_TYPE_UNSPECIFIED SourceMetadata_SourceType = 0
	// Source type plugin.
	SourceMetadata_PLUGIN SourceMetadata_SourceType = 1
)

// Enum value maps for SourceMetadata_SourceType.
var (
	SourceMetadata_SourceType_name = map[int32]string{
		0: "SOURCE_TYPE_UNSPECIFIED",
		1: "PLUGIN",
	}
	SourceMetadata_SourceType_value = map[string]int32{
		"SOURCE_TYPE_UNSPECIFIED": 0,
		"PLUGIN":                  1,
	}
)

func (x SourceMetadata_SourceType) Enum() *SourceMetadata_SourceType {
	p := new(SourceMetadata_SourceType)
	*p = x
	return p
}

func (x SourceMetadata_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceMetadata_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[19].Descriptor()
}

func (SourceMetadata_SourceType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[19]
}

func (x SourceMetadata_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceMetadata_SourceType.Descriptor instead.
func (SourceMetadata_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{33, 0}
}

// DiscoveredApiObservation protocol style
type DiscoveredApiObservation_Style int32

const (
	// Unknown style
	DiscoveredApiObservation_STYLE_UNSPECIFIED DiscoveredApiObservation_Style = 0
	// Style is Rest API
	DiscoveredApiObservation_REST DiscoveredApiObservation_Style = 1
	// Style is Grpc API
	DiscoveredApiObservation_GRPC DiscoveredApiObservation_Style = 2
	// Style is GraphQL API
	DiscoveredApiObservation_GRAPHQL DiscoveredApiObservation_Style = 3
)

// Enum value maps for DiscoveredApiObservation_Style.
var (
	DiscoveredApiObservation_Style_name = map[int32]string{
		0: "STYLE_UNSPECIFIED",
		1: "REST",
		2: "GRPC",
		3: "GRAPHQL",
	}
	DiscoveredApiObservation_Style_value = map[string]int32{
		"STYLE_UNSPECIFIED": 0,
		"REST":              1,
		"GRPC":              2,
		"GRAPHQL":           3,
	}
)

func (x DiscoveredApiObservation_Style) Enum() *DiscoveredApiObservation_Style {
	p := new(DiscoveredApiObservation_Style)
	*p = x
	return p
}

func (x DiscoveredApiObservation_Style) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveredApiObservation_Style) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[20].Descriptor()
}

func (DiscoveredApiObservation_Style) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[20]
}

func (x DiscoveredApiObservation_Style) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoveredApiObservation_Style.Descriptor instead.
func (DiscoveredApiObservation_Style) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{34, 0}
}

// The possible types of the source from which the observation was collected.
type DiscoveredApiObservation_SourceType int32

const (
	// Source type not specified.
	DiscoveredApiObservation_SOURCE_TYPE_UNSPECIFIED DiscoveredApiObservation_SourceType = 0
	// GCP external load balancer.
	DiscoveredApiObservation_GCP_XLB DiscoveredApiObservation_SourceType = 1
	// GCP internal load balancer.
	DiscoveredApiObservation_GCP_ILB DiscoveredApiObservation_SourceType = 2
)

// Enum value maps for DiscoveredApiObservation_SourceType.
var (
	DiscoveredApiObservation_SourceType_name = map[int32]string{
		0: "SOURCE_TYPE_UNSPECIFIED",
		1: "GCP_XLB",
		2: "GCP_ILB",
	}
	DiscoveredApiObservation_SourceType_value = map[string]int32{
		"SOURCE_TYPE_UNSPECIFIED": 0,
		"GCP_XLB":                 1,
		"GCP_ILB":                 2,
	}
)

func (x DiscoveredApiObservation_SourceType) Enum() *DiscoveredApiObservation_SourceType {
	p := new(DiscoveredApiObservation_SourceType)
	*p = x
	return p
}

func (x DiscoveredApiObservation_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveredApiObservation_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[21].Descriptor()
}

func (DiscoveredApiObservation_SourceType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[21]
}

func (x DiscoveredApiObservation_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoveredApiObservation_SourceType.Descriptor instead.
func (DiscoveredApiObservation_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{34, 1}
}

// The classification of the discovered API operation.
type DiscoveredApiOperation_Classification int32

const (
	// Operation is not classified as known or unknown.
	DiscoveredApiOperation_CLASSIFICATION_UNSPECIFIED DiscoveredApiOperation_Classification = 0
	// Operation has a matched catalog operation.
	DiscoveredApiOperation_KNOWN DiscoveredApiOperation_Classification = 1
	// Operation does not have a matched catalog operation.
	DiscoveredApiOperation_UNKNOWN DiscoveredApiOperation_Classification = 2
)

// Enum value maps for DiscoveredApiOperation_Classification.
var (
	DiscoveredApiOperation_Classification_name = map[int32]string{
		0: "CLASSIFICATION_UNSPECIFIED",
		1: "KNOWN",
		2: "UNKNOWN",
	}
	DiscoveredApiOperation_Classification_value = map[string]int32{
		"CLASSIFICATION_UNSPECIFIED": 0,
		"KNOWN":                      1,
		"UNKNOWN":                    2,
	}
)

func (x DiscoveredApiOperation_Classification) Enum() *DiscoveredApiOperation_Classification {
	p := new(DiscoveredApiOperation_Classification)
	*p = x
	return p
}

func (x DiscoveredApiOperation_Classification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveredApiOperation_Classification) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[22].Descriptor()
}

func (DiscoveredApiOperation_Classification) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[22]
}

func (x DiscoveredApiOperation_Classification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoveredApiOperation_Classification.Descriptor instead.
func (DiscoveredApiOperation_Classification) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{35, 0}
}

// Type of data
type HttpOperationDetails_DataType int32

const (
	// Unspecified data type
	HttpOperationDetails_DATA_TYPE_UNSPECIFIED HttpOperationDetails_DataType = 0
	// Boolean data type
	HttpOperationDetails_BOOL HttpOperationDetails_DataType = 1
	// Integer data type
	HttpOperationDetails_INTEGER HttpOperationDetails_DataType = 2
	// Float data type
	HttpOperationDetails_FLOAT HttpOperationDetails_DataType = 3
	// String data type
	HttpOperationDetails_STRING HttpOperationDetails_DataType = 4
	// UUID data type
	HttpOperationDetails_UUID HttpOperationDetails_DataType = 5
)

// Enum value maps for HttpOperationDetails_DataType.
var (
	HttpOperationDetails_DataType_name = map[int32]string{
		0: "DATA_TYPE_UNSPECIFIED",
		1: "BOOL",
		2: "INTEGER",
		3: "FLOAT",
		4: "STRING",
		5: "UUID",
	}
	HttpOperationDetails_DataType_value = map[string]int32{
		"DATA_TYPE_UNSPECIFIED": 0,
		"BOOL":                  1,
		"INTEGER":               2,
		"FLOAT":                 3,
		"STRING":                4,
		"UUID":                  5,
	}
)

func (x HttpOperationDetails_DataType) Enum() *HttpOperationDetails_DataType {
	p := new(HttpOperationDetails_DataType)
	*p = x
	return p
}

func (x HttpOperationDetails_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpOperationDetails_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_common_fields_proto_enumTypes[23].Descriptor()
}

func (HttpOperationDetails_DataType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_common_fields_proto_enumTypes[23]
}

func (x HttpOperationDetails_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpOperationDetails_DataType.Descriptor instead.
func (HttpOperationDetails_DataType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{36, 0}
}

// An API resource in the API Hub.
type Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the API resource in the API Hub.
	//
	// Format:
	// `projects/{project}/locations/{location}/apis/{api}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The display name of the API resource.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional. The description of the API resource.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. The documentation for the API resource.
	Documentation *Documentation `protobuf:"bytes,4,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Optional. Owner details for the API resource.
	Owner *Owner `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	// Output only. The list of versions present in an API resource.
	// Note: An API resource can be associated with more than 1 version.
	// Format is
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
	Versions []string `protobuf:"bytes,6,rep,name=versions,proto3" json:"versions,omitempty"`
	// Output only. The time at which the API resource was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the API resource was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The target users for the API.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-target-user`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	TargetUser *AttributeValues `protobuf:"bytes,9,opt,name=target_user,json=targetUser,proto3" json:"target_user,omitempty"`
	// Optional. The team owning the API.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-team`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	Team *AttributeValues `protobuf:"bytes,10,opt,name=team,proto3" json:"team,omitempty"`
	// Optional. The business unit owning the API.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-business-unit`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	BusinessUnit *AttributeValues `protobuf:"bytes,11,opt,name=business_unit,json=businessUnit,proto3" json:"business_unit,omitempty"`
	// Optional. The maturity level of the API.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-maturity-level`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	MaturityLevel *AttributeValues `protobuf:"bytes,12,opt,name=maturity_level,json=maturityLevel,proto3" json:"maturity_level,omitempty"`
	// Optional. The list of user defined attributes associated with the API
	// resource. The key is the attribute name. It will be of the format:
	// `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,13,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. The style of the API.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-api-style`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	ApiStyle *AttributeValues `protobuf:"bytes,14,opt,name=api_style,json=apiStyle,proto3" json:"api_style,omitempty"`
	// Optional. The selected version for an API resource.
	// This can be used when special handling is needed on client side for
	// particular version of the API. Format is
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
	SelectedVersion string `protobuf:"bytes,15,opt,name=selected_version,json=selectedVersion,proto3" json:"selected_version,omitempty"`
	// Optional. The api requirement doc associated with the API resource.
	// Carinality is 1 for this attribute. This maps to the following system
	// defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-api-requirements`
	// attribute. The value of the attribute should be a proper URI, and in case
	// of Cloud Storage URI, it should point to a Cloud Storage object,
	// not a directory.
	ApiRequirements *AttributeValues `protobuf:"bytes,16,opt,name=api_requirements,json=apiRequirements,proto3" json:"api_requirements,omitempty"`
	// Optional. Fingerprint of the API resource.
	Fingerprint string `protobuf:"bytes,17,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	// Output only. The list of sources and metadata from the sources of the API
	// resource.
	SourceMetadata []*SourceMetadata `protobuf:"bytes,18,rep,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
	// Optional. The api functional requirements associated with the API resource.
	// Carinality is 1 for this attribute.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-api-functional-requirements`
	// attribute. The value of the attribute should be a proper URI, and in case
	// of Cloud Storage URI, it should point to a Cloud Storage object,
	// not a directory.
	ApiFunctionalRequirements *AttributeValues `protobuf:"bytes,19,opt,name=api_functional_requirements,json=apiFunctionalRequirements,proto3" json:"api_functional_requirements,omitempty"`
	// Optional. The api technical requirements associated with the API resource.
	// Carinality is 1 for this attribute. This maps to the following system
	// defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-api-technical-requirements`
	// attribute. The value of the attribute should be a proper URI, and in case
	// of Cloud Storage URI, it should point to a Cloud Storage object,
	// not a directory.
	ApiTechnicalRequirements *AttributeValues `protobuf:"bytes,20,opt,name=api_technical_requirements,json=apiTechnicalRequirements,proto3" json:"api_technical_requirements,omitempty"`
}

func (x *Api) Reset() {
	*x = Api{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Api) ProtoMessage() {}

func (x *Api) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Api.ProtoReflect.Descriptor instead.
func (*Api) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{0}
}

func (x *Api) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Api) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Api) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Api) GetDocumentation() *Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *Api) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Api) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *Api) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Api) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Api) GetTargetUser() *AttributeValues {
	if x != nil {
		return x.TargetUser
	}
	return nil
}

func (x *Api) GetTeam() *AttributeValues {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Api) GetBusinessUnit() *AttributeValues {
	if x != nil {
		return x.BusinessUnit
	}
	return nil
}

func (x *Api) GetMaturityLevel() *AttributeValues {
	if x != nil {
		return x.MaturityLevel
	}
	return nil
}

func (x *Api) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Api) GetApiStyle() *AttributeValues {
	if x != nil {
		return x.ApiStyle
	}
	return nil
}

func (x *Api) GetSelectedVersion() string {
	if x != nil {
		return x.SelectedVersion
	}
	return ""
}

func (x *Api) GetApiRequirements() *AttributeValues {
	if x != nil {
		return x.ApiRequirements
	}
	return nil
}

func (x *Api) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Api) GetSourceMetadata() []*SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

func (x *Api) GetApiFunctionalRequirements() *AttributeValues {
	if x != nil {
		return x.ApiFunctionalRequirements
	}
	return nil
}

func (x *Api) GetApiTechnicalRequirements() *AttributeValues {
	if x != nil {
		return x.ApiTechnicalRequirements
	}
	return nil
}

// Represents a version of the API resource in API hub. This is also referred
// to as the API version.
type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the version.
	//
	// Format:
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The display name of the version.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional. The description of the version.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. The documentation of the version.
	Documentation *Documentation `protobuf:"bytes,4,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Output only. The specs associated with this version.
	// Note that an API version can be associated with multiple specs.
	// Format is
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
	Specs []string `protobuf:"bytes,5,rep,name=specs,proto3" json:"specs,omitempty"`
	// Output only. The operations contained in the API version.
	// These operations will be added to the version when a new spec is
	// added or when an existing spec is updated. Format is
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
	ApiOperations []string `protobuf:"bytes,6,rep,name=api_operations,json=apiOperations,proto3" json:"api_operations,omitempty"`
	// Output only. The definitions contained in the API version.
	// These definitions will be added to the version when a new spec is
	// added or when an existing spec is updated. Format is
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/definitions/{definition}`
	Definitions []string `protobuf:"bytes,7,rep,name=definitions,proto3" json:"definitions,omitempty"`
	// Optional. The deployments linked to this API version.
	// Note: A particular API version could be deployed to multiple deployments
	// (for dev deployment, UAT deployment, etc)
	// Format is
	// `projects/{project}/locations/{location}/deployments/{deployment}`
	Deployments []string `protobuf:"bytes,8,rep,name=deployments,proto3" json:"deployments,omitempty"`
	// Output only. The time at which the version was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the version was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The lifecycle of the API version.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-lifecycle`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	Lifecycle *AttributeValues `protobuf:"bytes,11,opt,name=lifecycle,proto3" json:"lifecycle,omitempty"`
	// Optional. The compliance associated with the API version.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-compliance`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	Compliance *AttributeValues `protobuf:"bytes,12,opt,name=compliance,proto3" json:"compliance,omitempty"`
	// Optional. The accreditations associated with the API version.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-accreditation`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	Accreditation *AttributeValues `protobuf:"bytes,13,opt,name=accreditation,proto3" json:"accreditation,omitempty"`
	// Optional. The list of user defined attributes associated with the Version
	// resource. The key is the attribute name. It will be of the format:
	// `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,14,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. The selected deployment for a Version resource.
	// This can be used when special handling is needed on client side for a
	// particular deployment linked to the version.
	// Format is
	// `projects/{project}/locations/{location}/deployments/{deployment}`
	SelectedDeployment string `protobuf:"bytes,16,opt,name=selected_deployment,json=selectedDeployment,proto3" json:"selected_deployment,omitempty"`
	// Output only. The list of sources and metadata from the sources of the
	// version.
	SourceMetadata []*SourceMetadata `protobuf:"bytes,17,rep,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{1}
}

func (x *Version) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Version) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Version) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Version) GetDocumentation() *Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *Version) GetSpecs() []string {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *Version) GetApiOperations() []string {
	if x != nil {
		return x.ApiOperations
	}
	return nil
}

func (x *Version) GetDefinitions() []string {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *Version) GetDeployments() []string {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *Version) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Version) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Version) GetLifecycle() *AttributeValues {
	if x != nil {
		return x.Lifecycle
	}
	return nil
}

func (x *Version) GetCompliance() *AttributeValues {
	if x != nil {
		return x.Compliance
	}
	return nil
}

func (x *Version) GetAccreditation() *AttributeValues {
	if x != nil {
		return x.Accreditation
	}
	return nil
}

func (x *Version) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Version) GetSelectedDeployment() string {
	if x != nil {
		return x.SelectedDeployment
	}
	return ""
}

func (x *Version) GetSourceMetadata() []*SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

// Represents a spec associated with an API version in the API
// Hub. Note that specs of various types can be uploaded, however
// parsing of details is supported for OpenAPI spec currently.
type Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the spec.
	//
	// Format:
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The display name of the spec.
	// This can contain the file name of the spec.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Required. The type of spec.
	// The value should be one of the allowed values defined for
	// `projects/{project}/locations/{location}/attributes/system-spec-type`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API.
	//
	// Note, this field is mandatory if content is provided.
	SpecType *AttributeValues `protobuf:"bytes,3,opt,name=spec_type,json=specType,proto3" json:"spec_type,omitempty"`
	// Optional. Input only. The contents of the uploaded spec.
	Contents *SpecContents `protobuf:"bytes,4,opt,name=contents,proto3" json:"contents,omitempty"`
	// Output only. Details parsed from the spec.
	Details *SpecDetails `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	// Optional. The URI of the spec source in case file is uploaded
	// from an external version control system.
	SourceUri string `protobuf:"bytes,6,opt,name=source_uri,json=sourceUri,proto3" json:"source_uri,omitempty"`
	// Output only. The time at which the spec was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the spec was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The lint response for the spec.
	LintResponse *LintResponse `protobuf:"bytes,9,opt,name=lint_response,json=lintResponse,proto3" json:"lint_response,omitempty"`
	// Optional. The list of user defined attributes associated with the spec.
	// The key is the attribute name. It will be of the format:
	// `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. The documentation of the spec.
	// For OpenAPI spec, this will be populated from `externalDocs` in OpenAPI
	// spec.
	Documentation *Documentation `protobuf:"bytes,11,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Optional. Input only. Enum specifying the parsing mode for OpenAPI
	// Specification (OAS) parsing.
	ParsingMode Spec_ParsingMode `protobuf:"varint,12,opt,name=parsing_mode,json=parsingMode,proto3,enum=google.cloud.apihub.v1.Spec_ParsingMode" json:"parsing_mode,omitempty"`
	// Output only. The list of sources and metadata from the sources of the spec.
	SourceMetadata []*SourceMetadata `protobuf:"bytes,13,rep,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
}

func (x *Spec) Reset() {
	*x = Spec{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec) ProtoMessage() {}

func (x *Spec) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec.ProtoReflect.Descriptor instead.
func (*Spec) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{2}
}

func (x *Spec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spec) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Spec) GetSpecType() *AttributeValues {
	if x != nil {
		return x.SpecType
	}
	return nil
}

func (x *Spec) GetContents() *SpecContents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *Spec) GetDetails() *SpecDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Spec) GetSourceUri() string {
	if x != nil {
		return x.SourceUri
	}
	return ""
}

func (x *Spec) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Spec) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Spec) GetLintResponse() *LintResponse {
	if x != nil {
		return x.LintResponse
	}
	return nil
}

func (x *Spec) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Spec) GetDocumentation() *Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *Spec) GetParsingMode() Spec_ParsingMode {
	if x != nil {
		return x.ParsingMode
	}
	return Spec_PARSING_MODE_UNSPECIFIED
}

func (x *Spec) GetSourceMetadata() []*SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

// Details of the deployment where APIs are hosted.
// A deployment could represent an Apigee proxy, API gateway, other Google Cloud
// services or non-Google Cloud services as well. A deployment entity is a root
// level entity in the API hub and exists independent of any API.
type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the deployment.
	//
	// Format:
	// `projects/{project}/locations/{location}/deployments/{deployment}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The display name of the deployment.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional. The description of the deployment.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. The documentation of the deployment.
	Documentation *Documentation `protobuf:"bytes,4,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Required. The type of deployment.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-deployment-type`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	DeploymentType *AttributeValues `protobuf:"bytes,5,opt,name=deployment_type,json=deploymentType,proto3" json:"deployment_type,omitempty"`
	// Required. The resource URI identifies the deployment within its gateway.
	// For Apigee gateways, its recommended to use the format:
	// organizations/{org}/environments/{env}/apis/{api}.
	// For ex: if a proxy with name `orders` is deployed in `staging`
	// environment of `cymbal` organization, the resource URI would be:
	// `organizations/cymbal/environments/staging/apis/orders`.
	ResourceUri string `protobuf:"bytes,6,opt,name=resource_uri,json=resourceUri,proto3" json:"resource_uri,omitempty"`
	// Required. The endpoints at which this deployment resource is listening for
	// API requests. This could be a list of complete URIs, hostnames or an IP
	// addresses.
	Endpoints []string `protobuf:"bytes,7,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Output only. The API versions linked to this deployment.
	// Note: A particular deployment could be linked to multiple different API
	// versions (of same or different APIs).
	ApiVersions []string `protobuf:"bytes,8,rep,name=api_versions,json=apiVersions,proto3" json:"api_versions,omitempty"`
	// Output only. The time at which the deployment was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the deployment was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The SLO for this deployment.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-slo`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	Slo *AttributeValues `protobuf:"bytes,11,opt,name=slo,proto3" json:"slo,omitempty"`
	// Optional. The environment mapping to this deployment.
	// This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-environment`
	// attribute.
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. All values should be from the list of allowed values defined for the
	// attribute.
	Environment *AttributeValues `protobuf:"bytes,12,opt,name=environment,proto3" json:"environment,omitempty"`
	// Optional. The list of user defined attributes associated with the
	// deployment resource. The key is the attribute name. It will be of the
	// format: `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,13,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. The list of sources and metadata from the sources of the
	// deployment.
	SourceMetadata []*SourceMetadata `protobuf:"bytes,14,rep,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
	// Optional. The uri where users can navigate to for the management of the
	// deployment. This maps to the following system defined attribute:
	// `projects/{project}/locations/{location}/attributes/system-management-url`
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. The value of the attribute should be a valid URL.
	ManagementUrl *AttributeValues `protobuf:"bytes,15,opt,name=management_url,json=managementUrl,proto3" json:"management_url,omitempty"`
	// Optional. The uri where additional source specific information for this
	// deployment can be found. This maps to the following system defined
	// attribute:
	// `projects/{project}/locations/{location}/attributes/system-source-uri`
	// The number of values for this attribute will be based on the
	// cardinality of the attribute. The same can be retrieved via GetAttribute
	// API. The value of the attribute should be a valid URI, and in case
	// of Cloud Storage URI, it should point to a Cloud Storage object,
	// not a directory.
	SourceUri *AttributeValues `protobuf:"bytes,16,opt,name=source_uri,json=sourceUri,proto3" json:"source_uri,omitempty"`
	// Optional. The project to which the deployment belongs.
	// For GCP gateways, this will refer to the project identifier.
	// For others like Edge/OPDK, this will refer to the org identifier.
	SourceProject string `protobuf:"bytes,17,opt,name=source_project,json=sourceProject,proto3" json:"source_project,omitempty"`
	// Optional. The environment at source for the deployment.
	// For example: prod, dev, staging, etc.
	SourceEnvironment string `protobuf:"bytes,18,opt,name=source_environment,json=sourceEnvironment,proto3" json:"source_environment,omitempty"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{3}
}

func (x *Deployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Deployment) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Deployment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Deployment) GetDocumentation() *Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *Deployment) GetDeploymentType() *AttributeValues {
	if x != nil {
		return x.DeploymentType
	}
	return nil
}

func (x *Deployment) GetResourceUri() string {
	if x != nil {
		return x.ResourceUri
	}
	return ""
}

func (x *Deployment) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Deployment) GetApiVersions() []string {
	if x != nil {
		return x.ApiVersions
	}
	return nil
}

func (x *Deployment) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Deployment) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Deployment) GetSlo() *AttributeValues {
	if x != nil {
		return x.Slo
	}
	return nil
}

func (x *Deployment) GetEnvironment() *AttributeValues {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Deployment) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Deployment) GetSourceMetadata() []*SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

func (x *Deployment) GetManagementUrl() *AttributeValues {
	if x != nil {
		return x.ManagementUrl
	}
	return nil
}

func (x *Deployment) GetSourceUri() *AttributeValues {
	if x != nil {
		return x.SourceUri
	}
	return nil
}

func (x *Deployment) GetSourceProject() string {
	if x != nil {
		return x.SourceProject
	}
	return ""
}

func (x *Deployment) GetSourceEnvironment() string {
	if x != nil {
		return x.SourceEnvironment
	}
	return ""
}

// Represents an operation contained in an API version in the API Hub.
// An operation is added/updated/deleted in an API version when a new spec is
// added or an existing spec is updated/deleted in a version.
// Currently, an operation will be created only corresponding to OpenAPI spec as
// parsing is supported for OpenAPI spec.
// Alternatively operations can be managed via create,update and delete APIs,
// creation of apiOperation can be possible only for version with no parsed
// operations and update/delete can be possible only for operations created via
// create API.
type ApiOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the operation.
	//
	// Format:
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. The name of the spec will be of the format:
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
	// Note:The name of the spec will be empty if the operation is created via
	// [CreateApiOperation][google.cloud.apihub.v1.ApiHub.CreateApiOperation] API.
	Spec string `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Optional. Operation details.
	// Note: Even though this field is optional, it is required for
	// [CreateApiOperation][google.cloud.apihub.v1.ApiHub.CreateApiOperation]
	// API and we will fail the request if not provided.
	Details *OperationDetails `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	// Output only. The time at which the operation was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the operation was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The list of user defined attributes associated with the API
	// operation resource. The key is the attribute name. It will be of the
	// format: `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. The list of sources and metadata from the sources of the API
	// operation.
	SourceMetadata []*SourceMetadata `protobuf:"bytes,7,rep,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
}

func (x *ApiOperation) Reset() {
	*x = ApiOperation{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiOperation) ProtoMessage() {}

func (x *ApiOperation) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiOperation.ProtoReflect.Descriptor instead.
func (*ApiOperation) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{4}
}

func (x *ApiOperation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiOperation) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *ApiOperation) GetDetails() *OperationDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ApiOperation) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ApiOperation) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ApiOperation) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ApiOperation) GetSourceMetadata() []*SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

// Represents a definition for example schema, request, response definitions
// contained in an API version.
// A definition is added/updated/deleted in an API version when a new spec is
// added or an existing spec is updated/deleted in a version. Currently,
// definition will be created only corresponding to OpenAPI spec as parsing is
// supported for OpenAPI spec. Also, within OpenAPI spec, only `schema` object
// is supported.
type Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Definition_Schema
	Value isDefinition_Value `protobuf_oneof:"value"`
	// Identifier. The name of the definition.
	//
	// Format:
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/definitions/{definition}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. The name of the spec from where the definition was parsed.
	// Format is
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}`
	Spec string `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// Output only. The type of the definition.
	Type Definition_Type `protobuf:"varint,3,opt,name=type,proto3,enum=google.cloud.apihub.v1.Definition_Type" json:"type,omitempty"`
	// Output only. The time at which the definition was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the definition was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The list of user defined attributes associated with the
	// definition resource. The key is the attribute name. It will be of the
	// format: `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Definition) Reset() {
	*x = Definition{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition) ProtoMessage() {}

func (x *Definition) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition.ProtoReflect.Descriptor instead.
func (*Definition) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{5}
}

func (m *Definition) GetValue() isDefinition_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Definition) GetSchema() *Schema {
	if x, ok := x.GetValue().(*Definition_Schema); ok {
		return x.Schema
	}
	return nil
}

func (x *Definition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Definition) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *Definition) GetType() Definition_Type {
	if x != nil {
		return x.Type
	}
	return Definition_TYPE_UNSPECIFIED
}

func (x *Definition) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Definition) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Definition) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type isDefinition_Value interface {
	isDefinition_Value()
}

type Definition_Schema struct {
	// Output only. The value of a schema definition.
	Schema *Schema `protobuf:"bytes,4,opt,name=schema,proto3,oneof"`
}

func (*Definition_Schema) isDefinition_Value() {}

// An attribute in the API Hub.
// An attribute is a name value pair which can be attached to different
// resources in the API hub based on the scope of the attribute. Attributes can
// either be pre-defined by the API Hub or created by users.
type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the attribute in the API Hub.
	//
	// Format:
	// `projects/{project}/locations/{location}/attributes/{attribute}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The display name of the attribute.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional. The description of the attribute.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. The definition type of the attribute.
	DefinitionType Attribute_DefinitionType `protobuf:"varint,4,opt,name=definition_type,json=definitionType,proto3,enum=google.cloud.apihub.v1.Attribute_DefinitionType" json:"definition_type,omitempty"`
	// Required. The scope of the attribute. It represents the resource in the API
	// Hub to which the attribute can be linked.
	Scope Attribute_Scope `protobuf:"varint,5,opt,name=scope,proto3,enum=google.cloud.apihub.v1.Attribute_Scope" json:"scope,omitempty"`
	// Required. The type of the data of the attribute.
	DataType Attribute_DataType `protobuf:"varint,6,opt,name=data_type,json=dataType,proto3,enum=google.cloud.apihub.v1.Attribute_DataType" json:"data_type,omitempty"`
	// Optional. The list of allowed values when the attribute value is of type
	// enum. This is required when the data_type of the attribute is ENUM. The
	// maximum number of allowed values of an attribute will be 1000.
	AllowedValues []*Attribute_AllowedValue `protobuf:"bytes,7,rep,name=allowed_values,json=allowedValues,proto3" json:"allowed_values,omitempty"`
	// Optional. The maximum number of values that the attribute can have when
	// associated with an API Hub resource. Cardinality 1 would represent a
	// single-valued attribute. It must not be less than 1 or greater than 20. If
	// not specified, the cardinality would be set to 1 by default and represent a
	// single-valued attribute.
	Cardinality int32 `protobuf:"varint,8,opt,name=cardinality,proto3" json:"cardinality,omitempty"`
	// Output only. When mandatory is true, the attribute is mandatory for the
	// resource specified in the scope. Only System defined attributes can be
	// mandatory.
	Mandatory bool `protobuf:"varint,9,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	// Output only. The time at which the attribute was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the attribute was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{6}
}

func (x *Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attribute) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Attribute) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Attribute) GetDefinitionType() Attribute_DefinitionType {
	if x != nil {
		return x.DefinitionType
	}
	return Attribute_DEFINITION_TYPE_UNSPECIFIED
}

func (x *Attribute) GetScope() Attribute_Scope {
	if x != nil {
		return x.Scope
	}
	return Attribute_SCOPE_UNSPECIFIED
}

func (x *Attribute) GetDataType() Attribute_DataType {
	if x != nil {
		return x.DataType
	}
	return Attribute_DATA_TYPE_UNSPECIFIED
}

func (x *Attribute) GetAllowedValues() []*Attribute_AllowedValue {
	if x != nil {
		return x.AllowedValues
	}
	return nil
}

func (x *Attribute) GetCardinality() int32 {
	if x != nil {
		return x.Cardinality
	}
	return 0
}

func (x *Attribute) GetMandatory() bool {
	if x != nil {
		return x.Mandatory
	}
	return false
}

func (x *Attribute) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Attribute) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// The spec contents.
type SpecContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The contents of the spec.
	Contents []byte `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	// Required. The mime type of the content for example application/json,
	// application/yaml, application/wsdl etc.
	MimeType string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
}

func (x *SpecContents) Reset() {
	*x = SpecContents{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecContents) ProtoMessage() {}

func (x *SpecContents) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecContents.ProtoReflect.Descriptor instead.
func (*SpecContents) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{7}
}

func (x *SpecContents) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *SpecContents) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// SpecDetails contains the details parsed from supported
// spec types.
type SpecDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Details:
	//
	//	*SpecDetails_OpenApiSpecDetails
	Details isSpecDetails_Details `protobuf_oneof:"details"`
	// Output only. The description of the spec.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SpecDetails) Reset() {
	*x = SpecDetails{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetails) ProtoMessage() {}

func (x *SpecDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetails.ProtoReflect.Descriptor instead.
func (*SpecDetails) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{8}
}

func (m *SpecDetails) GetDetails() isSpecDetails_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *SpecDetails) GetOpenApiSpecDetails() *OpenApiSpecDetails {
	if x, ok := x.GetDetails().(*SpecDetails_OpenApiSpecDetails); ok {
		return x.OpenApiSpecDetails
	}
	return nil
}

func (x *SpecDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type isSpecDetails_Details interface {
	isSpecDetails_Details()
}

type SpecDetails_OpenApiSpecDetails struct {
	// Output only. Additional details apart from `OperationDetails` parsed from
	// an OpenAPI spec. The OperationDetails parsed from the spec can be
	// obtained by using
	// [ListAPIOperations][google.cloud.apihub.v1.ApiHub.ListApiOperations]
	// method.
	OpenApiSpecDetails *OpenApiSpecDetails `protobuf:"bytes,2,opt,name=open_api_spec_details,json=openApiSpecDetails,proto3,oneof"`
}

func (*SpecDetails_OpenApiSpecDetails) isSpecDetails_Details() {}

// OpenApiSpecDetails contains the details parsed from an OpenAPI spec in
// addition to the fields mentioned in
// [SpecDetails][google.cloud.apihub.v1.SpecDetails].
type OpenApiSpecDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The format of the spec.
	Format OpenApiSpecDetails_Format `protobuf:"varint,1,opt,name=format,proto3,enum=google.cloud.apihub.v1.OpenApiSpecDetails_Format" json:"format,omitempty"`
	// Output only. The version in the spec.
	// This maps to `info.version` in OpenAPI spec.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Output only. Owner details for the spec.
	// This maps to `info.contact` in OpenAPI spec.
	Owner *Owner `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *OpenApiSpecDetails) Reset() {
	*x = OpenApiSpecDetails{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenApiSpecDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenApiSpecDetails) ProtoMessage() {}

func (x *OpenApiSpecDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenApiSpecDetails.ProtoReflect.Descriptor instead.
func (*OpenApiSpecDetails) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{9}
}

func (x *OpenApiSpecDetails) GetFormat() OpenApiSpecDetails_Format {
	if x != nil {
		return x.Format
	}
	return OpenApiSpecDetails_FORMAT_UNSPECIFIED
}

func (x *OpenApiSpecDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OpenApiSpecDetails) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

// The operation details parsed from the spec.
type OperationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Operation:
	//
	//	*OperationDetails_HttpOperation
	Operation isOperationDetails_Operation `protobuf_oneof:"operation"`
	// Optional. Description of the operation behavior.
	// For OpenAPI spec, this will map to `operation.description` in the
	// spec, in case description is empty, `operation.summary` will be used.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. Additional external documentation for this operation.
	// For OpenAPI spec, this will map to `operation.documentation` in the spec.
	Documentation *Documentation `protobuf:"bytes,2,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Optional. For OpenAPI spec, this will be set if `operation.deprecated`is
	// marked as `true` in the spec.
	Deprecated bool `protobuf:"varint,3,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
}

func (x *OperationDetails) Reset() {
	*x = OperationDetails{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationDetails) ProtoMessage() {}

func (x *OperationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationDetails.ProtoReflect.Descriptor instead.
func (*OperationDetails) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{10}
}

func (m *OperationDetails) GetOperation() isOperationDetails_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (x *OperationDetails) GetHttpOperation() *HttpOperation {
	if x, ok := x.GetOperation().(*OperationDetails_HttpOperation); ok {
		return x.HttpOperation
	}
	return nil
}

func (x *OperationDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OperationDetails) GetDocumentation() *Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *OperationDetails) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

type isOperationDetails_Operation interface {
	isOperationDetails_Operation()
}

type OperationDetails_HttpOperation struct {
	// The HTTP Operation.
	HttpOperation *HttpOperation `protobuf:"bytes,4,opt,name=http_operation,json=httpOperation,proto3,oneof"`
}

func (*OperationDetails_HttpOperation) isOperationDetails_Operation() {}

// The HTTP Operation.
type HttpOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The path details for the Operation.
	// Note: Even though this field is optional, it is required for
	// [CreateApiOperation][google.cloud.apihub.v1.ApiHub.CreateApiOperation]
	// API and we will fail the request if not provided.
	Path *Path `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Optional. Operation method
	// Note: Even though this field is optional, it is required for
	// [CreateApiOperation][google.cloud.apihub.v1.ApiHub.CreateApiOperation]
	// API and we will fail the request if not provided.
	Method HttpOperation_Method `protobuf:"varint,2,opt,name=method,proto3,enum=google.cloud.apihub.v1.HttpOperation_Method" json:"method,omitempty"`
}

func (x *HttpOperation) Reset() {
	*x = HttpOperation{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpOperation) ProtoMessage() {}

func (x *HttpOperation) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpOperation.ProtoReflect.Descriptor instead.
func (*HttpOperation) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{11}
}

func (x *HttpOperation) GetPath() *Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *HttpOperation) GetMethod() HttpOperation_Method {
	if x != nil {
		return x.Method
	}
	return HttpOperation_METHOD_UNSPECIFIED
}

// The path details derived from the spec.
type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Complete path relative to server endpoint.
	// Note: Even though this field is optional, it is required for
	// [CreateApiOperation][google.cloud.apihub.v1.ApiHub.CreateApiOperation]
	// API and we will fail the request if not provided.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Optional. A short description for the path applicable to all operations.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{12}
}

func (x *Path) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Path) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// The schema details derived from the spec. Currently, this entity is supported
// for OpenAPI spec only.
// For OpenAPI spec, this maps to the schema defined in
// the  `definitions` section for OpenAPI 2.0 version and in
// `components.schemas` section for OpenAPI 3.0 and 3.1 version.
type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The display name of the schema.
	// This will map to the name of the schema in the spec.
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Output only. The raw value of the schema definition corresponding to the
	// schema name in the spec.
	RawValue []byte `protobuf:"bytes,2,opt,name=raw_value,json=rawValue,proto3" json:"raw_value,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{13}
}

func (x *Schema) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Schema) GetRawValue() []byte {
	if x != nil {
		return x.RawValue
	}
	return nil
}

// Owner details.
type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The name of the owner.
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Required. The email of the owner.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{14}
}

func (x *Owner) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Owner) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Documentation details.
type Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The uri of the externally hosted documentation.
	ExternalUri string `protobuf:"bytes,1,opt,name=external_uri,json=externalUri,proto3" json:"external_uri,omitempty"`
}

func (x *Documentation) Reset() {
	*x = Documentation{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Documentation) ProtoMessage() {}

func (x *Documentation) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Documentation.ProtoReflect.Descriptor instead.
func (*Documentation) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{15}
}

func (x *Documentation) GetExternalUri() string {
	if x != nil {
		return x.ExternalUri
	}
	return ""
}

// The attribute values associated with resource.
type AttributeValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The attribute values associated with the resource.
	//
	// Types that are assignable to Value:
	//
	//	*AttributeValues_EnumValues
	//	*AttributeValues_StringValues
	//	*AttributeValues_JsonValues
	//	*AttributeValues_UriValues
	Value isAttributeValues_Value `protobuf_oneof:"Value"`
	// Output only. The name of the attribute.
	// Format: projects/{project}/locations/{location}/attributes/{attribute}
	Attribute string `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
}

func (x *AttributeValues) Reset() {
	*x = AttributeValues{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValues) ProtoMessage() {}

func (x *AttributeValues) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValues.ProtoReflect.Descriptor instead.
func (*AttributeValues) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{16}
}

func (m *AttributeValues) GetValue() isAttributeValues_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AttributeValues) GetEnumValues() *AttributeValues_EnumAttributeValues {
	if x, ok := x.GetValue().(*AttributeValues_EnumValues); ok {
		return x.EnumValues
	}
	return nil
}

func (x *AttributeValues) GetStringValues() *AttributeValues_StringAttributeValues {
	if x, ok := x.GetValue().(*AttributeValues_StringValues); ok {
		return x.StringValues
	}
	return nil
}

func (x *AttributeValues) GetJsonValues() *AttributeValues_StringAttributeValues {
	if x, ok := x.GetValue().(*AttributeValues_JsonValues); ok {
		return x.JsonValues
	}
	return nil
}

func (x *AttributeValues) GetUriValues() *AttributeValues_StringAttributeValues {
	if x, ok := x.GetValue().(*AttributeValues_UriValues); ok {
		return x.UriValues
	}
	return nil
}

func (x *AttributeValues) GetAttribute() string {
	if x != nil {
		return x.Attribute
	}
	return ""
}

type isAttributeValues_Value interface {
	isAttributeValues_Value()
}

type AttributeValues_EnumValues struct {
	// The attribute values associated with a resource in case attribute data
	// type is enum.
	EnumValues *AttributeValues_EnumAttributeValues `protobuf:"bytes,2,opt,name=enum_values,json=enumValues,proto3,oneof"`
}

type AttributeValues_StringValues struct {
	// The attribute values associated with a resource in case attribute data
	// type is string.
	StringValues *AttributeValues_StringAttributeValues `protobuf:"bytes,3,opt,name=string_values,json=stringValues,proto3,oneof"`
}

type AttributeValues_JsonValues struct {
	// The attribute values associated with a resource in case attribute data
	// type is JSON.
	JsonValues *AttributeValues_StringAttributeValues `protobuf:"bytes,4,opt,name=json_values,json=jsonValues,proto3,oneof"`
}

type AttributeValues_UriValues struct {
	// The attribute values associated with a resource in case attribute data
	// type is URL, URI or IP, like gs://bucket-name/object-name.
	UriValues *AttributeValues_StringAttributeValues `protobuf:"bytes,5,opt,name=uri_values,json=uriValues,proto3,oneof"`
}

func (*AttributeValues_EnumValues) isAttributeValues_Value() {}

func (*AttributeValues_StringValues) isAttributeValues_Value() {}

func (*AttributeValues_JsonValues) isAttributeValues_Value() {}

func (*AttributeValues_UriValues) isAttributeValues_Value() {}

// A dependency resource defined in the API hub describes a dependency directed
// from a consumer to a supplier entity. A dependency can be defined between two
// [Operations][google.cloud.apihub.v1.ApiOperation] or between
// an [Operation][google.cloud.apihub.v1.ApiOperation] and [External
// API][google.cloud.apihub.v1.ExternalApi].
type Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the dependency in the API Hub.
	//
	// Format: `projects/{project}/locations/{location}/dependencies/{dependency}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Immutable. The entity acting as the consumer in the dependency.
	Consumer *DependencyEntityReference `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"`
	// Required. Immutable. The entity acting as the supplier in the dependency.
	Supplier *DependencyEntityReference `protobuf:"bytes,3,opt,name=supplier,proto3" json:"supplier,omitempty"`
	// Output only. State of the dependency.
	State Dependency_State `protobuf:"varint,4,opt,name=state,proto3,enum=google.cloud.apihub.v1.Dependency_State" json:"state,omitempty"`
	// Optional. Human readable description corresponding of the dependency.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. Discovery mode of the dependency.
	DiscoveryMode Dependency_DiscoveryMode `protobuf:"varint,6,opt,name=discovery_mode,json=discoveryMode,proto3,enum=google.cloud.apihub.v1.Dependency_DiscoveryMode" json:"discovery_mode,omitempty"`
	// Output only. Error details of a dependency if the system has detected it
	// internally.
	ErrorDetail *DependencyErrorDetail `protobuf:"bytes,7,opt,name=error_detail,json=errorDetail,proto3" json:"error_detail,omitempty"`
	// Output only. The time at which the dependency was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the dependency was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The list of user defined attributes associated with the
	// dependency resource. The key is the attribute name. It will be of the
	// format: `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,10,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Dependency) Reset() {
	*x = Dependency{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependency) ProtoMessage() {}

func (x *Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependency.ProtoReflect.Descriptor instead.
func (*Dependency) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{17}
}

func (x *Dependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dependency) GetConsumer() *DependencyEntityReference {
	if x != nil {
		return x.Consumer
	}
	return nil
}

func (x *Dependency) GetSupplier() *DependencyEntityReference {
	if x != nil {
		return x.Supplier
	}
	return nil
}

func (x *Dependency) GetState() Dependency_State {
	if x != nil {
		return x.State
	}
	return Dependency_STATE_UNSPECIFIED
}

func (x *Dependency) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Dependency) GetDiscoveryMode() Dependency_DiscoveryMode {
	if x != nil {
		return x.DiscoveryMode
	}
	return Dependency_DISCOVERY_MODE_UNSPECIFIED
}

func (x *Dependency) GetErrorDetail() *DependencyErrorDetail {
	if x != nil {
		return x.ErrorDetail
	}
	return nil
}

func (x *Dependency) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Dependency) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Dependency) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Reference to an entity participating in a dependency.
type DependencyEntityReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Unique identifier for the participating entity.
	//
	// Types that are assignable to Identifier:
	//
	//	*DependencyEntityReference_OperationResourceName
	//	*DependencyEntityReference_ExternalApiResourceName
	Identifier isDependencyEntityReference_Identifier `protobuf_oneof:"identifier"`
	// Output only. Display name of the entity.
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *DependencyEntityReference) Reset() {
	*x = DependencyEntityReference{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyEntityReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyEntityReference) ProtoMessage() {}

func (x *DependencyEntityReference) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyEntityReference.ProtoReflect.Descriptor instead.
func (*DependencyEntityReference) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{18}
}

func (m *DependencyEntityReference) GetIdentifier() isDependencyEntityReference_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *DependencyEntityReference) GetOperationResourceName() string {
	if x, ok := x.GetIdentifier().(*DependencyEntityReference_OperationResourceName); ok {
		return x.OperationResourceName
	}
	return ""
}

func (x *DependencyEntityReference) GetExternalApiResourceName() string {
	if x, ok := x.GetIdentifier().(*DependencyEntityReference_ExternalApiResourceName); ok {
		return x.ExternalApiResourceName
	}
	return ""
}

func (x *DependencyEntityReference) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type isDependencyEntityReference_Identifier interface {
	isDependencyEntityReference_Identifier()
}

type DependencyEntityReference_OperationResourceName struct {
	// The resource name of an operation in the API Hub.
	//
	// Format:
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
	OperationResourceName string `protobuf:"bytes,2,opt,name=operation_resource_name,json=operationResourceName,proto3,oneof"`
}

type DependencyEntityReference_ExternalApiResourceName struct {
	// The resource name of an external API in the API Hub.
	//
	// Format:
	// `projects/{project}/locations/{location}/externalApis/{external_api}`
	ExternalApiResourceName string `protobuf:"bytes,3,opt,name=external_api_resource_name,json=externalApiResourceName,proto3,oneof"`
}

func (*DependencyEntityReference_OperationResourceName) isDependencyEntityReference_Identifier() {}

func (*DependencyEntityReference_ExternalApiResourceName) isDependencyEntityReference_Identifier() {}

// Details describing error condition of a dependency.
type DependencyErrorDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Error in the dependency.
	Error DependencyErrorDetail_Error `protobuf:"varint,1,opt,name=error,proto3,enum=google.cloud.apihub.v1.DependencyErrorDetail_Error" json:"error,omitempty"`
	// Optional. Timestamp at which the error was found.
	ErrorTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=error_time,json=errorTime,proto3" json:"error_time,omitempty"`
}

func (x *DependencyErrorDetail) Reset() {
	*x = DependencyErrorDetail{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyErrorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyErrorDetail) ProtoMessage() {}

func (x *DependencyErrorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyErrorDetail.ProtoReflect.Descriptor instead.
func (*DependencyErrorDetail) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{19}
}

func (x *DependencyErrorDetail) GetError() DependencyErrorDetail_Error {
	if x != nil {
		return x.Error
	}
	return DependencyErrorDetail_ERROR_UNSPECIFIED
}

func (x *DependencyErrorDetail) GetErrorTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ErrorTime
	}
	return nil
}

// LintResponse contains the response from the linter.
type LintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Array of issues found in the analyzed document.
	Issues []*Issue `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
	// Optional. Summary of all issue types and counts for each severity level.
	Summary []*LintResponse_SummaryEntry `protobuf:"bytes,2,rep,name=summary,proto3" json:"summary,omitempty"`
	// Required. Lint state represents success or failure for linting.
	State LintState `protobuf:"varint,3,opt,name=state,proto3,enum=google.cloud.apihub.v1.LintState" json:"state,omitempty"`
	// Required. Name of the linting application.
	Source string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// Required. Name of the linter used.
	Linter Linter `protobuf:"varint,5,opt,name=linter,proto3,enum=google.cloud.apihub.v1.Linter" json:"linter,omitempty"`
	// Required. Timestamp when the linting response was generated.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *LintResponse) Reset() {
	*x = LintResponse{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintResponse) ProtoMessage() {}

func (x *LintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintResponse.ProtoReflect.Descriptor instead.
func (*LintResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{20}
}

func (x *LintResponse) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *LintResponse) GetSummary() []*LintResponse_SummaryEntry {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *LintResponse) GetState() LintState {
	if x != nil {
		return x.State
	}
	return LintState_LINT_STATE_UNSPECIFIED
}

func (x *LintResponse) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LintResponse) GetLinter() Linter {
	if x != nil {
		return x.Linter
	}
	return Linter_LINTER_UNSPECIFIED
}

func (x *LintResponse) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

// Issue contains the details of a single issue found by the linter.
type Issue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Rule code unique to each rule defined in linter.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// Required. An array of strings indicating the location in the analyzed
	// document where the rule was triggered.
	Path []string `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
	// Required. Human-readable message describing the issue found by the linter.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Required. Severity level of the rule violation.
	Severity Severity `protobuf:"varint,4,opt,name=severity,proto3,enum=google.cloud.apihub.v1.Severity" json:"severity,omitempty"`
	// Required. Object describing where in the file the issue was found.
	Range *Range `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *Issue) Reset() {
	*x = Issue{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{21}
}

func (x *Issue) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Issue) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Issue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Issue) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *Issue) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

// Object describing where in the file the issue was found.
type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Start of the issue.
	Start *Point `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// Required. End of the issue.
	End *Point `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{22}
}

func (x *Range) GetStart() *Point {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Range) GetEnd() *Point {
	if x != nil {
		return x.End
	}
	return nil
}

// Point within the file (line and character).
type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Line number (zero-indexed).
	Line int32 `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	// Required. Character position within the line (zero-indexed).
	Character int32 `protobuf:"varint,2,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{23}
}

func (x *Point) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Point) GetCharacter() int32 {
	if x != nil {
		return x.Character
	}
	return 0
}

// Represents the metadata of the long-running operation.
type OperationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The time the operation was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time the operation finished running.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Output only. Server-defined resource path for the target of the operation.
	Target string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// Output only. Name of the verb executed by the operation.
	Verb string `protobuf:"bytes,4,opt,name=verb,proto3" json:"verb,omitempty"`
	// Output only. Human-readable status of the operation, if any.
	StatusMessage string `protobuf:"bytes,5,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	// Output only. Identifies whether the user has requested cancellation
	// of the operation. Operations that have been cancelled successfully
	// have [Operation.error][google.longrunning.Operation.error] value with a
	// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
	// `Code.CANCELLED`.
	RequestedCancellation bool `protobuf:"varint,6,opt,name=requested_cancellation,json=requestedCancellation,proto3" json:"requested_cancellation,omitempty"`
	// Output only. API version used to start the operation.
	ApiVersion string `protobuf:"bytes,7,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
}

func (x *OperationMetadata) Reset() {
	*x = OperationMetadata{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationMetadata) ProtoMessage() {}

func (x *OperationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationMetadata.ProtoReflect.Descriptor instead.
func (*OperationMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{24}
}

func (x *OperationMetadata) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *OperationMetadata) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *OperationMetadata) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *OperationMetadata) GetVerb() string {
	if x != nil {
		return x.Verb
	}
	return ""
}

func (x *OperationMetadata) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *OperationMetadata) GetRequestedCancellation() bool {
	if x != nil {
		return x.RequestedCancellation
	}
	return false
}

func (x *OperationMetadata) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

// An ApiHubInstance represents the instance resources of the API Hub.
// Currently, only one ApiHub instance is allowed for each project.
type ApiHubInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. Format:
	// `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. Creation timestamp.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Last update timestamp.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. The current state of the ApiHub instance.
	State ApiHubInstance_State `protobuf:"varint,4,opt,name=state,proto3,enum=google.cloud.apihub.v1.ApiHubInstance_State" json:"state,omitempty"`
	// Output only. Extra information about ApiHub instance state. Currently the
	// message would be populated when state is `FAILED`.
	StateMessage string `protobuf:"bytes,5,opt,name=state_message,json=stateMessage,proto3" json:"state_message,omitempty"`
	// Required. Config of the ApiHub instance.
	Config *ApiHubInstance_Config `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	// Optional. Instance labels to represent user-provided metadata.
	// Refer to cloud documentation on labels for more details.
	// https://cloud.google.com/compute/docs/labeling-resources
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. Description of the ApiHub instance.
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ApiHubInstance) Reset() {
	*x = ApiHubInstance{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiHubInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiHubInstance) ProtoMessage() {}

func (x *ApiHubInstance) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiHubInstance.ProtoReflect.Descriptor instead.
func (*ApiHubInstance) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{25}
}

func (x *ApiHubInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiHubInstance) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ApiHubInstance) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ApiHubInstance) GetState() ApiHubInstance_State {
	if x != nil {
		return x.State
	}
	return ApiHubInstance_STATE_UNSPECIFIED
}

func (x *ApiHubInstance) GetStateMessage() string {
	if x != nil {
		return x.StateMessage
	}
	return ""
}

func (x *ApiHubInstance) GetConfig() *ApiHubInstance_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ApiHubInstance) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ApiHubInstance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// An external API represents an API being provided by external sources. This
// can be used to model third-party APIs and can be used to define dependencies.
type ExternalApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. Format:
	// `projects/{project}/locations/{location}/externalApi/{externalApi}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Display name of the external API. Max length is 63 characters
	// (Unicode Code Points).
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional. Description of the external API. Max length is 2000 characters
	// (Unicode Code Points).
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. List of endpoints on which this API is accessible.
	Endpoints []string `protobuf:"bytes,4,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Optional. List of paths served by this API.
	Paths []string `protobuf:"bytes,5,rep,name=paths,proto3" json:"paths,omitempty"`
	// Optional. Documentation of the external API.
	Documentation *Documentation `protobuf:"bytes,6,opt,name=documentation,proto3" json:"documentation,omitempty"`
	// Optional. The list of user defined attributes associated with the Version
	// resource. The key is the attribute name. It will be of the format:
	// `projects/{project}/locations/{location}/attributes/{attribute}`.
	// The value is the attribute values associated with the resource.
	Attributes map[string]*AttributeValues `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. Creation timestamp.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Last update timestamp.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *ExternalApi) Reset() {
	*x = ExternalApi{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalApi) ProtoMessage() {}

func (x *ExternalApi) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalApi.ProtoReflect.Descriptor instead.
func (*ExternalApi) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{26}
}

func (x *ExternalApi) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalApi) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ExternalApi) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExternalApi) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *ExternalApi) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ExternalApi) GetDocumentation() *Documentation {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *ExternalApi) GetAttributes() map[string]*AttributeValues {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ExternalApi) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ExternalApi) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// ConfigValueOption represents an option for a config variable of type enum or
// multi select.
type ConfigValueOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Id of the option.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. Display name of the option.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional. Description of the option.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ConfigValueOption) Reset() {
	*x = ConfigValueOption{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigValueOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigValueOption) ProtoMessage() {}

func (x *ConfigValueOption) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigValueOption.ProtoReflect.Descriptor instead.
func (*ConfigValueOption) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{27}
}

func (x *ConfigValueOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigValueOption) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ConfigValueOption) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Secret provides a reference to entries in Secret Manager.
type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The resource name of the secret version in the format,
	// format as: `projects/*/secrets/*/versions/*`.
	SecretVersion string `protobuf:"bytes,1,opt,name=secret_version,json=secretVersion,proto3" json:"secret_version,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{28}
}

func (x *Secret) GetSecretVersion() string {
	if x != nil {
		return x.SecretVersion
	}
	return ""
}

// ConfigVariableTemplate represents a configuration variable template present
// in a Plugin Config.
type ConfigVariableTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. ID of the config variable. Must be unique within the
	// configuration.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. Type of the parameter: string, int, bool etc.
	ValueType ConfigVariableTemplate_ValueType `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=google.cloud.apihub.v1.ConfigVariableTemplate_ValueType" json:"value_type,omitempty"`
	// Optional. Description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. Regular expression in RE2 syntax used for validating the `value`
	// of a `ConfigVariable`.
	ValidationRegex string `protobuf:"bytes,4,opt,name=validation_regex,json=validationRegex,proto3" json:"validation_regex,omitempty"`
	// Optional. Flag represents that this `ConfigVariable` must be provided for a
	// PluginInstance.
	Required bool `protobuf:"varint,5,opt,name=required,proto3" json:"required,omitempty"`
	// Optional. Enum options. To be populated if `ValueType` is `ENUM`.
	EnumOptions []*ConfigValueOption `protobuf:"bytes,6,rep,name=enum_options,json=enumOptions,proto3" json:"enum_options,omitempty"`
	// Optional. Multi select options. To be populated if `ValueType` is
	// `MULTI_SELECT`.
	MultiSelectOptions []*ConfigValueOption `protobuf:"bytes,7,rep,name=multi_select_options,json=multiSelectOptions,proto3" json:"multi_select_options,omitempty"`
}

func (x *ConfigVariableTemplate) Reset() {
	*x = ConfigVariableTemplate{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigVariableTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVariableTemplate) ProtoMessage() {}

func (x *ConfigVariableTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVariableTemplate.ProtoReflect.Descriptor instead.
func (*ConfigVariableTemplate) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{29}
}

func (x *ConfigVariableTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigVariableTemplate) GetValueType() ConfigVariableTemplate_ValueType {
	if x != nil {
		return x.ValueType
	}
	return ConfigVariableTemplate_VALUE_TYPE_UNSPECIFIED
}

func (x *ConfigVariableTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConfigVariableTemplate) GetValidationRegex() string {
	if x != nil {
		return x.ValidationRegex
	}
	return ""
}

func (x *ConfigVariableTemplate) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ConfigVariableTemplate) GetEnumOptions() []*ConfigValueOption {
	if x != nil {
		return x.EnumOptions
	}
	return nil
}

func (x *ConfigVariableTemplate) GetMultiSelectOptions() []*ConfigValueOption {
	if x != nil {
		return x.MultiSelectOptions
	}
	return nil
}

// ConfigVariable represents a additional configuration variable present in a
// PluginInstance Config or AuthConfig, based on a ConfigVariableTemplate.
type ConfigVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The values associated with the config variable.
	//
	// Types that are assignable to Value:
	//
	//	*ConfigVariable_StringValue
	//	*ConfigVariable_IntValue
	//	*ConfigVariable_BoolValue
	//	*ConfigVariable_SecretValue
	//	*ConfigVariable_EnumValue
	//	*ConfigVariable_MultiSelectValues_
	//	*ConfigVariable_MultiStringValues_
	//	*ConfigVariable_MultiIntValues_
	Value isConfigVariable_Value `protobuf_oneof:"value"`
	// Output only. Key will be the
	// [id][google.cloud.apihub.v1.ConfigVariableTemplate.id] to uniquely identify
	// the config variable.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ConfigVariable) Reset() {
	*x = ConfigVariable{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVariable) ProtoMessage() {}

func (x *ConfigVariable) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVariable.ProtoReflect.Descriptor instead.
func (*ConfigVariable) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{30}
}

func (m *ConfigVariable) GetValue() isConfigVariable_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ConfigVariable) GetStringValue() string {
	if x, ok := x.GetValue().(*ConfigVariable_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *ConfigVariable) GetIntValue() int64 {
	if x, ok := x.GetValue().(*ConfigVariable_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *ConfigVariable) GetBoolValue() bool {
	if x, ok := x.GetValue().(*ConfigVariable_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *ConfigVariable) GetSecretValue() *Secret {
	if x, ok := x.GetValue().(*ConfigVariable_SecretValue); ok {
		return x.SecretValue
	}
	return nil
}

func (x *ConfigVariable) GetEnumValue() *ConfigValueOption {
	if x, ok := x.GetValue().(*ConfigVariable_EnumValue); ok {
		return x.EnumValue
	}
	return nil
}

func (x *ConfigVariable) GetMultiSelectValues() *ConfigVariable_MultiSelectValues {
	if x, ok := x.GetValue().(*ConfigVariable_MultiSelectValues_); ok {
		return x.MultiSelectValues
	}
	return nil
}

func (x *ConfigVariable) GetMultiStringValues() *ConfigVariable_MultiStringValues {
	if x, ok := x.GetValue().(*ConfigVariable_MultiStringValues_); ok {
		return x.MultiStringValues
	}
	return nil
}

func (x *ConfigVariable) GetMultiIntValues() *ConfigVariable_MultiIntValues {
	if x, ok := x.GetValue().(*ConfigVariable_MultiIntValues_); ok {
		return x.MultiIntValues
	}
	return nil
}

func (x *ConfigVariable) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type isConfigVariable_Value interface {
	isConfigVariable_Value()
}

type ConfigVariable_StringValue struct {
	// Optional. The config variable value in case of config variable of type
	// string.
	StringValue string `protobuf:"bytes,2,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ConfigVariable_IntValue struct {
	// Optional. The config variable value in case of config variable of type
	// integer.
	IntValue int64 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type ConfigVariable_BoolValue struct {
	// Optional. The config variable value in case of config variable of type
	// boolean.
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type ConfigVariable_SecretValue struct {
	// Optional. The config variable value in case of config variable of type
	// secret.
	SecretValue *Secret `protobuf:"bytes,5,opt,name=secret_value,json=secretValue,proto3,oneof"`
}

type ConfigVariable_EnumValue struct {
	// Optional. The config variable value in case of config variable of type
	// enum.
	EnumValue *ConfigValueOption `protobuf:"bytes,6,opt,name=enum_value,json=enumValue,proto3,oneof"`
}

type ConfigVariable_MultiSelectValues_ struct {
	// Optional. The config variable value in case of config variable of type
	// multi select.
	MultiSelectValues *ConfigVariable_MultiSelectValues `protobuf:"bytes,7,opt,name=multi_select_values,json=multiSelectValues,proto3,oneof"`
}

type ConfigVariable_MultiStringValues_ struct {
	// Optional. The config variable value in case of config variable of type
	// multi string.
	MultiStringValues *ConfigVariable_MultiStringValues `protobuf:"bytes,8,opt,name=multi_string_values,json=multiStringValues,proto3,oneof"`
}

type ConfigVariable_MultiIntValues_ struct {
	// Optional. The config variable value in case of config variable of type
	// multi integer.
	MultiIntValues *ConfigVariable_MultiIntValues `protobuf:"bytes,9,opt,name=multi_int_values,json=multiIntValues,proto3,oneof"`
}

func (*ConfigVariable_StringValue) isConfigVariable_Value() {}

func (*ConfigVariable_IntValue) isConfigVariable_Value() {}

func (*ConfigVariable_BoolValue) isConfigVariable_Value() {}

func (*ConfigVariable_SecretValue) isConfigVariable_Value() {}

func (*ConfigVariable_EnumValue) isConfigVariable_Value() {}

func (*ConfigVariable_MultiSelectValues_) isConfigVariable_Value() {}

func (*ConfigVariable_MultiStringValues_) isConfigVariable_Value() {}

func (*ConfigVariable_MultiIntValues_) isConfigVariable_Value() {}

// Config for Google service account authentication.
type GoogleServiceAccountConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The service account to be used for authenticating request.
	//
	// The `iam.serviceAccounts.getAccessToken` permission should be granted on
	// this service account to the impersonator service account.
	ServiceAccount string `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *GoogleServiceAccountConfig) Reset() {
	*x = GoogleServiceAccountConfig{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleServiceAccountConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleServiceAccountConfig) ProtoMessage() {}

func (x *GoogleServiceAccountConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleServiceAccountConfig.ProtoReflect.Descriptor instead.
func (*GoogleServiceAccountConfig) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{31}
}

func (x *GoogleServiceAccountConfig) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

// AuthConfig represents the authentication information.
type AuthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Supported auth types.
	//
	// Types that are assignable to Config:
	//
	//	*AuthConfig_GoogleServiceAccountConfig
	//	*AuthConfig_UserPasswordConfig_
	//	*AuthConfig_ApiKeyConfig_
	//	*AuthConfig_Oauth2ClientCredentialsConfig_
	Config isAuthConfig_Config `protobuf_oneof:"config"`
	// Required. The authentication type.
	AuthType AuthType `protobuf:"varint,1,opt,name=auth_type,json=authType,proto3,enum=google.cloud.apihub.v1.AuthType" json:"auth_type,omitempty"`
}

func (x *AuthConfig) Reset() {
	*x = AuthConfig{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfig) ProtoMessage() {}

func (x *AuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfig.ProtoReflect.Descriptor instead.
func (*AuthConfig) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{32}
}

func (m *AuthConfig) GetConfig() isAuthConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *AuthConfig) GetGoogleServiceAccountConfig() *GoogleServiceAccountConfig {
	if x, ok := x.GetConfig().(*AuthConfig_GoogleServiceAccountConfig); ok {
		return x.GoogleServiceAccountConfig
	}
	return nil
}

func (x *AuthConfig) GetUserPasswordConfig() *AuthConfig_UserPasswordConfig {
	if x, ok := x.GetConfig().(*AuthConfig_UserPasswordConfig_); ok {
		return x.UserPasswordConfig
	}
	return nil
}

func (x *AuthConfig) GetApiKeyConfig() *AuthConfig_ApiKeyConfig {
	if x, ok := x.GetConfig().(*AuthConfig_ApiKeyConfig_); ok {
		return x.ApiKeyConfig
	}
	return nil
}

func (x *AuthConfig) GetOauth2ClientCredentialsConfig() *AuthConfig_Oauth2ClientCredentialsConfig {
	if x, ok := x.GetConfig().(*AuthConfig_Oauth2ClientCredentialsConfig_); ok {
		return x.Oauth2ClientCredentialsConfig
	}
	return nil
}

func (x *AuthConfig) GetAuthType() AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthType_AUTH_TYPE_UNSPECIFIED
}

type isAuthConfig_Config interface {
	isAuthConfig_Config()
}

type AuthConfig_GoogleServiceAccountConfig struct {
	// Google Service Account.
	GoogleServiceAccountConfig *GoogleServiceAccountConfig `protobuf:"bytes,2,opt,name=google_service_account_config,json=googleServiceAccountConfig,proto3,oneof"`
}

type AuthConfig_UserPasswordConfig_ struct {
	// User Password.
	UserPasswordConfig *AuthConfig_UserPasswordConfig `protobuf:"bytes,3,opt,name=user_password_config,json=userPasswordConfig,proto3,oneof"`
}

type AuthConfig_ApiKeyConfig_ struct {
	// Api Key Config.
	ApiKeyConfig *AuthConfig_ApiKeyConfig `protobuf:"bytes,4,opt,name=api_key_config,json=apiKeyConfig,proto3,oneof"`
}

type AuthConfig_Oauth2ClientCredentialsConfig_ struct {
	// Oauth2.0 Client Credentials.
	Oauth2ClientCredentialsConfig *AuthConfig_Oauth2ClientCredentialsConfig `protobuf:"bytes,5,opt,name=oauth2_client_credentials_config,json=oauth2ClientCredentialsConfig,proto3,oneof"`
}

func (*AuthConfig_GoogleServiceAccountConfig) isAuthConfig_Config() {}

func (*AuthConfig_UserPasswordConfig_) isAuthConfig_Config() {}

func (*AuthConfig_ApiKeyConfig_) isAuthConfig_Config() {}

func (*AuthConfig_Oauth2ClientCredentialsConfig_) isAuthConfig_Config() {}

// SourceMetadata represents the metadata for a resource at the source.
type SourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source of the resource.
	//
	// Types that are assignable to Source:
	//
	//	*SourceMetadata_PluginInstanceActionSource_
	Source isSourceMetadata_Source `protobuf_oneof:"source"`
	// Output only. The type of the source.
	SourceType SourceMetadata_SourceType `protobuf:"varint,2,opt,name=source_type,json=sourceType,proto3,enum=google.cloud.apihub.v1.SourceMetadata_SourceType" json:"source_type,omitempty"`
	// Output only. The unique identifier of the resource at the source.
	OriginalResourceId string `protobuf:"bytes,3,opt,name=original_resource_id,json=originalResourceId,proto3" json:"original_resource_id,omitempty"`
	// Output only. The time at which the resource was created at the source.
	OriginalResourceCreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=original_resource_create_time,json=originalResourceCreateTime,proto3" json:"original_resource_create_time,omitempty"`
	// Output only. The time at which the resource was last updated at the source.
	OriginalResourceUpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=original_resource_update_time,json=originalResourceUpdateTime,proto3" json:"original_resource_update_time,omitempty"`
}

func (x *SourceMetadata) Reset() {
	*x = SourceMetadata{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceMetadata) ProtoMessage() {}

func (x *SourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceMetadata.ProtoReflect.Descriptor instead.
func (*SourceMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{33}
}

func (m *SourceMetadata) GetSource() isSourceMetadata_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *SourceMetadata) GetPluginInstanceActionSource() *SourceMetadata_PluginInstanceActionSource {
	if x, ok := x.GetSource().(*SourceMetadata_PluginInstanceActionSource_); ok {
		return x.PluginInstanceActionSource
	}
	return nil
}

func (x *SourceMetadata) GetSourceType() SourceMetadata_SourceType {
	if x != nil {
		return x.SourceType
	}
	return SourceMetadata_SOURCE_TYPE_UNSPECIFIED
}

func (x *SourceMetadata) GetOriginalResourceId() string {
	if x != nil {
		return x.OriginalResourceId
	}
	return ""
}

func (x *SourceMetadata) GetOriginalResourceCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalResourceCreateTime
	}
	return nil
}

func (x *SourceMetadata) GetOriginalResourceUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalResourceUpdateTime
	}
	return nil
}

type isSourceMetadata_Source interface {
	isSourceMetadata_Source()
}

type SourceMetadata_PluginInstanceActionSource_ struct {
	// Output only. The source of the resource is a plugin instance action.
	PluginInstanceActionSource *SourceMetadata_PluginInstanceActionSource `protobuf:"bytes,1,opt,name=plugin_instance_action_source,json=pluginInstanceActionSource,proto3,oneof"`
}

func (*SourceMetadata_PluginInstanceActionSource_) isSourceMetadata_Source() {}

// Respresents an API Observation observed in one of the sources.
type DiscoveredApiObservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. The name of the discovered API Observation.
	//
	// Format:
	// `projects/{project}/locations/{location}/discoveredApiObservations/{discovered_api_observation}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. Style of ApiObservation
	Style DiscoveredApiObservation_Style `protobuf:"varint,2,opt,name=style,proto3,enum=google.cloud.apihub.v1.DiscoveredApiObservation_Style" json:"style,omitempty"`
	// Optional. The IP address (IPv4 or IPv6) of the origin server that the
	// request was sent to. This field can include port information. Examples:
	// `"192.168.1.1"`, `"10.0.0.1:80"`, `"FE80::0202:B3FF:FE1E:8329"`.
	ServerIps []string `protobuf:"bytes,3,rep,name=server_ips,json=serverIps,proto3" json:"server_ips,omitempty"`
	// Optional. The hostname of requests processed for this Observation.
	Hostname string `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Optional. Last event detected time stamp
	LastEventDetectedTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_event_detected_time,json=lastEventDetectedTime,proto3" json:"last_event_detected_time,omitempty"`
	// Optional. The location of the observation source.
	SourceLocations []string `protobuf:"bytes,6,rep,name=source_locations,json=sourceLocations,proto3" json:"source_locations,omitempty"`
	// Optional. The number of observed API Operations.
	ApiOperationCount int64 `protobuf:"varint,7,opt,name=api_operation_count,json=apiOperationCount,proto3" json:"api_operation_count,omitempty"`
	// Optional. For an observation pushed from a gcp resource, this would be the
	// gcp project id.
	Origin string `protobuf:"bytes,8,opt,name=origin,proto3" json:"origin,omitempty"`
	// Optional. The type of the source from which the observation was collected.
	SourceTypes []DiscoveredApiObservation_SourceType `protobuf:"varint,9,rep,packed,name=source_types,json=sourceTypes,proto3,enum=google.cloud.apihub.v1.DiscoveredApiObservation_SourceType" json:"source_types,omitempty"`
	// Output only. The number of known API Operations.
	KnownOperationsCount int64 `protobuf:"varint,10,opt,name=known_operations_count,json=knownOperationsCount,proto3" json:"known_operations_count,omitempty"`
	// Output only. The number of unknown API Operations.
	UnknownOperationsCount int64 `protobuf:"varint,11,opt,name=unknown_operations_count,json=unknownOperationsCount,proto3" json:"unknown_operations_count,omitempty"`
	// Output only. Create time stamp of the observation in API Hub.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Update time stamp of the observation in API Hub.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. The metadata of the source from which the observation was
	// collected.
	SourceMetadata *SourceMetadata `protobuf:"bytes,14,opt,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
}

func (x *DiscoveredApiObservation) Reset() {
	*x = DiscoveredApiObservation{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredApiObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredApiObservation) ProtoMessage() {}

func (x *DiscoveredApiObservation) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredApiObservation.ProtoReflect.Descriptor instead.
func (*DiscoveredApiObservation) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{34}
}

func (x *DiscoveredApiObservation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscoveredApiObservation) GetStyle() DiscoveredApiObservation_Style {
	if x != nil {
		return x.Style
	}
	return DiscoveredApiObservation_STYLE_UNSPECIFIED
}

func (x *DiscoveredApiObservation) GetServerIps() []string {
	if x != nil {
		return x.ServerIps
	}
	return nil
}

func (x *DiscoveredApiObservation) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *DiscoveredApiObservation) GetLastEventDetectedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEventDetectedTime
	}
	return nil
}

func (x *DiscoveredApiObservation) GetSourceLocations() []string {
	if x != nil {
		return x.SourceLocations
	}
	return nil
}

func (x *DiscoveredApiObservation) GetApiOperationCount() int64 {
	if x != nil {
		return x.ApiOperationCount
	}
	return 0
}

func (x *DiscoveredApiObservation) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *DiscoveredApiObservation) GetSourceTypes() []DiscoveredApiObservation_SourceType {
	if x != nil {
		return x.SourceTypes
	}
	return nil
}

func (x *DiscoveredApiObservation) GetKnownOperationsCount() int64 {
	if x != nil {
		return x.KnownOperationsCount
	}
	return 0
}

func (x *DiscoveredApiObservation) GetUnknownOperationsCount() int64 {
	if x != nil {
		return x.UnknownOperationsCount
	}
	return 0
}

func (x *DiscoveredApiObservation) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DiscoveredApiObservation) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *DiscoveredApiObservation) GetSourceMetadata() *SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

// DiscoveredApiOperation represents an API Operation observed in one of the
// sources.
type DiscoveredApiOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ApiOperation protocol style
	//
	// Types that are assignable to Operation:
	//
	//	*DiscoveredApiOperation_HttpOperation
	Operation isDiscoveredApiOperation_Operation `protobuf_oneof:"operation"`
	// Identifier. The name of the discovered API Operation.
	//
	// Format:
	// `projects/{project}/locations/{location}/discoveredApiObservations/{discovered_api_observation}/discoveredApiOperations/{discovered_api_operation}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. First seen time stamp
	FirstSeenTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_seen_time,json=firstSeenTime,proto3" json:"first_seen_time,omitempty"`
	// Optional. Last seen time stamp
	LastSeenTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_seen_time,json=lastSeenTime,proto3" json:"last_seen_time,omitempty"`
	// Optional. The number of occurrences of this API Operation.
	Count int64 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	// Output only. The classification of the discovered API operation.
	Classification DiscoveredApiOperation_Classification `protobuf:"varint,6,opt,name=classification,proto3,enum=google.cloud.apihub.v1.DiscoveredApiOperation_Classification" json:"classification,omitempty"`
	// Output only. The list of matched results for the discovered API operation.
	// This will be populated only if the classification is known. The current
	// usecase is for a single match. Keeping it repeated to support multiple
	// matches in future.
	MatchResults []*DiscoveredApiOperation_MatchResult `protobuf:"bytes,7,rep,name=match_results,json=matchResults,proto3" json:"match_results,omitempty"`
	// Output only. The metadata of the source from which the api operation was
	// collected.
	SourceMetadata *SourceMetadata `protobuf:"bytes,8,opt,name=source_metadata,json=sourceMetadata,proto3" json:"source_metadata,omitempty"`
	// Output only. Create time stamp of the discovered API operation in API Hub.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Update time stamp of the discovered API operation in API Hub.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *DiscoveredApiOperation) Reset() {
	*x = DiscoveredApiOperation{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredApiOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredApiOperation) ProtoMessage() {}

func (x *DiscoveredApiOperation) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredApiOperation.ProtoReflect.Descriptor instead.
func (*DiscoveredApiOperation) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{35}
}

func (m *DiscoveredApiOperation) GetOperation() isDiscoveredApiOperation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (x *DiscoveredApiOperation) GetHttpOperation() *HttpOperationDetails {
	if x, ok := x.GetOperation().(*DiscoveredApiOperation_HttpOperation); ok {
		return x.HttpOperation
	}
	return nil
}

func (x *DiscoveredApiOperation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscoveredApiOperation) GetFirstSeenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeenTime
	}
	return nil
}

func (x *DiscoveredApiOperation) GetLastSeenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenTime
	}
	return nil
}

func (x *DiscoveredApiOperation) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DiscoveredApiOperation) GetClassification() DiscoveredApiOperation_Classification {
	if x != nil {
		return x.Classification
	}
	return DiscoveredApiOperation_CLASSIFICATION_UNSPECIFIED
}

func (x *DiscoveredApiOperation) GetMatchResults() []*DiscoveredApiOperation_MatchResult {
	if x != nil {
		return x.MatchResults
	}
	return nil
}

func (x *DiscoveredApiOperation) GetSourceMetadata() *SourceMetadata {
	if x != nil {
		return x.SourceMetadata
	}
	return nil
}

func (x *DiscoveredApiOperation) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DiscoveredApiOperation) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type isDiscoveredApiOperation_Operation interface {
	isDiscoveredApiOperation_Operation()
}

type DiscoveredApiOperation_HttpOperation struct {
	// Optional. An HTTP Operation.
	HttpOperation *HttpOperationDetails `protobuf:"bytes,2,opt,name=http_operation,json=httpOperation,proto3,oneof"`
}

func (*DiscoveredApiOperation_HttpOperation) isDiscoveredApiOperation_Operation() {}

// An HTTP-based API Operation, sometimes called a "REST" Operation.
type HttpOperationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. An HTTP Operation.
	HttpOperation *HttpOperation `protobuf:"bytes,1,opt,name=http_operation,json=httpOperation,proto3" json:"http_operation,omitempty"`
	// Optional. Path params of HttpOperation
	PathParams []*HttpOperationDetails_PathParam `protobuf:"bytes,2,rep,name=path_params,json=pathParams,proto3" json:"path_params,omitempty"`
	// Optional. Query params of HttpOperation
	QueryParams map[string]*HttpOperationDetails_QueryParam `protobuf:"bytes,3,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. Request metadata.
	Request *HttpOperationDetails_HttpRequest `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
	// Optional. Response metadata.
	Response *HttpOperationDetails_HttpResponse `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *HttpOperationDetails) Reset() {
	*x = HttpOperationDetails{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpOperationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpOperationDetails) ProtoMessage() {}

func (x *HttpOperationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpOperationDetails.ProtoReflect.Descriptor instead.
func (*HttpOperationDetails) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{36}
}

func (x *HttpOperationDetails) GetHttpOperation() *HttpOperation {
	if x != nil {
		return x.HttpOperation
	}
	return nil
}

func (x *HttpOperationDetails) GetPathParams() []*HttpOperationDetails_PathParam {
	if x != nil {
		return x.PathParams
	}
	return nil
}

func (x *HttpOperationDetails) GetQueryParams() map[string]*HttpOperationDetails_QueryParam {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *HttpOperationDetails) GetRequest() *HttpOperationDetails_HttpRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *HttpOperationDetails) GetResponse() *HttpOperationDetails_HttpResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// The value that can be assigned to the attribute when the data type is
// enum.
type Attribute_AllowedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the allowed value.
	// * If provided, the same will be used. The service will throw an error if
	// the specified id is already used by another allowed value in the same
	// attribute resource.
	// * If not provided, a system generated id derived from the display name
	// will be used. In this case, the service will handle conflict resolution
	// by adding a system generated suffix in case of duplicates.
	//
	// This value should be 4-63 characters, and valid characters
	// are /[a-z][0-9]-/.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The display name of the allowed value.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional. The detailed description of the allowed value.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. When set to true, the allowed value cannot be updated or
	// deleted by the user. It can only be true for System defined attributes.
	Immutable bool `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
}

func (x *Attribute_AllowedValue) Reset() {
	*x = Attribute_AllowedValue{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute_AllowedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_AllowedValue) ProtoMessage() {}

func (x *Attribute_AllowedValue) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_AllowedValue.ProtoReflect.Descriptor instead.
func (*Attribute_AllowedValue) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Attribute_AllowedValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Attribute_AllowedValue) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Attribute_AllowedValue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Attribute_AllowedValue) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

// The attribute values of data type enum.
type AttributeValues_EnumAttributeValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The attribute values in case attribute data type is enum.
	Values []*Attribute_AllowedValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AttributeValues_EnumAttributeValues) Reset() {
	*x = AttributeValues_EnumAttributeValues{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeValues_EnumAttributeValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValues_EnumAttributeValues) ProtoMessage() {}

func (x *AttributeValues_EnumAttributeValues) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValues_EnumAttributeValues.ProtoReflect.Descriptor instead.
func (*AttributeValues_EnumAttributeValues) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{16, 0}
}

func (x *AttributeValues_EnumAttributeValues) GetValues() []*Attribute_AllowedValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// The attribute values of data type string or JSON.
type AttributeValues_StringAttributeValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The attribute values in case attribute data type is string or
	// JSON.
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AttributeValues_StringAttributeValues) Reset() {
	*x = AttributeValues_StringAttributeValues{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeValues_StringAttributeValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValues_StringAttributeValues) ProtoMessage() {}

func (x *AttributeValues_StringAttributeValues) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValues_StringAttributeValues.ProtoReflect.Descriptor instead.
func (*AttributeValues_StringAttributeValues) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{16, 1}
}

func (x *AttributeValues_StringAttributeValues) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Count of issues with a given severity.
type LintResponse_SummaryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Severity of the issue.
	Severity Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=google.cloud.apihub.v1.Severity" json:"severity,omitempty"`
	// Required. Count of issues with the given severity.
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LintResponse_SummaryEntry) Reset() {
	*x = LintResponse_SummaryEntry{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LintResponse_SummaryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintResponse_SummaryEntry) ProtoMessage() {}

func (x *LintResponse_SummaryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintResponse_SummaryEntry.ProtoReflect.Descriptor instead.
func (*LintResponse_SummaryEntry) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{20, 0}
}

func (x *LintResponse_SummaryEntry) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *LintResponse_SummaryEntry) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Available configurations to provision an ApiHub Instance.
type ApiHubInstance_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The Customer Managed Encryption Key (CMEK) used for data
	// encryption. The CMEK name should follow the format of
	// `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
	// where the location must match the instance location.
	// If the CMEK is not provided, a GMEK will be created for the instance.
	CmekKeyName string `protobuf:"bytes,1,opt,name=cmek_key_name,json=cmekKeyName,proto3" json:"cmek_key_name,omitempty"`
	// Optional. If true, the search will be disabled for the instance. The
	// default value is false.
	DisableSearch bool `protobuf:"varint,2,opt,name=disable_search,json=disableSearch,proto3" json:"disable_search,omitempty"`
	// Optional. The name of the Vertex AI location where the data store is
	// stored.
	VertexLocation string `protobuf:"bytes,3,opt,name=vertex_location,json=vertexLocation,proto3" json:"vertex_location,omitempty"`
	// Optional. Encryption type for the region. If the encryption type is CMEK,
	// the cmek_key_name must be provided. If no encryption type is provided,
	// GMEK will be used.
	EncryptionType ApiHubInstance_Config_EncryptionType `protobuf:"varint,4,opt,name=encryption_type,json=encryptionType,proto3,enum=google.cloud.apihub.v1.ApiHubInstance_Config_EncryptionType" json:"encryption_type,omitempty"`
}

func (x *ApiHubInstance_Config) Reset() {
	*x = ApiHubInstance_Config{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiHubInstance_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiHubInstance_Config) ProtoMessage() {}

func (x *ApiHubInstance_Config) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiHubInstance_Config.ProtoReflect.Descriptor instead.
func (*ApiHubInstance_Config) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{25, 0}
}

func (x *ApiHubInstance_Config) GetCmekKeyName() string {
	if x != nil {
		return x.CmekKeyName
	}
	return ""
}

func (x *ApiHubInstance_Config) GetDisableSearch() bool {
	if x != nil {
		return x.DisableSearch
	}
	return false
}

func (x *ApiHubInstance_Config) GetVertexLocation() string {
	if x != nil {
		return x.VertexLocation
	}
	return ""
}

func (x *ApiHubInstance_Config) GetEncryptionType() ApiHubInstance_Config_EncryptionType {
	if x != nil {
		return x.EncryptionType
	}
	return ApiHubInstance_Config_ENCRYPTION_TYPE_UNSPECIFIED
}

// The config variable value of data type multi select.
type ConfigVariable_MultiSelectValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The config variable value of data type multi select.
	Values []*ConfigValueOption `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ConfigVariable_MultiSelectValues) Reset() {
	*x = ConfigVariable_MultiSelectValues{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigVariable_MultiSelectValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVariable_MultiSelectValues) ProtoMessage() {}

func (x *ConfigVariable_MultiSelectValues) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVariable_MultiSelectValues.ProtoReflect.Descriptor instead.
func (*ConfigVariable_MultiSelectValues) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{30, 0}
}

func (x *ConfigVariable_MultiSelectValues) GetValues() []*ConfigValueOption {
	if x != nil {
		return x.Values
	}
	return nil
}

// The config variable value of data type multi string.
type ConfigVariable_MultiStringValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The config variable value of data type multi string.
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ConfigVariable_MultiStringValues) Reset() {
	*x = ConfigVariable_MultiStringValues{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigVariable_MultiStringValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVariable_MultiStringValues) ProtoMessage() {}

func (x *ConfigVariable_MultiStringValues) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVariable_MultiStringValues.ProtoReflect.Descriptor instead.
func (*ConfigVariable_MultiStringValues) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{30, 1}
}

func (x *ConfigVariable_MultiStringValues) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// The config variable value of data type multi int.
type ConfigVariable_MultiIntValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The config variable value of data type multi int.
	Values []int32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *ConfigVariable_MultiIntValues) Reset() {
	*x = ConfigVariable_MultiIntValues{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigVariable_MultiIntValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVariable_MultiIntValues) ProtoMessage() {}

func (x *ConfigVariable_MultiIntValues) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVariable_MultiIntValues.ProtoReflect.Descriptor instead.
func (*ConfigVariable_MultiIntValues) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{30, 2}
}

func (x *ConfigVariable_MultiIntValues) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Parameters to support Username and Password Authentication.
type AuthConfig_UserPasswordConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Username.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Required. Secret version reference containing the password.
	// The `secretmanager.versions.access` permission should be
	// granted to the service account accessing the secret.
	Password *Secret `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AuthConfig_UserPasswordConfig) Reset() {
	*x = AuthConfig_UserPasswordConfig{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthConfig_UserPasswordConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfig_UserPasswordConfig) ProtoMessage() {}

func (x *AuthConfig_UserPasswordConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfig_UserPasswordConfig.ProtoReflect.Descriptor instead.
func (*AuthConfig_UserPasswordConfig) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{32, 0}
}

func (x *AuthConfig_UserPasswordConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthConfig_UserPasswordConfig) GetPassword() *Secret {
	if x != nil {
		return x.Password
	}
	return nil
}

// Parameters to support Oauth 2.0 client credentials grant authentication.
// See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
type AuthConfig_Oauth2ClientCredentialsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The client identifier.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Required. Secret version reference containing the client secret.
	// The `secretmanager.versions.access` permission should be
	// granted to the service account accessing the secret.
	ClientSecret *Secret `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *AuthConfig_Oauth2ClientCredentialsConfig) Reset() {
	*x = AuthConfig_Oauth2ClientCredentialsConfig{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthConfig_Oauth2ClientCredentialsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfig_Oauth2ClientCredentialsConfig) ProtoMessage() {}

func (x *AuthConfig_Oauth2ClientCredentialsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfig_Oauth2ClientCredentialsConfig.ProtoReflect.Descriptor instead.
func (*AuthConfig_Oauth2ClientCredentialsConfig) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{32, 1}
}

func (x *AuthConfig_Oauth2ClientCredentialsConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthConfig_Oauth2ClientCredentialsConfig) GetClientSecret() *Secret {
	if x != nil {
		return x.ClientSecret
	}
	return nil
}

// Config for authentication with API key.
type AuthConfig_ApiKeyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The parameter name of the API key.
	// E.g. If the API request is "https://example.com/act?api_key=<API KEY>",
	// "api_key" would be the parameter name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The name of the SecretManager secret version resource storing
	// the API key. Format:
	// `projects/{project}/secrets/{secrete}/versions/{version}`. The
	// `secretmanager.versions.access` permission should be granted to the
	// service account accessing the secret.
	ApiKey *Secret `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Required. The location of the API key.
	// The default value is QUERY.
	HttpElementLocation AuthConfig_ApiKeyConfig_HttpElementLocation `protobuf:"varint,3,opt,name=http_element_location,json=httpElementLocation,proto3,enum=google.cloud.apihub.v1.AuthConfig_ApiKeyConfig_HttpElementLocation" json:"http_element_location,omitempty"`
}

func (x *AuthConfig_ApiKeyConfig) Reset() {
	*x = AuthConfig_ApiKeyConfig{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthConfig_ApiKeyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthConfig_ApiKeyConfig) ProtoMessage() {}

func (x *AuthConfig_ApiKeyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthConfig_ApiKeyConfig.ProtoReflect.Descriptor instead.
func (*AuthConfig_ApiKeyConfig) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{32, 2}
}

func (x *AuthConfig_ApiKeyConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthConfig_ApiKeyConfig) GetApiKey() *Secret {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

func (x *AuthConfig_ApiKeyConfig) GetHttpElementLocation() AuthConfig_ApiKeyConfig_HttpElementLocation {
	if x != nil {
		return x.HttpElementLocation
	}
	return AuthConfig_ApiKeyConfig_HTTP_ELEMENT_LOCATION_UNSPECIFIED
}

// PluginInstanceActionSource represents the plugin instance action source.
type SourceMetadata_PluginInstanceActionSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The resource name of the source plugin instance.
	// Format is
	// `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
	PluginInstance string `protobuf:"bytes,1,opt,name=plugin_instance,json=pluginInstance,proto3" json:"plugin_instance,omitempty"`
	// Output only. The id of the plugin instance action.
	ActionId string `protobuf:"bytes,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *SourceMetadata_PluginInstanceActionSource) Reset() {
	*x = SourceMetadata_PluginInstanceActionSource{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceMetadata_PluginInstanceActionSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceMetadata_PluginInstanceActionSource) ProtoMessage() {}

func (x *SourceMetadata_PluginInstanceActionSource) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceMetadata_PluginInstanceActionSource.ProtoReflect.Descriptor instead.
func (*SourceMetadata_PluginInstanceActionSource) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{33, 0}
}

func (x *SourceMetadata_PluginInstanceActionSource) GetPluginInstance() string {
	if x != nil {
		return x.PluginInstance
	}
	return ""
}

func (x *SourceMetadata_PluginInstanceActionSource) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

// MatchResult represents the result of matching a discovered API operation
// with a catalog API operation.
type DiscoveredApiOperation_MatchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The name of the matched API Operation.
	//
	// Format:
	// `projects/{project}/locations/{location}/apis/{api}/versions/{version}/operations/{operation}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DiscoveredApiOperation_MatchResult) Reset() {
	*x = DiscoveredApiOperation_MatchResult{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredApiOperation_MatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredApiOperation_MatchResult) ProtoMessage() {}

func (x *DiscoveredApiOperation_MatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredApiOperation_MatchResult.ProtoReflect.Descriptor instead.
func (*DiscoveredApiOperation_MatchResult) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{35, 0}
}

func (x *DiscoveredApiOperation_MatchResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// HTTP Path parameter.
type HttpOperationDetails_PathParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Segment location in the path, 1-indexed
	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	// Optional. Data type of path param
	DataType HttpOperationDetails_DataType `protobuf:"varint,2,opt,name=data_type,json=dataType,proto3,enum=google.cloud.apihub.v1.HttpOperationDetails_DataType" json:"data_type,omitempty"`
}

func (x *HttpOperationDetails_PathParam) Reset() {
	*x = HttpOperationDetails_PathParam{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpOperationDetails_PathParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpOperationDetails_PathParam) ProtoMessage() {}

func (x *HttpOperationDetails_PathParam) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpOperationDetails_PathParam.ProtoReflect.Descriptor instead.
func (*HttpOperationDetails_PathParam) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{36, 0}
}

func (x *HttpOperationDetails_PathParam) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *HttpOperationDetails_PathParam) GetDataType() HttpOperationDetails_DataType {
	if x != nil {
		return x.DataType
	}
	return HttpOperationDetails_DATA_TYPE_UNSPECIFIED
}

// An aggregation of HTTP query parameter occurrences.
type HttpOperationDetails_QueryParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Name of query param
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. The number of occurrences of this query parameter across
	// transactions.
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// Optional. Data type of path param
	DataType HttpOperationDetails_DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=google.cloud.apihub.v1.HttpOperationDetails_DataType" json:"data_type,omitempty"`
}

func (x *HttpOperationDetails_QueryParam) Reset() {
	*x = HttpOperationDetails_QueryParam{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpOperationDetails_QueryParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpOperationDetails_QueryParam) ProtoMessage() {}

func (x *HttpOperationDetails_QueryParam) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpOperationDetails_QueryParam.ProtoReflect.Descriptor instead.
func (*HttpOperationDetails_QueryParam) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{36, 1}
}

func (x *HttpOperationDetails_QueryParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpOperationDetails_QueryParam) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HttpOperationDetails_QueryParam) GetDataType() HttpOperationDetails_DataType {
	if x != nil {
		return x.DataType
	}
	return HttpOperationDetails_DATA_TYPE_UNSPECIFIED
}

// An aggregation of HTTP header occurrences.
type HttpOperationDetails_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Header name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The number of occurrences of this Header across transactions.
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// Data type of header
	DataType HttpOperationDetails_DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=google.cloud.apihub.v1.HttpOperationDetails_DataType" json:"data_type,omitempty"`
}

func (x *HttpOperationDetails_Header) Reset() {
	*x = HttpOperationDetails_Header{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpOperationDetails_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpOperationDetails_Header) ProtoMessage() {}

func (x *HttpOperationDetails_Header) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpOperationDetails_Header.ProtoReflect.Descriptor instead.
func (*HttpOperationDetails_Header) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{36, 2}
}

func (x *HttpOperationDetails_Header) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpOperationDetails_Header) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HttpOperationDetails_Header) GetDataType() HttpOperationDetails_DataType {
	if x != nil {
		return x.DataType
	}
	return HttpOperationDetails_DATA_TYPE_UNSPECIFIED
}

// An aggregation of HTTP requests.
type HttpOperationDetails_HttpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Unordered map from header name to header metadata
	Headers map[string]*HttpOperationDetails_Header `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HttpOperationDetails_HttpRequest) Reset() {
	*x = HttpOperationDetails_HttpRequest{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpOperationDetails_HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpOperationDetails_HttpRequest) ProtoMessage() {}

func (x *HttpOperationDetails_HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpOperationDetails_HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpOperationDetails_HttpRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{36, 3}
}

func (x *HttpOperationDetails_HttpRequest) GetHeaders() map[string]*HttpOperationDetails_Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

// An aggregation of HTTP responses.
type HttpOperationDetails_HttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Unordered map from header name to header metadata
	Headers map[string]*HttpOperationDetails_Header `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. Map of status code to observed count
	ResponseCodes map[int32]int64 `protobuf:"bytes,2,rep,name=response_codes,json=responseCodes,proto3" json:"response_codes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *HttpOperationDetails_HttpResponse) Reset() {
	*x = HttpOperationDetails_HttpResponse{}
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpOperationDetails_HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpOperationDetails_HttpResponse) ProtoMessage() {}

func (x *HttpOperationDetails_HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_common_fields_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpOperationDetails_HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpOperationDetails_HttpResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP(), []int{36, 4}
}

func (x *HttpOperationDetails_HttpResponse) GetHeaders() map[string]*HttpOperationDetails_Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpOperationDetails_HttpResponse) GetResponseCodes() map[int32]int64 {
	if x != nil {
		return x.ResponseCodes
	}
	return nil
}

var File_google_cloud_apihub_v1_common_fields_proto protoreflect.FileDescriptor

var file_google_cloud_apihub_v1_common_fields_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdf, 0x0c, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x50, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x41, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x25, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x51, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x53, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d,
	0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x50, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x49, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x08, 0x61, 0x70, 0x69, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xe0, 0x41, 0x01, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x10,
	0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x0f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x6c, 0x0a, 0x1b, 0x61, 0x70, 0x69, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x19, 0x61, 0x70, 0x69, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x6a, 0x0a, 0x1a, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x18, 0x61, 0x70, 0x69, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x66, 0x0a, 0x0f,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x3a, 0x5d, 0xea, 0x41, 0x5a, 0x0a, 0x19, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x41, 0x70, 0x69, 0x12, 0x32, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x69, 0x7d, 0x2a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x32, 0x03,
	0x61, 0x70, 0x69, 0x22, 0xc7, 0x0a, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x22, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x1c,
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x73, 0x70,
	0x65, 0x63, 0x73, 0x12, 0x51, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2a, 0xe0, 0x41, 0x03,
	0xfa, 0x41, 0x24, 0x0a, 0x22, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x70, 0x69, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x28, 0xe0, 0x41, 0x03,
	0xfa, 0x41, 0x22, 0x0a, 0x20, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x28, 0xe0, 0x41, 0x01, 0xfa, 0x41, 0x22, 0x0a,
	0x20, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x40,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x4c,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x54, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x13, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x28, 0xe0, 0x41, 0x01, 0xfa, 0x41, 0x22, 0x0a, 0x20, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x54, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x66, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a,
	0x7c, 0xea, 0x41, 0x79, 0x0a, 0x1d, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x45, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x7b, 0x61, 0x70, 0x69, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x2a, 0x08, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x32, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x09,
	0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x06, 0xe0, 0x41, 0x01, 0xe0,
	0x41, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x72, 0x69, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xe0,
	0x41, 0x01, 0xe0, 0x41, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x66, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x44, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x18, 0x50, 0x41, 0x52, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x45, 0x4c, 0x41, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54,
	0x52, 0x49, 0x43, 0x54, 0x10, 0x02, 0x3a, 0x80, 0x01, 0xea, 0x41, 0x7d, 0x0a, 0x1a, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70, 0x65, 0x63, 0x12, 0x52, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x7d, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x69, 0x7d, 0x2f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x2f,
	0x73, 0x70, 0x65, 0x63, 0x73, 0x2f, 0x7b, 0x73, 0x70, 0x65, 0x63, 0x7d, 0x2a, 0x05, 0x73, 0x70,
	0x65, 0x63, 0x73, 0x32, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xc0, 0x0a, 0x0a, 0x0a, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x50, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72,
	0x69, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x03, 0x73, 0x6c, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x03, 0x73, 0x6c, 0x6f,
	0x12, 0x4e, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x57, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x53, 0x0a, 0x0e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x4b, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72,
	0x69, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a,
	0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x11,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x66, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x80, 0x01, 0xea, 0x41, 0x7d, 0x0a,
	0x20, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x40, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x7d, 0x2a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x32, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xeb, 0x05, 0x0a,
	0x0c, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x1c, 0x0a, 0x1a, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x47,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x66, 0x0a, 0x0f,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x3a, 0xa3, 0x01, 0xea, 0x41, 0x9f, 0x01, 0x0a, 0x22, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7b, 0x61,
	0x70, 0x69, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2a, 0x0d, 0x61,
	0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x0c, 0x61, 0x70,
	0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf8, 0x05, 0x0a, 0x0a, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x22, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x1c, 0x0a, 0x1a, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x57, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x66, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x10, 0x01, 0x3a, 0x9f, 0x01, 0xea, 0x41, 0x9b,
	0x01, 0x0a, 0x20, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x7b, 0x61, 0x70, 0x69, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x7d, 0x2a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x32, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xef, 0x09, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x0f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x4c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x21, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x95, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x09,
	0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x57, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x22, 0x9f, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50, 0x49,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x50, 0x45, 0x43, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x49,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x45, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c,
	0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x50, 0x49, 0x10, 0x08, 0x12, 0x0a,
	0x0a, 0x06, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x10, 0x09, 0x22, 0x4e, 0x0a, 0x08, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4a,
	0x53, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x10, 0x04, 0x3a, 0x7b, 0xea, 0x41, 0x78, 0x0a,
	0x1f, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x3e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x7d,
	0x2a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x32, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x51, 0x0a, 0x0c, 0x53, 0x70, 0x65, 0x63, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x53,
	0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x64, 0x0a, 0x15, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x70,
	0x65, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4e, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x22, 0x65, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x12,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x41, 0x50, 0x49,
	0x5f, 0x53, 0x50, 0x45, 0x43, 0x5f, 0x32, 0x5f, 0x30, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4f,
	0x50, 0x45, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x5f, 0x33, 0x5f, 0x30,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x53,
	0x50, 0x45, 0x43, 0x5f, 0x33, 0x5f, 0x31, 0x10, 0x03, 0x22, 0x8d, 0x02, 0x0a, 0x10, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4e,
	0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0d, 0x68, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x48, 0x74,
	0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x49, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x75, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10, 0x06, 0x12, 0x09,
	0x0a, 0x05, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41,
	0x43, 0x45, 0x10, 0x08, 0x22, 0x46, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x06,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x09, 0x72, 0x61, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x72, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x4a, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x37, 0x0a, 0x0d,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x55, 0x72, 0x69, 0x22, 0x83, 0x05, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x0b, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x65,
	0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x0d, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x60, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x5e, 0x0a, 0x0a, 0x75, 0x72, 0x69, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x75, 0x72, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x45, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xe0, 0x41, 0x03, 0xfa, 0x41, 0x21, 0x0a, 0x1f, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x62, 0x0a, 0x13, 0x45, 0x6e, 0x75, 0x6d,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x34, 0x0a, 0x15,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb8, 0x08, 0x0a, 0x0a,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x06, 0xe0, 0x41, 0x05, 0xe0, 0x41, 0x02,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x08, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x06, 0xe0, 0x41, 0x05, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x12, 0x43, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a,
	0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a,
	0x66, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x50, 0x4f,
	0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x22, 0x3b, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10,
	0x01, 0x3a, 0x82, 0x01, 0xea, 0x41, 0x7f, 0x0a, 0x20, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x41, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x7b, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x7d, 0x2a, 0x0c, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x32, 0x0a, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xca, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x1a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x17, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x22, 0xf7, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x49, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x49, 0x45,
	0x52, 0x5f, 0x52, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0xe4, 0x03,
	0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x6c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x6c, 0x0a, 0x0c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x05, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x05,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x34, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x43, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0xd5, 0x02, 0x0a, 0x11, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x76,
	0x65, 0x72, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04,
	0x76, 0x65, 0x72, 0x62, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3a, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xea, 0x08, 0x0a, 0x0e, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x48, 0x75,
	0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x69, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x4f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x48, 0x75,
	0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbe, 0x02, 0x0a, 0x06, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0d, 0x63, 0x6d, 0x65, 0x6b, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x0b, 0x63, 0x6d, 0x65, 0x6b, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x0f, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x4d, 0x45, 0x4b, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x43, 0x4d, 0x45, 0x4b, 0x10, 0x02, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x06, 0x3a, 0x97, 0x01, 0xea, 0x41, 0x93, 0x01, 0x0a, 0x24, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x4a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x48,
	0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x69,
	0x5f, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2a, 0x0f,
	0x61, 0x70, 0x69, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x32,
	0x0e, 0x61, 0x70, 0x69, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xd5, 0x05, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x61,
	0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x66, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x87, 0x01,
	0xea, 0x41, 0x83, 0x01, 0x0a, 0x21, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x12, 0x43, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d,
	0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x73, 0x2f, 0x7b, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x7d, 0x2a, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x73, 0x32, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x22, 0x77, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x34, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x04, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5c, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x10, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0c,
	0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x60, 0x0a, 0x14, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x12, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45,
	0x43, 0x52, 0x45, 0x54, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d, 0x10, 0x05,
	0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x49, 0x4e,
	0x54, 0x10, 0x08, 0x22, 0xc7, 0x06, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x22, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x6f, 0x0a, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52,
	0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x15, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x5b, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x1a, 0x30, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x2d, 0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x70, 0x0a,
	0x1a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x23, 0x0a, 0x21, 0x69, 0x61,
	0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x86, 0x09, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x77,
	0x0a, 0x1d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x1a, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x69, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x57, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x8b, 0x01, 0x0a, 0x20,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x1d, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x76, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x8b, 0x01, 0x0a, 0x1d, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x1a, 0xd8, 0x02, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a,
	0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x7c, 0x0a, 0x15, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x68, 0x74, 0x74, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x13, 0x48, 0x74, 0x74,
	0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x21, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x52, 0x59,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x41, 0x54, 0x48, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x44, 0x59,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4f, 0x4b, 0x49, 0x45, 0x10, 0x05, 0x42, 0x08,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xcf, 0x05, 0x0a, 0x0e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x8b, 0x01, 0x0a, 0x1d,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x1a, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x1d, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x1a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x62, 0x0a,
	0x1d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x1a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x1a, 0x95, 0x01, 0x0a, 0x1a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x55, 0x0a, 0x0f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0xe0, 0x41, 0x03, 0xfa, 0x41,
	0x26, 0x0a, 0x24, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x10, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xd8, 0x09, 0x0a, 0x18, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x51, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x29, 0xe0, 0x41,
	0x01, 0xfa, 0x41, 0x23, 0x0a, 0x21, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x11, 0x61, 0x70, 0x69, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x63, 0x0a, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x39, 0x0a, 0x16, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x14, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x18, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x54, 0x0a,
	0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x47, 0x52, 0x50, 0x43, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52, 0x41, 0x50, 0x48,
	0x51, 0x4c, 0x10, 0x03, 0x22, 0x43, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x47, 0x43, 0x50, 0x5f, 0x58, 0x4c, 0x42, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x47, 0x43, 0x50, 0x5f, 0x49, 0x4c, 0x42, 0x10, 0x02, 0x3a, 0xc9, 0x01, 0xea, 0x41, 0xc5, 0x01,
	0x0a, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d,
	0x2a, 0x19, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x18, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x08, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5a, 0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x0d, 0x68,
	0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73,
	0x65, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x6a, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x0d,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x54, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x26, 0x0a, 0x0b,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x3a, 0xf7,
	0x01, 0xea, 0x41, 0xf3, 0x01, 0x0a, 0x2c, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x91, 0x01, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41,
	0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x32, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x41, 0x70, 0x69, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf4, 0x0d, 0x0a, 0x14, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x51,
	0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x5c, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x65, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x57, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x85, 0x01, 0x0a, 0x09,
	0x50, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x99, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0x86, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xe4, 0x01, 0x0a, 0x0b, 0x48, 0x74, 0x74,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x6f,
	0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0xa2, 0x03, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x78, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x1a, 0x6f, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x77, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a,
	0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x10, 0x05, 0x2a, 0x55, 0x0a, 0x09,
	0x4c, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x49, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x4c, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x02, 0x2a, 0x39, 0x0a, 0x06, 0x4c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x12, 0x4c, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x50, 0x45, 0x43, 0x54, 0x52, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x74,
	0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45,
	0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x56, 0x45,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49,
	0x4e, 0x54, 0x10, 0x04, 0x2a, 0x8d, 0x01, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4e, 0x4f, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x4f, 0x4f,
	0x47, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x5f,
	0x4b, 0x45, 0x59, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x32, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41,
	0x4c, 0x53, 0x10, 0x05, 0x2a, 0x54, 0x0a, 0x0e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e,
	0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x49, 0x5f, 0x47,
	0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x50, 0x49, 0x5f,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x45, 0x52, 0x10, 0x02, 0x42, 0xf7, 0x02, 0xea, 0x41, 0x65,
	0x0a, 0x23, 0x61, 0x69, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x7d, 0xea, 0x41, 0x59, 0x0a, 0x21, 0x69, 0x61, 0x6d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x7d, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x70, 0x62, 0x3b, 0x61, 0x70,
	0x69, 0x68, 0x75, 0x62, 0x70, 0x62, 0xaa, 0x02, 0x16, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x16, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x41,
	0x70, 0x69, 0x48, 0x75, 0x62, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x19, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_apihub_v1_common_fields_proto_rawDescOnce sync.Once
	file_google_cloud_apihub_v1_common_fields_proto_rawDescData = file_google_cloud_apihub_v1_common_fields_proto_rawDesc
)

func file_google_cloud_apihub_v1_common_fields_proto_rawDescGZIP() []byte {
	file_google_cloud_apihub_v1_common_fields_proto_rawDescOnce.Do(func() {
		file_google_cloud_apihub_v1_common_fields_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_apihub_v1_common_fields_proto_rawDescData)
	})
	return file_google_cloud_apihub_v1_common_fields_proto_rawDescData
}

var file_google_cloud_apihub_v1_common_fields_proto_enumTypes = make([]protoimpl.EnumInfo, 24)
var file_google_cloud_apihub_v1_common_fields_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_google_cloud_apihub_v1_common_fields_proto_goTypes = []any{
	(LintState)(0),                                   // 0: google.cloud.apihub.v1.LintState
	(Linter)(0),                                      // 1: google.cloud.apihub.v1.Linter
	(Severity)(0),                                    // 2: google.cloud.apihub.v1.Severity
	(AuthType)(0),                                    // 3: google.cloud.apihub.v1.AuthType
	(PluginCategory)(0),                              // 4: google.cloud.apihub.v1.PluginCategory
	(Spec_ParsingMode)(0),                            // 5: google.cloud.apihub.v1.Spec.ParsingMode
	(Definition_Type)(0),                             // 6: google.cloud.apihub.v1.Definition.Type
	(Attribute_DefinitionType)(0),                    // 7: google.cloud.apihub.v1.Attribute.DefinitionType
	(Attribute_Scope)(0),                             // 8: google.cloud.apihub.v1.Attribute.Scope
	(Attribute_DataType)(0),                          // 9: google.cloud.apihub.v1.Attribute.DataType
	(OpenApiSpecDetails_Format)(0),                   // 10: google.cloud.apihub.v1.OpenApiSpecDetails.Format
	(HttpOperation_Method)(0),                        // 11: google.cloud.apihub.v1.HttpOperation.Method
	(Dependency_State)(0),                            // 12: google.cloud.apihub.v1.Dependency.State
	(Dependency_DiscoveryMode)(0),                    // 13: google.cloud.apihub.v1.Dependency.DiscoveryMode
	(DependencyErrorDetail_Error)(0),                 // 14: google.cloud.apihub.v1.DependencyErrorDetail.Error
	(ApiHubInstance_State)(0),                        // 15: google.cloud.apihub.v1.ApiHubInstance.State
	(ApiHubInstance_Config_EncryptionType)(0),        // 16: google.cloud.apihub.v1.ApiHubInstance.Config.EncryptionType
	(ConfigVariableTemplate_ValueType)(0),            // 17: google.cloud.apihub.v1.ConfigVariableTemplate.ValueType
	(AuthConfig_ApiKeyConfig_HttpElementLocation)(0), // 18: google.cloud.apihub.v1.AuthConfig.ApiKeyConfig.HttpElementLocation
	(SourceMetadata_SourceType)(0),                   // 19: google.cloud.apihub.v1.SourceMetadata.SourceType
	(DiscoveredApiObservation_Style)(0),              // 20: google.cloud.apihub.v1.DiscoveredApiObservation.Style
	(DiscoveredApiObservation_SourceType)(0),         // 21: google.cloud.apihub.v1.DiscoveredApiObservation.SourceType
	(DiscoveredApiOperation_Classification)(0),       // 22: google.cloud.apihub.v1.DiscoveredApiOperation.Classification
	(HttpOperationDetails_DataType)(0),               // 23: google.cloud.apihub.v1.HttpOperationDetails.DataType
	(*Api)(nil),                                      // 24: google.cloud.apihub.v1.Api
	(*Version)(nil),                                  // 25: google.cloud.apihub.v1.Version
	(*Spec)(nil),                                     // 26: google.cloud.apihub.v1.Spec
	(*Deployment)(nil),                               // 27: google.cloud.apihub.v1.Deployment
	(*ApiOperation)(nil),                             // 28: google.cloud.apihub.v1.ApiOperation
	(*Definition)(nil),                               // 29: google.cloud.apihub.v1.Definition
	(*Attribute)(nil),                                // 30: google.cloud.apihub.v1.Attribute
	(*SpecContents)(nil),                             // 31: google.cloud.apihub.v1.SpecContents
	(*SpecDetails)(nil),                              // 32: google.cloud.apihub.v1.SpecDetails
	(*OpenApiSpecDetails)(nil),                       // 33: google.cloud.apihub.v1.OpenApiSpecDetails
	(*OperationDetails)(nil),                         // 34: google.cloud.apihub.v1.OperationDetails
	(*HttpOperation)(nil),                            // 35: google.cloud.apihub.v1.HttpOperation
	(*Path)(nil),                                     // 36: google.cloud.apihub.v1.Path
	(*Schema)(nil),                                   // 37: google.cloud.apihub.v1.Schema
	(*Owner)(nil),                                    // 38: google.cloud.apihub.v1.Owner
	(*Documentation)(nil),                            // 39: google.cloud.apihub.v1.Documentation
	(*AttributeValues)(nil),                          // 40: google.cloud.apihub.v1.AttributeValues
	(*Dependency)(nil),                               // 41: google.cloud.apihub.v1.Dependency
	(*DependencyEntityReference)(nil),                // 42: google.cloud.apihub.v1.DependencyEntityReference
	(*DependencyErrorDetail)(nil),                    // 43: google.cloud.apihub.v1.DependencyErrorDetail
	(*LintResponse)(nil),                             // 44: google.cloud.apihub.v1.LintResponse
	(*Issue)(nil),                                    // 45: google.cloud.apihub.v1.Issue
	(*Range)(nil),                                    // 46: google.cloud.apihub.v1.Range
	(*Point)(nil),                                    // 47: google.cloud.apihub.v1.Point
	(*OperationMetadata)(nil),                        // 48: google.cloud.apihub.v1.OperationMetadata
	(*ApiHubInstance)(nil),                           // 49: google.cloud.apihub.v1.ApiHubInstance
	(*ExternalApi)(nil),                              // 50: google.cloud.apihub.v1.ExternalApi
	(*ConfigValueOption)(nil),                        // 51: google.cloud.apihub.v1.ConfigValueOption
	(*Secret)(nil),                                   // 52: google.cloud.apihub.v1.Secret
	(*ConfigVariableTemplate)(nil),                   // 53: google.cloud.apihub.v1.ConfigVariableTemplate
	(*ConfigVariable)(nil),                           // 54: google.cloud.apihub.v1.ConfigVariable
	(*GoogleServiceAccountConfig)(nil),               // 55: google.cloud.apihub.v1.GoogleServiceAccountConfig
	(*AuthConfig)(nil),                               // 56: google.cloud.apihub.v1.AuthConfig
	(*SourceMetadata)(nil),                           // 57: google.cloud.apihub.v1.SourceMetadata
	(*DiscoveredApiObservation)(nil),                 // 58: google.cloud.apihub.v1.DiscoveredApiObservation
	(*DiscoveredApiOperation)(nil),                   // 59: google.cloud.apihub.v1.DiscoveredApiOperation
	(*HttpOperationDetails)(nil),                     // 60: google.cloud.apihub.v1.HttpOperationDetails
	nil,                                              // 61: google.cloud.apihub.v1.Api.AttributesEntry
	nil,                                              // 62: google.cloud.apihub.v1.Version.AttributesEntry
	nil,                                              // 63: google.cloud.apihub.v1.Spec.AttributesEntry
	nil,                                              // 64: google.cloud.apihub.v1.Deployment.AttributesEntry
	nil,                                              // 65: google.cloud.apihub.v1.ApiOperation.AttributesEntry
	nil,                                              // 66: google.cloud.apihub.v1.Definition.AttributesEntry
	(*Attribute_AllowedValue)(nil),                   // 67: google.cloud.apihub.v1.Attribute.AllowedValue
	(*AttributeValues_EnumAttributeValues)(nil),      // 68: google.cloud.apihub.v1.AttributeValues.EnumAttributeValues
	(*AttributeValues_StringAttributeValues)(nil),    // 69: google.cloud.apihub.v1.AttributeValues.StringAttributeValues
	nil,                                      // 70: google.cloud.apihub.v1.Dependency.AttributesEntry
	(*LintResponse_SummaryEntry)(nil),        // 71: google.cloud.apihub.v1.LintResponse.SummaryEntry
	(*ApiHubInstance_Config)(nil),            // 72: google.cloud.apihub.v1.ApiHubInstance.Config
	nil,                                      // 73: google.cloud.apihub.v1.ApiHubInstance.LabelsEntry
	nil,                                      // 74: google.cloud.apihub.v1.ExternalApi.AttributesEntry
	(*ConfigVariable_MultiSelectValues)(nil), // 75: google.cloud.apihub.v1.ConfigVariable.MultiSelectValues
	(*ConfigVariable_MultiStringValues)(nil), // 76: google.cloud.apihub.v1.ConfigVariable.MultiStringValues
	(*ConfigVariable_MultiIntValues)(nil),    // 77: google.cloud.apihub.v1.ConfigVariable.MultiIntValues
	(*AuthConfig_UserPasswordConfig)(nil),    // 78: google.cloud.apihub.v1.AuthConfig.UserPasswordConfig
	(*AuthConfig_Oauth2ClientCredentialsConfig)(nil),  // 79: google.cloud.apihub.v1.AuthConfig.Oauth2ClientCredentialsConfig
	(*AuthConfig_ApiKeyConfig)(nil),                   // 80: google.cloud.apihub.v1.AuthConfig.ApiKeyConfig
	(*SourceMetadata_PluginInstanceActionSource)(nil), // 81: google.cloud.apihub.v1.SourceMetadata.PluginInstanceActionSource
	(*DiscoveredApiOperation_MatchResult)(nil),        // 82: google.cloud.apihub.v1.DiscoveredApiOperation.MatchResult
	(*HttpOperationDetails_PathParam)(nil),            // 83: google.cloud.apihub.v1.HttpOperationDetails.PathParam
	(*HttpOperationDetails_QueryParam)(nil),           // 84: google.cloud.apihub.v1.HttpOperationDetails.QueryParam
	(*HttpOperationDetails_Header)(nil),               // 85: google.cloud.apihub.v1.HttpOperationDetails.Header
	(*HttpOperationDetails_HttpRequest)(nil),          // 86: google.cloud.apihub.v1.HttpOperationDetails.HttpRequest
	(*HttpOperationDetails_HttpResponse)(nil),         // 87: google.cloud.apihub.v1.HttpOperationDetails.HttpResponse
	nil,                           // 88: google.cloud.apihub.v1.HttpOperationDetails.QueryParamsEntry
	nil,                           // 89: google.cloud.apihub.v1.HttpOperationDetails.HttpRequest.HeadersEntry
	nil,                           // 90: google.cloud.apihub.v1.HttpOperationDetails.HttpResponse.HeadersEntry
	nil,                           // 91: google.cloud.apihub.v1.HttpOperationDetails.HttpResponse.ResponseCodesEntry
	(*timestamppb.Timestamp)(nil), // 92: google.protobuf.Timestamp
}
var file_google_cloud_apihub_v1_common_fields_proto_depIdxs = []int32{
	39,  // 0: google.cloud.apihub.v1.Api.documentation:type_name -> google.cloud.apihub.v1.Documentation
	38,  // 1: google.cloud.apihub.v1.Api.owner:type_name -> google.cloud.apihub.v1.Owner
	92,  // 2: google.cloud.apihub.v1.Api.create_time:type_name -> google.protobuf.Timestamp
	92,  // 3: google.cloud.apihub.v1.Api.update_time:type_name -> google.protobuf.Timestamp
	40,  // 4: google.cloud.apihub.v1.Api.target_user:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 5: google.cloud.apihub.v1.Api.team:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 6: google.cloud.apihub.v1.Api.business_unit:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 7: google.cloud.apihub.v1.Api.maturity_level:type_name -> google.cloud.apihub.v1.AttributeValues
	61,  // 8: google.cloud.apihub.v1.Api.attributes:type_name -> google.cloud.apihub.v1.Api.AttributesEntry
	40,  // 9: google.cloud.apihub.v1.Api.api_style:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 10: google.cloud.apihub.v1.Api.api_requirements:type_name -> google.cloud.apihub.v1.AttributeValues
	57,  // 11: google.cloud.apihub.v1.Api.source_metadata:type_name -> google.cloud.apihub.v1.SourceMetadata
	40,  // 12: google.cloud.apihub.v1.Api.api_functional_requirements:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 13: google.cloud.apihub.v1.Api.api_technical_requirements:type_name -> google.cloud.apihub.v1.AttributeValues
	39,  // 14: google.cloud.apihub.v1.Version.documentation:type_name -> google.cloud.apihub.v1.Documentation
	92,  // 15: google.cloud.apihub.v1.Version.create_time:type_name -> google.protobuf.Timestamp
	92,  // 16: google.cloud.apihub.v1.Version.update_time:type_name -> google.protobuf.Timestamp
	40,  // 17: google.cloud.apihub.v1.Version.lifecycle:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 18: google.cloud.apihub.v1.Version.compliance:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 19: google.cloud.apihub.v1.Version.accreditation:type_name -> google.cloud.apihub.v1.AttributeValues
	62,  // 20: google.cloud.apihub.v1.Version.attributes:type_name -> google.cloud.apihub.v1.Version.AttributesEntry
	57,  // 21: google.cloud.apihub.v1.Version.source_metadata:type_name -> google.cloud.apihub.v1.SourceMetadata
	40,  // 22: google.cloud.apihub.v1.Spec.spec_type:type_name -> google.cloud.apihub.v1.AttributeValues
	31,  // 23: google.cloud.apihub.v1.Spec.contents:type_name -> google.cloud.apihub.v1.SpecContents
	32,  // 24: google.cloud.apihub.v1.Spec.details:type_name -> google.cloud.apihub.v1.SpecDetails
	92,  // 25: google.cloud.apihub.v1.Spec.create_time:type_name -> google.protobuf.Timestamp
	92,  // 26: google.cloud.apihub.v1.Spec.update_time:type_name -> google.protobuf.Timestamp
	44,  // 27: google.cloud.apihub.v1.Spec.lint_response:type_name -> google.cloud.apihub.v1.LintResponse
	63,  // 28: google.cloud.apihub.v1.Spec.attributes:type_name -> google.cloud.apihub.v1.Spec.AttributesEntry
	39,  // 29: google.cloud.apihub.v1.Spec.documentation:type_name -> google.cloud.apihub.v1.Documentation
	5,   // 30: google.cloud.apihub.v1.Spec.parsing_mode:type_name -> google.cloud.apihub.v1.Spec.ParsingMode
	57,  // 31: google.cloud.apihub.v1.Spec.source_metadata:type_name -> google.cloud.apihub.v1.SourceMetadata
	39,  // 32: google.cloud.apihub.v1.Deployment.documentation:type_name -> google.cloud.apihub.v1.Documentation
	40,  // 33: google.cloud.apihub.v1.Deployment.deployment_type:type_name -> google.cloud.apihub.v1.AttributeValues
	92,  // 34: google.cloud.apihub.v1.Deployment.create_time:type_name -> google.protobuf.Timestamp
	92,  // 35: google.cloud.apihub.v1.Deployment.update_time:type_name -> google.protobuf.Timestamp
	40,  // 36: google.cloud.apihub.v1.Deployment.slo:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 37: google.cloud.apihub.v1.Deployment.environment:type_name -> google.cloud.apihub.v1.AttributeValues
	64,  // 38: google.cloud.apihub.v1.Deployment.attributes:type_name -> google.cloud.apihub.v1.Deployment.AttributesEntry
	57,  // 39: google.cloud.apihub.v1.Deployment.source_metadata:type_name -> google.cloud.apihub.v1.SourceMetadata
	40,  // 40: google.cloud.apihub.v1.Deployment.management_url:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 41: google.cloud.apihub.v1.Deployment.source_uri:type_name -> google.cloud.apihub.v1.AttributeValues
	34,  // 42: google.cloud.apihub.v1.ApiOperation.details:type_name -> google.cloud.apihub.v1.OperationDetails
	92,  // 43: google.cloud.apihub.v1.ApiOperation.create_time:type_name -> google.protobuf.Timestamp
	92,  // 44: google.cloud.apihub.v1.ApiOperation.update_time:type_name -> google.protobuf.Timestamp
	65,  // 45: google.cloud.apihub.v1.ApiOperation.attributes:type_name -> google.cloud.apihub.v1.ApiOperation.AttributesEntry
	57,  // 46: google.cloud.apihub.v1.ApiOperation.source_metadata:type_name -> google.cloud.apihub.v1.SourceMetadata
	37,  // 47: google.cloud.apihub.v1.Definition.schema:type_name -> google.cloud.apihub.v1.Schema
	6,   // 48: google.cloud.apihub.v1.Definition.type:type_name -> google.cloud.apihub.v1.Definition.Type
	92,  // 49: google.cloud.apihub.v1.Definition.create_time:type_name -> google.protobuf.Timestamp
	92,  // 50: google.cloud.apihub.v1.Definition.update_time:type_name -> google.protobuf.Timestamp
	66,  // 51: google.cloud.apihub.v1.Definition.attributes:type_name -> google.cloud.apihub.v1.Definition.AttributesEntry
	7,   // 52: google.cloud.apihub.v1.Attribute.definition_type:type_name -> google.cloud.apihub.v1.Attribute.DefinitionType
	8,   // 53: google.cloud.apihub.v1.Attribute.scope:type_name -> google.cloud.apihub.v1.Attribute.Scope
	9,   // 54: google.cloud.apihub.v1.Attribute.data_type:type_name -> google.cloud.apihub.v1.Attribute.DataType
	67,  // 55: google.cloud.apihub.v1.Attribute.allowed_values:type_name -> google.cloud.apihub.v1.Attribute.AllowedValue
	92,  // 56: google.cloud.apihub.v1.Attribute.create_time:type_name -> google.protobuf.Timestamp
	92,  // 57: google.cloud.apihub.v1.Attribute.update_time:type_name -> google.protobuf.Timestamp
	33,  // 58: google.cloud.apihub.v1.SpecDetails.open_api_spec_details:type_name -> google.cloud.apihub.v1.OpenApiSpecDetails
	10,  // 59: google.cloud.apihub.v1.OpenApiSpecDetails.format:type_name -> google.cloud.apihub.v1.OpenApiSpecDetails.Format
	38,  // 60: google.cloud.apihub.v1.OpenApiSpecDetails.owner:type_name -> google.cloud.apihub.v1.Owner
	35,  // 61: google.cloud.apihub.v1.OperationDetails.http_operation:type_name -> google.cloud.apihub.v1.HttpOperation
	39,  // 62: google.cloud.apihub.v1.OperationDetails.documentation:type_name -> google.cloud.apihub.v1.Documentation
	36,  // 63: google.cloud.apihub.v1.HttpOperation.path:type_name -> google.cloud.apihub.v1.Path
	11,  // 64: google.cloud.apihub.v1.HttpOperation.method:type_name -> google.cloud.apihub.v1.HttpOperation.Method
	68,  // 65: google.cloud.apihub.v1.AttributeValues.enum_values:type_name -> google.cloud.apihub.v1.AttributeValues.EnumAttributeValues
	69,  // 66: google.cloud.apihub.v1.AttributeValues.string_values:type_name -> google.cloud.apihub.v1.AttributeValues.StringAttributeValues
	69,  // 67: google.cloud.apihub.v1.AttributeValues.json_values:type_name -> google.cloud.apihub.v1.AttributeValues.StringAttributeValues
	69,  // 68: google.cloud.apihub.v1.AttributeValues.uri_values:type_name -> google.cloud.apihub.v1.AttributeValues.StringAttributeValues
	42,  // 69: google.cloud.apihub.v1.Dependency.consumer:type_name -> google.cloud.apihub.v1.DependencyEntityReference
	42,  // 70: google.cloud.apihub.v1.Dependency.supplier:type_name -> google.cloud.apihub.v1.DependencyEntityReference
	12,  // 71: google.cloud.apihub.v1.Dependency.state:type_name -> google.cloud.apihub.v1.Dependency.State
	13,  // 72: google.cloud.apihub.v1.Dependency.discovery_mode:type_name -> google.cloud.apihub.v1.Dependency.DiscoveryMode
	43,  // 73: google.cloud.apihub.v1.Dependency.error_detail:type_name -> google.cloud.apihub.v1.DependencyErrorDetail
	92,  // 74: google.cloud.apihub.v1.Dependency.create_time:type_name -> google.protobuf.Timestamp
	92,  // 75: google.cloud.apihub.v1.Dependency.update_time:type_name -> google.protobuf.Timestamp
	70,  // 76: google.cloud.apihub.v1.Dependency.attributes:type_name -> google.cloud.apihub.v1.Dependency.AttributesEntry
	14,  // 77: google.cloud.apihub.v1.DependencyErrorDetail.error:type_name -> google.cloud.apihub.v1.DependencyErrorDetail.Error
	92,  // 78: google.cloud.apihub.v1.DependencyErrorDetail.error_time:type_name -> google.protobuf.Timestamp
	45,  // 79: google.cloud.apihub.v1.LintResponse.issues:type_name -> google.cloud.apihub.v1.Issue
	71,  // 80: google.cloud.apihub.v1.LintResponse.summary:type_name -> google.cloud.apihub.v1.LintResponse.SummaryEntry
	0,   // 81: google.cloud.apihub.v1.LintResponse.state:type_name -> google.cloud.apihub.v1.LintState
	1,   // 82: google.cloud.apihub.v1.LintResponse.linter:type_name -> google.cloud.apihub.v1.Linter
	92,  // 83: google.cloud.apihub.v1.LintResponse.create_time:type_name -> google.protobuf.Timestamp
	2,   // 84: google.cloud.apihub.v1.Issue.severity:type_name -> google.cloud.apihub.v1.Severity
	46,  // 85: google.cloud.apihub.v1.Issue.range:type_name -> google.cloud.apihub.v1.Range
	47,  // 86: google.cloud.apihub.v1.Range.start:type_name -> google.cloud.apihub.v1.Point
	47,  // 87: google.cloud.apihub.v1.Range.end:type_name -> google.cloud.apihub.v1.Point
	92,  // 88: google.cloud.apihub.v1.OperationMetadata.create_time:type_name -> google.protobuf.Timestamp
	92,  // 89: google.cloud.apihub.v1.OperationMetadata.end_time:type_name -> google.protobuf.Timestamp
	92,  // 90: google.cloud.apihub.v1.ApiHubInstance.create_time:type_name -> google.protobuf.Timestamp
	92,  // 91: google.cloud.apihub.v1.ApiHubInstance.update_time:type_name -> google.protobuf.Timestamp
	15,  // 92: google.cloud.apihub.v1.ApiHubInstance.state:type_name -> google.cloud.apihub.v1.ApiHubInstance.State
	72,  // 93: google.cloud.apihub.v1.ApiHubInstance.config:type_name -> google.cloud.apihub.v1.ApiHubInstance.Config
	73,  // 94: google.cloud.apihub.v1.ApiHubInstance.labels:type_name -> google.cloud.apihub.v1.ApiHubInstance.LabelsEntry
	39,  // 95: google.cloud.apihub.v1.ExternalApi.documentation:type_name -> google.cloud.apihub.v1.Documentation
	74,  // 96: google.cloud.apihub.v1.ExternalApi.attributes:type_name -> google.cloud.apihub.v1.ExternalApi.AttributesEntry
	92,  // 97: google.cloud.apihub.v1.ExternalApi.create_time:type_name -> google.protobuf.Timestamp
	92,  // 98: google.cloud.apihub.v1.ExternalApi.update_time:type_name -> google.protobuf.Timestamp
	17,  // 99: google.cloud.apihub.v1.ConfigVariableTemplate.value_type:type_name -> google.cloud.apihub.v1.ConfigVariableTemplate.ValueType
	51,  // 100: google.cloud.apihub.v1.ConfigVariableTemplate.enum_options:type_name -> google.cloud.apihub.v1.ConfigValueOption
	51,  // 101: google.cloud.apihub.v1.ConfigVariableTemplate.multi_select_options:type_name -> google.cloud.apihub.v1.ConfigValueOption
	52,  // 102: google.cloud.apihub.v1.ConfigVariable.secret_value:type_name -> google.cloud.apihub.v1.Secret
	51,  // 103: google.cloud.apihub.v1.ConfigVariable.enum_value:type_name -> google.cloud.apihub.v1.ConfigValueOption
	75,  // 104: google.cloud.apihub.v1.ConfigVariable.multi_select_values:type_name -> google.cloud.apihub.v1.ConfigVariable.MultiSelectValues
	76,  // 105: google.cloud.apihub.v1.ConfigVariable.multi_string_values:type_name -> google.cloud.apihub.v1.ConfigVariable.MultiStringValues
	77,  // 106: google.cloud.apihub.v1.ConfigVariable.multi_int_values:type_name -> google.cloud.apihub.v1.ConfigVariable.MultiIntValues
	55,  // 107: google.cloud.apihub.v1.AuthConfig.google_service_account_config:type_name -> google.cloud.apihub.v1.GoogleServiceAccountConfig
	78,  // 108: google.cloud.apihub.v1.AuthConfig.user_password_config:type_name -> google.cloud.apihub.v1.AuthConfig.UserPasswordConfig
	80,  // 109: google.cloud.apihub.v1.AuthConfig.api_key_config:type_name -> google.cloud.apihub.v1.AuthConfig.ApiKeyConfig
	79,  // 110: google.cloud.apihub.v1.AuthConfig.oauth2_client_credentials_config:type_name -> google.cloud.apihub.v1.AuthConfig.Oauth2ClientCredentialsConfig
	3,   // 111: google.cloud.apihub.v1.AuthConfig.auth_type:type_name -> google.cloud.apihub.v1.AuthType
	81,  // 112: google.cloud.apihub.v1.SourceMetadata.plugin_instance_action_source:type_name -> google.cloud.apihub.v1.SourceMetadata.PluginInstanceActionSource
	19,  // 113: google.cloud.apihub.v1.SourceMetadata.source_type:type_name -> google.cloud.apihub.v1.SourceMetadata.SourceType
	92,  // 114: google.cloud.apihub.v1.SourceMetadata.original_resource_create_time:type_name -> google.protobuf.Timestamp
	92,  // 115: google.cloud.apihub.v1.SourceMetadata.original_resource_update_time:type_name -> google.protobuf.Timestamp
	20,  // 116: google.cloud.apihub.v1.DiscoveredApiObservation.style:type_name -> google.cloud.apihub.v1.DiscoveredApiObservation.Style
	92,  // 117: google.cloud.apihub.v1.DiscoveredApiObservation.last_event_detected_time:type_name -> google.protobuf.Timestamp
	21,  // 118: google.cloud.apihub.v1.DiscoveredApiObservation.source_types:type_name -> google.cloud.apihub.v1.DiscoveredApiObservation.SourceType
	92,  // 119: google.cloud.apihub.v1.DiscoveredApiObservation.create_time:type_name -> google.protobuf.Timestamp
	92,  // 120: google.cloud.apihub.v1.DiscoveredApiObservation.update_time:type_name -> google.protobuf.Timestamp
	57,  // 121: google.cloud.apihub.v1.DiscoveredApiObservation.source_metadata:type_name -> google.cloud.apihub.v1.SourceMetadata
	60,  // 122: google.cloud.apihub.v1.DiscoveredApiOperation.http_operation:type_name -> google.cloud.apihub.v1.HttpOperationDetails
	92,  // 123: google.cloud.apihub.v1.DiscoveredApiOperation.first_seen_time:type_name -> google.protobuf.Timestamp
	92,  // 124: google.cloud.apihub.v1.DiscoveredApiOperation.last_seen_time:type_name -> google.protobuf.Timestamp
	22,  // 125: google.cloud.apihub.v1.DiscoveredApiOperation.classification:type_name -> google.cloud.apihub.v1.DiscoveredApiOperation.Classification
	82,  // 126: google.cloud.apihub.v1.DiscoveredApiOperation.match_results:type_name -> google.cloud.apihub.v1.DiscoveredApiOperation.MatchResult
	57,  // 127: google.cloud.apihub.v1.DiscoveredApiOperation.source_metadata:type_name -> google.cloud.apihub.v1.SourceMetadata
	92,  // 128: google.cloud.apihub.v1.DiscoveredApiOperation.create_time:type_name -> google.protobuf.Timestamp
	92,  // 129: google.cloud.apihub.v1.DiscoveredApiOperation.update_time:type_name -> google.protobuf.Timestamp
	35,  // 130: google.cloud.apihub.v1.HttpOperationDetails.http_operation:type_name -> google.cloud.apihub.v1.HttpOperation
	83,  // 131: google.cloud.apihub.v1.HttpOperationDetails.path_params:type_name -> google.cloud.apihub.v1.HttpOperationDetails.PathParam
	88,  // 132: google.cloud.apihub.v1.HttpOperationDetails.query_params:type_name -> google.cloud.apihub.v1.HttpOperationDetails.QueryParamsEntry
	86,  // 133: google.cloud.apihub.v1.HttpOperationDetails.request:type_name -> google.cloud.apihub.v1.HttpOperationDetails.HttpRequest
	87,  // 134: google.cloud.apihub.v1.HttpOperationDetails.response:type_name -> google.cloud.apihub.v1.HttpOperationDetails.HttpResponse
	40,  // 135: google.cloud.apihub.v1.Api.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 136: google.cloud.apihub.v1.Version.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 137: google.cloud.apihub.v1.Spec.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 138: google.cloud.apihub.v1.Deployment.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 139: google.cloud.apihub.v1.ApiOperation.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	40,  // 140: google.cloud.apihub.v1.Definition.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	67,  // 141: google.cloud.apihub.v1.AttributeValues.EnumAttributeValues.values:type_name -> google.cloud.apihub.v1.Attribute.AllowedValue
	40,  // 142: google.cloud.apihub.v1.Dependency.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	2,   // 143: google.cloud.apihub.v1.LintResponse.SummaryEntry.severity:type_name -> google.cloud.apihub.v1.Severity
	16,  // 144: google.cloud.apihub.v1.ApiHubInstance.Config.encryption_type:type_name -> google.cloud.apihub.v1.ApiHubInstance.Config.EncryptionType
	40,  // 145: google.cloud.apihub.v1.ExternalApi.AttributesEntry.value:type_name -> google.cloud.apihub.v1.AttributeValues
	51,  // 146: google.cloud.apihub.v1.ConfigVariable.MultiSelectValues.values:type_name -> google.cloud.apihub.v1.ConfigValueOption
	52,  // 147: google.cloud.apihub.v1.AuthConfig.UserPasswordConfig.password:type_name -> google.cloud.apihub.v1.Secret
	52,  // 148: google.cloud.apihub.v1.AuthConfig.Oauth2ClientCredentialsConfig.client_secret:type_name -> google.cloud.apihub.v1.Secret
	52,  // 149: google.cloud.apihub.v1.AuthConfig.ApiKeyConfig.api_key:type_name -> google.cloud.apihub.v1.Secret
	18,  // 150: google.cloud.apihub.v1.AuthConfig.ApiKeyConfig.http_element_location:type_name -> google.cloud.apihub.v1.AuthConfig.ApiKeyConfig.HttpElementLocation
	23,  // 151: google.cloud.apihub.v1.HttpOperationDetails.PathParam.data_type:type_name -> google.cloud.apihub.v1.HttpOperationDetails.DataType
	23,  // 152: google.cloud.apihub.v1.HttpOperationDetails.QueryParam.data_type:type_name -> google.cloud.apihub.v1.HttpOperationDetails.DataType
	23,  // 153: google.cloud.apihub.v1.HttpOperationDetails.Header.data_type:type_name -> google.cloud.apihub.v1.HttpOperationDetails.DataType
	89,  // 154: google.cloud.apihub.v1.HttpOperationDetails.HttpRequest.headers:type_name -> google.cloud.apihub.v1.HttpOperationDetails.HttpRequest.HeadersEntry
	90,  // 155: google.cloud.apihub.v1.HttpOperationDetails.HttpResponse.headers:type_name -> google.cloud.apihub.v1.HttpOperationDetails.HttpResponse.HeadersEntry
	91,  // 156: google.cloud.apihub.v1.HttpOperationDetails.HttpResponse.response_codes:type_name -> google.cloud.apihub.v1.HttpOperationDetails.HttpResponse.ResponseCodesEntry
	84,  // 157: google.cloud.apihub.v1.HttpOperationDetails.QueryParamsEntry.value:type_name -> google.cloud.apihub.v1.HttpOperationDetails.QueryParam
	85,  // 158: google.cloud.apihub.v1.HttpOperationDetails.HttpRequest.HeadersEntry.value:type_name -> google.cloud.apihub.v1.HttpOperationDetails.Header
	85,  // 159: google.cloud.apihub.v1.HttpOperationDetails.HttpResponse.HeadersEntry.value:type_name -> google.cloud.apihub.v1.HttpOperationDetails.Header
	160, // [160:160] is the sub-list for method output_type
	160, // [160:160] is the sub-list for method input_type
	160, // [160:160] is the sub-list for extension type_name
	160, // [160:160] is the sub-list for extension extendee
	0,   // [0:160] is the sub-list for field type_name
}

func init() { file_google_cloud_apihub_v1_common_fields_proto_init() }
func file_google_cloud_apihub_v1_common_fields_proto_init() {
	if File_google_cloud_apihub_v1_common_fields_proto != nil {
		return
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[5].OneofWrappers = []any{
		(*Definition_Schema)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[8].OneofWrappers = []any{
		(*SpecDetails_OpenApiSpecDetails)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[10].OneofWrappers = []any{
		(*OperationDetails_HttpOperation)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[16].OneofWrappers = []any{
		(*AttributeValues_EnumValues)(nil),
		(*AttributeValues_StringValues)(nil),
		(*AttributeValues_JsonValues)(nil),
		(*AttributeValues_UriValues)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[18].OneofWrappers = []any{
		(*DependencyEntityReference_OperationResourceName)(nil),
		(*DependencyEntityReference_ExternalApiResourceName)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[30].OneofWrappers = []any{
		(*ConfigVariable_StringValue)(nil),
		(*ConfigVariable_IntValue)(nil),
		(*ConfigVariable_BoolValue)(nil),
		(*ConfigVariable_SecretValue)(nil),
		(*ConfigVariable_EnumValue)(nil),
		(*ConfigVariable_MultiSelectValues_)(nil),
		(*ConfigVariable_MultiStringValues_)(nil),
		(*ConfigVariable_MultiIntValues_)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[32].OneofWrappers = []any{
		(*AuthConfig_GoogleServiceAccountConfig)(nil),
		(*AuthConfig_UserPasswordConfig_)(nil),
		(*AuthConfig_ApiKeyConfig_)(nil),
		(*AuthConfig_Oauth2ClientCredentialsConfig_)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[33].OneofWrappers = []any{
		(*SourceMetadata_PluginInstanceActionSource_)(nil),
	}
	file_google_cloud_apihub_v1_common_fields_proto_msgTypes[35].OneofWrappers = []any{
		(*DiscoveredApiOperation_HttpOperation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_apihub_v1_common_fields_proto_rawDesc,
			NumEnums:      24,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_apihub_v1_common_fields_proto_goTypes,
		DependencyIndexes: file_google_cloud_apihub_v1_common_fields_proto_depIdxs,
		EnumInfos:         file_google_cloud_apihub_v1_common_fields_proto_enumTypes,
		MessageInfos:      file_google_cloud_apihub_v1_common_fields_proto_msgTypes,
	}.Build()
	File_google_cloud_apihub_v1_common_fields_proto = out.File
	file_google_cloud_apihub_v1_common_fields_proto_rawDesc = nil
	file_google_cloud_apihub_v1_common_fields_proto_goTypes = nil
	file_google_cloud_apihub_v1_common_fields_proto_depIdxs = nil
}
