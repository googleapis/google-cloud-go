// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/apihub/v1/collect_service.proto

package apihubpb

import (
	reflect "reflect"
	sync "sync"

	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of the collect request.
type CollectionType int32

const (
	// The default value. This value is used if the collection type is omitted.
	CollectionType_COLLECTION_TYPE_UNSPECIFIED CollectionType = 0
	// The collection type is upsert. This should be used when an API is created
	// or updated at the source.
	CollectionType_COLLECTION_TYPE_UPSERT CollectionType = 1
	// The collection type is delete. This should be used when an API is deleted
	// at the source.
	CollectionType_COLLECTION_TYPE_DELETE CollectionType = 2
)

// Enum value maps for CollectionType.
var (
	CollectionType_name = map[int32]string{
		0: "COLLECTION_TYPE_UNSPECIFIED",
		1: "COLLECTION_TYPE_UPSERT",
		2: "COLLECTION_TYPE_DELETE",
	}
	CollectionType_value = map[string]int32{
		"COLLECTION_TYPE_UNSPECIFIED": 0,
		"COLLECTION_TYPE_UPSERT":      1,
		"COLLECTION_TYPE_DELETE":      2,
	}
)

func (x CollectionType) Enum() *CollectionType {
	p := new(CollectionType)
	*p = x
	return p
}

func (x CollectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_apihub_v1_collect_service_proto_enumTypes[0].Descriptor()
}

func (CollectionType) Type() protoreflect.EnumType {
	return &file_google_cloud_apihub_v1_collect_service_proto_enumTypes[0]
}

func (x CollectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectionType.Descriptor instead.
func (CollectionType) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{0}
}

// The CollectApiData method's request.
type CollectApiDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The regional location of the API hub instance and its resources.
	// Format: `projects/{project}/locations/{location}`
	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// Required. The type of collection. Applies to all entries in
	// [api_data][google.cloud.apihub.v1.CollectApiDataRequest.api_data].
	CollectionType CollectionType `protobuf:"varint,2,opt,name=collection_type,json=collectionType,proto3,enum=google.cloud.apihub.v1.CollectionType" json:"collection_type,omitempty"`
	// Required. The plugin instance collecting the API data.
	// Format:
	// `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`.
	PluginInstance string `protobuf:"bytes,3,opt,name=plugin_instance,json=pluginInstance,proto3" json:"plugin_instance,omitempty"`
	// Required. The action ID to be used for collecting the API data.
	// This should map to one of the action IDs specified
	// in action configs in the plugin.
	ActionId string `protobuf:"bytes,4,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// Required. The API data to be collected.
	ApiData *ApiData `protobuf:"bytes,5,opt,name=api_data,json=apiData,proto3" json:"api_data,omitempty"`
}

func (x *CollectApiDataRequest) Reset() {
	*x = CollectApiDataRequest{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectApiDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectApiDataRequest) ProtoMessage() {}

func (x *CollectApiDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectApiDataRequest.ProtoReflect.Descriptor instead.
func (*CollectApiDataRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{0}
}

func (x *CollectApiDataRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CollectApiDataRequest) GetCollectionType() CollectionType {
	if x != nil {
		return x.CollectionType
	}
	return CollectionType_COLLECTION_TYPE_UNSPECIFIED
}

func (x *CollectApiDataRequest) GetPluginInstance() string {
	if x != nil {
		return x.PluginInstance
	}
	return ""
}

func (x *CollectApiDataRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *CollectApiDataRequest) GetApiData() *ApiData {
	if x != nil {
		return x.ApiData
	}
	return nil
}

// The API data to be collected.
type ApiData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The data to be collected.
	//
	// Types that are assignable to Data:
	//
	//	*ApiData_ApiMetadataList
	Data isApiData_Data `protobuf_oneof:"Data"`
}

func (x *ApiData) Reset() {
	*x = ApiData{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiData) ProtoMessage() {}

func (x *ApiData) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiData.ProtoReflect.Descriptor instead.
func (*ApiData) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{1}
}

func (m *ApiData) GetData() isApiData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ApiData) GetApiMetadataList() *ApiMetadataList {
	if x, ok := x.GetData().(*ApiData_ApiMetadataList); ok {
		return x.ApiMetadataList
	}
	return nil
}

type isApiData_Data interface {
	isApiData_Data()
}

type ApiData_ApiMetadataList struct {
	// Optional. The list of API metadata.
	ApiMetadataList *ApiMetadataList `protobuf:"bytes,1,opt,name=api_metadata_list,json=apiMetadataList,proto3,oneof"`
}

func (*ApiData_ApiMetadataList) isApiData_Data() {}

// The message to hold repeated API metadata.
type ApiMetadataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The list of API metadata.
	ApiMetadata []*APIMetadata `protobuf:"bytes,1,rep,name=api_metadata,json=apiMetadata,proto3" json:"api_metadata,omitempty"`
}

func (x *ApiMetadataList) Reset() {
	*x = ApiMetadataList{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiMetadataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiMetadataList) ProtoMessage() {}

func (x *ApiMetadataList) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiMetadataList.ProtoReflect.Descriptor instead.
func (*ApiMetadataList) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{2}
}

func (x *ApiMetadataList) GetApiMetadata() []*APIMetadata {
	if x != nil {
		return x.ApiMetadata
	}
	return nil
}

// The API metadata.
type APIMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The API resource to be pushed to Hub's collect layer. The ID of
	// the API resource will be generated by Hub to ensure uniqueness across all
	// APIs across systems.
	Api *Api `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Optional. The list of versions present in an API resource.
	Versions []*VersionMetadata `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
	// Optional. The unique identifier of the API in the system where it was
	// originally created.
	OriginalId string `protobuf:"bytes,3,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`
	// Optional. Timestamp indicating when the API was created at the source.
	OriginalCreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=original_create_time,json=originalCreateTime,proto3" json:"original_create_time,omitempty"`
	// Required. Timestamp indicating when the API was last updated at the source.
	OriginalUpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=original_update_time,json=originalUpdateTime,proto3" json:"original_update_time,omitempty"`
}

func (x *APIMetadata) Reset() {
	*x = APIMetadata{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIMetadata) ProtoMessage() {}

func (x *APIMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIMetadata.ProtoReflect.Descriptor instead.
func (*APIMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{3}
}

func (x *APIMetadata) GetApi() *Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *APIMetadata) GetVersions() []*VersionMetadata {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *APIMetadata) GetOriginalId() string {
	if x != nil {
		return x.OriginalId
	}
	return ""
}

func (x *APIMetadata) GetOriginalCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalCreateTime
	}
	return nil
}

func (x *APIMetadata) GetOriginalUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalUpdateTime
	}
	return nil
}

// The metadata associated with a version of the API resource.
type VersionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Represents a version of the API resource in API hub. The ID of
	// the version will be generated by Hub.
	Version *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Optional. The specs associated with this version.
	// Note that an API version can be associated with multiple specs.
	Specs []*SpecMetadata `protobuf:"bytes,2,rep,name=specs,proto3" json:"specs,omitempty"`
	// Optional. The deployments linked to this API version.
	// Note: A particular API version could be deployed to multiple deployments
	// (for dev deployment, UAT deployment, etc.)
	Deployments []*DeploymentMetadata `protobuf:"bytes,4,rep,name=deployments,proto3" json:"deployments,omitempty"`
	// Optional. The unique identifier of the version in the system where it was
	// originally created.
	OriginalId string `protobuf:"bytes,5,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`
	// Optional. Timestamp indicating when the version was created at the source.
	OriginalCreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=original_create_time,json=originalCreateTime,proto3" json:"original_create_time,omitempty"`
	// Required. Timestamp indicating when the version was last updated at the
	// source.
	OriginalUpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=original_update_time,json=originalUpdateTime,proto3" json:"original_update_time,omitempty"`
}

func (x *VersionMetadata) Reset() {
	*x = VersionMetadata{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionMetadata) ProtoMessage() {}

func (x *VersionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionMetadata.ProtoReflect.Descriptor instead.
func (*VersionMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{4}
}

func (x *VersionMetadata) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *VersionMetadata) GetSpecs() []*SpecMetadata {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *VersionMetadata) GetDeployments() []*DeploymentMetadata {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *VersionMetadata) GetOriginalId() string {
	if x != nil {
		return x.OriginalId
	}
	return ""
}

func (x *VersionMetadata) GetOriginalCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalCreateTime
	}
	return nil
}

func (x *VersionMetadata) GetOriginalUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalUpdateTime
	}
	return nil
}

// The metadata associated with a spec of the API version.
type SpecMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The spec resource to be pushed to Hub's collect layer. The ID of
	// the spec will be generated by Hub.
	Spec *Spec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// Optional. The unique identifier of the spec in the system where it was
	// originally created.
	OriginalId string `protobuf:"bytes,2,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`
	// Optional. Timestamp indicating when the spec was created at the source.
	OriginalCreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=original_create_time,json=originalCreateTime,proto3" json:"original_create_time,omitempty"`
	// Required. Timestamp indicating when the spec was last updated at the
	// source.
	OriginalUpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=original_update_time,json=originalUpdateTime,proto3" json:"original_update_time,omitempty"`
}

func (x *SpecMetadata) Reset() {
	*x = SpecMetadata{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecMetadata) ProtoMessage() {}

func (x *SpecMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecMetadata.ProtoReflect.Descriptor instead.
func (*SpecMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{5}
}

func (x *SpecMetadata) GetSpec() *Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *SpecMetadata) GetOriginalId() string {
	if x != nil {
		return x.OriginalId
	}
	return ""
}

func (x *SpecMetadata) GetOriginalCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalCreateTime
	}
	return nil
}

func (x *SpecMetadata) GetOriginalUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalUpdateTime
	}
	return nil
}

// The metadata associated with a deployment.
type DeploymentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The deployment resource to be pushed to Hub's collect layer. The
	// ID of the deployment will be generated by Hub.
	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// Optional. The unique identifier of the deployment in the system where it
	// was originally created.
	OriginalId string `protobuf:"bytes,2,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`
	// Optional. Timestamp indicating when the deployment was created at the
	// source.
	OriginalCreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=original_create_time,json=originalCreateTime,proto3" json:"original_create_time,omitempty"`
	// Required. Timestamp indicating when the deployment was last updated at the
	// source.
	OriginalUpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=original_update_time,json=originalUpdateTime,proto3" json:"original_update_time,omitempty"`
}

func (x *DeploymentMetadata) Reset() {
	*x = DeploymentMetadata{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentMetadata) ProtoMessage() {}

func (x *DeploymentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentMetadata.ProtoReflect.Descriptor instead.
func (*DeploymentMetadata) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeploymentMetadata) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *DeploymentMetadata) GetOriginalId() string {
	if x != nil {
		return x.OriginalId
	}
	return ""
}

func (x *DeploymentMetadata) GetOriginalCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalCreateTime
	}
	return nil
}

func (x *DeploymentMetadata) GetOriginalUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalUpdateTime
	}
	return nil
}

// The CollectApiData method's response.
type CollectApiDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CollectApiDataResponse) Reset() {
	*x = CollectApiDataResponse{}
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectApiDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectApiDataResponse) ProtoMessage() {}

func (x *CollectApiDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_apihub_v1_collect_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectApiDataResponse.ProtoReflect.Descriptor instead.
func (*CollectApiDataResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP(), []int{7}
}

var File_google_cloud_apihub_v1_collect_service_proto protoreflect.FileDescriptor

var file_google_cloud_apihub_v1_collect_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x6c, 0x6f,
	0x6e, 0x67, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x02, 0x0a, 0x15,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x23, 0x0a,
	0x21, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x0f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x55, 0x0a, 0x0f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x26, 0x0a, 0x24, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x61,
	0x70, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x61, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x07,
	0x41, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x11, 0x61, 0x70, 0x69, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x48, 0x00, 0x52, 0x0f, 0x61, 0x70, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x0f, 0x41,
	0x70, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b,
	0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50,
	0x49, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b,
	0x61, 0x70, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x02, 0x0a, 0x0b,
	0x41, 0x50, 0x49, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x03, 0x61,
	0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x69, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12,
	0x48, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x51, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x12,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb1, 0x03, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a,
	0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x0c, 0x53, 0x70,
	0x65, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa9, 0x02,
	0x0a, 0x12, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0x69, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x53, 0x45, 0x52, 0x54,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x32, 0xcf,
	0x02, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0xf2, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x6e, 0x67,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x91, 0x01, 0xca, 0x41, 0x2b, 0x0a, 0x16, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x41, 0x70, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xda, 0x41, 0x21, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2c, 0x61, 0x70,
	0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x3a, 0x01, 0x2a, 0x22,
	0x34, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x2a, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70,
	0x69, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x49, 0xca, 0x41, 0x15, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0xd2,
	0x41, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x42, 0xb5, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x42,
	0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x68,
	0x75, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x70,
	0x62, 0x3b, 0x61, 0x70, 0x69, 0x68, 0x75, 0x62, 0x70, 0x62, 0xaa, 0x02, 0x16, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x5c, 0x41, 0x70, 0x69, 0x48, 0x75, 0x62, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x19, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x41, 0x70,
	0x69, 0x48, 0x75, 0x62, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_apihub_v1_collect_service_proto_rawDescOnce sync.Once
	file_google_cloud_apihub_v1_collect_service_proto_rawDescData = file_google_cloud_apihub_v1_collect_service_proto_rawDesc
)

func file_google_cloud_apihub_v1_collect_service_proto_rawDescGZIP() []byte {
	file_google_cloud_apihub_v1_collect_service_proto_rawDescOnce.Do(func() {
		file_google_cloud_apihub_v1_collect_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_apihub_v1_collect_service_proto_rawDescData)
	})
	return file_google_cloud_apihub_v1_collect_service_proto_rawDescData
}

var file_google_cloud_apihub_v1_collect_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_cloud_apihub_v1_collect_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_google_cloud_apihub_v1_collect_service_proto_goTypes = []any{
	(CollectionType)(0),             // 0: google.cloud.apihub.v1.CollectionType
	(*CollectApiDataRequest)(nil),   // 1: google.cloud.apihub.v1.CollectApiDataRequest
	(*ApiData)(nil),                 // 2: google.cloud.apihub.v1.ApiData
	(*ApiMetadataList)(nil),         // 3: google.cloud.apihub.v1.ApiMetadataList
	(*APIMetadata)(nil),             // 4: google.cloud.apihub.v1.APIMetadata
	(*VersionMetadata)(nil),         // 5: google.cloud.apihub.v1.VersionMetadata
	(*SpecMetadata)(nil),            // 6: google.cloud.apihub.v1.SpecMetadata
	(*DeploymentMetadata)(nil),      // 7: google.cloud.apihub.v1.DeploymentMetadata
	(*CollectApiDataResponse)(nil),  // 8: google.cloud.apihub.v1.CollectApiDataResponse
	(*Api)(nil),                     // 9: google.cloud.apihub.v1.Api
	(*timestamppb.Timestamp)(nil),   // 10: google.protobuf.Timestamp
	(*Version)(nil),                 // 11: google.cloud.apihub.v1.Version
	(*Spec)(nil),                    // 12: google.cloud.apihub.v1.Spec
	(*Deployment)(nil),              // 13: google.cloud.apihub.v1.Deployment
	(*longrunningpb.Operation)(nil), // 14: google.longrunning.Operation
}
var file_google_cloud_apihub_v1_collect_service_proto_depIdxs = []int32{
	0,  // 0: google.cloud.apihub.v1.CollectApiDataRequest.collection_type:type_name -> google.cloud.apihub.v1.CollectionType
	2,  // 1: google.cloud.apihub.v1.CollectApiDataRequest.api_data:type_name -> google.cloud.apihub.v1.ApiData
	3,  // 2: google.cloud.apihub.v1.ApiData.api_metadata_list:type_name -> google.cloud.apihub.v1.ApiMetadataList
	4,  // 3: google.cloud.apihub.v1.ApiMetadataList.api_metadata:type_name -> google.cloud.apihub.v1.APIMetadata
	9,  // 4: google.cloud.apihub.v1.APIMetadata.api:type_name -> google.cloud.apihub.v1.Api
	5,  // 5: google.cloud.apihub.v1.APIMetadata.versions:type_name -> google.cloud.apihub.v1.VersionMetadata
	10, // 6: google.cloud.apihub.v1.APIMetadata.original_create_time:type_name -> google.protobuf.Timestamp
	10, // 7: google.cloud.apihub.v1.APIMetadata.original_update_time:type_name -> google.protobuf.Timestamp
	11, // 8: google.cloud.apihub.v1.VersionMetadata.version:type_name -> google.cloud.apihub.v1.Version
	6,  // 9: google.cloud.apihub.v1.VersionMetadata.specs:type_name -> google.cloud.apihub.v1.SpecMetadata
	7,  // 10: google.cloud.apihub.v1.VersionMetadata.deployments:type_name -> google.cloud.apihub.v1.DeploymentMetadata
	10, // 11: google.cloud.apihub.v1.VersionMetadata.original_create_time:type_name -> google.protobuf.Timestamp
	10, // 12: google.cloud.apihub.v1.VersionMetadata.original_update_time:type_name -> google.protobuf.Timestamp
	12, // 13: google.cloud.apihub.v1.SpecMetadata.spec:type_name -> google.cloud.apihub.v1.Spec
	10, // 14: google.cloud.apihub.v1.SpecMetadata.original_create_time:type_name -> google.protobuf.Timestamp
	10, // 15: google.cloud.apihub.v1.SpecMetadata.original_update_time:type_name -> google.protobuf.Timestamp
	13, // 16: google.cloud.apihub.v1.DeploymentMetadata.deployment:type_name -> google.cloud.apihub.v1.Deployment
	10, // 17: google.cloud.apihub.v1.DeploymentMetadata.original_create_time:type_name -> google.protobuf.Timestamp
	10, // 18: google.cloud.apihub.v1.DeploymentMetadata.original_update_time:type_name -> google.protobuf.Timestamp
	1,  // 19: google.cloud.apihub.v1.ApiHubCollect.CollectApiData:input_type -> google.cloud.apihub.v1.CollectApiDataRequest
	14, // 20: google.cloud.apihub.v1.ApiHubCollect.CollectApiData:output_type -> google.longrunning.Operation
	20, // [20:21] is the sub-list for method output_type
	19, // [19:20] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_google_cloud_apihub_v1_collect_service_proto_init() }
func file_google_cloud_apihub_v1_collect_service_proto_init() {
	if File_google_cloud_apihub_v1_collect_service_proto != nil {
		return
	}
	file_google_cloud_apihub_v1_common_fields_proto_init()
	file_google_cloud_apihub_v1_collect_service_proto_msgTypes[1].OneofWrappers = []any{
		(*ApiData_ApiMetadataList)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_apihub_v1_collect_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_cloud_apihub_v1_collect_service_proto_goTypes,
		DependencyIndexes: file_google_cloud_apihub_v1_collect_service_proto_depIdxs,
		EnumInfos:         file_google_cloud_apihub_v1_collect_service_proto_enumTypes,
		MessageInfos:      file_google_cloud_apihub_v1_collect_service_proto_msgTypes,
	}.Build()
	File_google_cloud_apihub_v1_collect_service_proto = out.File
	file_google_cloud_apihub_v1_collect_service_proto_rawDesc = nil
	file_google_cloud_apihub_v1_collect_service_proto_goTypes = nil
	file_google_cloud_apihub_v1_collect_service_proto_depIdxs = nil
}
