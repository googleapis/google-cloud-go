// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/bigquery/v2/external_catalog_table_options.proto

package bigquerypb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Metadata about open source compatible table. The fields contained in
// these options correspond to Hive metastore's table-level properties.
type ExternalCatalogTableOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. A map of the key-value pairs defining the parameters and
	// properties of the open source table. Corresponds with Hive metastore table
	// parameters. Maximum size of 4MiB.
	Parameters map[string]string `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. A storage descriptor containing information about the physical
	// storage of this table.
	StorageDescriptor *StorageDescriptor `protobuf:"bytes,2,opt,name=storage_descriptor,json=storageDescriptor,proto3" json:"storage_descriptor,omitempty"`
	// Optional. A connection ID that specifies the credentials to be used to read
	// external storage, such as Azure Blob, Cloud Storage, or Amazon S3. This
	// connection is needed to read the open source table from BigQuery. The
	// connection_id format must be either
	// `<project_id>.<location_id>.<connection_id>` or
	// `projects/<project_id>/locations/<location_id>/connections/<connection_id>`.
	ConnectionId string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *ExternalCatalogTableOptions) Reset() {
	*x = ExternalCatalogTableOptions{}
	mi := &file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalCatalogTableOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalCatalogTableOptions) ProtoMessage() {}

func (x *ExternalCatalogTableOptions) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalCatalogTableOptions.ProtoReflect.Descriptor instead.
func (*ExternalCatalogTableOptions) Descriptor() ([]byte, []int) {
	return file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescGZIP(), []int{0}
}

func (x *ExternalCatalogTableOptions) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExternalCatalogTableOptions) GetStorageDescriptor() *StorageDescriptor {
	if x != nil {
		return x.StorageDescriptor
	}
	return nil
}

func (x *ExternalCatalogTableOptions) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// Contains information about how a table's data is stored and accessed by open
// source query engines.
type StorageDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The physical location of the table
	// (e.g. `gs://spark-dataproc-data/pangea-data/case_sensitive/` or
	// `gs://spark-dataproc-data/pangea-data/*`).
	// The maximum length is 2056 bytes.
	LocationUri string `protobuf:"bytes,1,opt,name=location_uri,json=locationUri,proto3" json:"location_uri,omitempty"`
	// Optional. Specifies the fully qualified class name of the InputFormat
	// (e.g. "org.apache.hadoop.hive.ql.io.orc.OrcInputFormat").
	// The maximum length is 128 characters.
	InputFormat string `protobuf:"bytes,2,opt,name=input_format,json=inputFormat,proto3" json:"input_format,omitempty"`
	// Optional. Specifies the fully qualified class name of the OutputFormat
	// (e.g. "org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat").
	// The maximum length is 128 characters.
	OutputFormat string `protobuf:"bytes,3,opt,name=output_format,json=outputFormat,proto3" json:"output_format,omitempty"`
	// Optional. Serializer and deserializer information.
	SerdeInfo *SerDeInfo `protobuf:"bytes,4,opt,name=serde_info,json=serdeInfo,proto3" json:"serde_info,omitempty"`
}

func (x *StorageDescriptor) Reset() {
	*x = StorageDescriptor{}
	mi := &file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDescriptor) ProtoMessage() {}

func (x *StorageDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDescriptor.ProtoReflect.Descriptor instead.
func (*StorageDescriptor) Descriptor() ([]byte, []int) {
	return file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescGZIP(), []int{1}
}

func (x *StorageDescriptor) GetLocationUri() string {
	if x != nil {
		return x.LocationUri
	}
	return ""
}

func (x *StorageDescriptor) GetInputFormat() string {
	if x != nil {
		return x.InputFormat
	}
	return ""
}

func (x *StorageDescriptor) GetOutputFormat() string {
	if x != nil {
		return x.OutputFormat
	}
	return ""
}

func (x *StorageDescriptor) GetSerdeInfo() *SerDeInfo {
	if x != nil {
		return x.SerdeInfo
	}
	return nil
}

// Serializer and deserializer information.
type SerDeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Name of the SerDe.
	// The maximum length is 256 characters.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Specifies a fully-qualified class name of the serialization
	// library that is responsible for the translation of data between table
	// representation and the underlying low-level input and output format
	// structures. The maximum length is 256 characters.
	SerializationLibrary string `protobuf:"bytes,2,opt,name=serialization_library,json=serializationLibrary,proto3" json:"serialization_library,omitempty"`
	// Optional. Key-value pairs that define the initialization parameters for the
	// serialization library.
	// Maximum size 10 Kib.
	Parameters map[string]string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SerDeInfo) Reset() {
	*x = SerDeInfo{}
	mi := &file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SerDeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerDeInfo) ProtoMessage() {}

func (x *SerDeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerDeInfo.ProtoReflect.Descriptor instead.
func (*SerDeInfo) Descriptor() ([]byte, []int) {
	return file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescGZIP(), []int{2}
}

func (x *SerDeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SerDeInfo) GetSerializationLibrary() string {
	if x != nil {
		return x.SerializationLibrary
	}
	return ""
}

func (x *SerDeInfo) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

var File_google_cloud_bigquery_v2_external_catalog_table_options_proto protoreflect.FileDescriptor

var file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x69,
	0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x02, 0x0a, 0x1b, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6a, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x69,
	0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5f, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x62, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xd6, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x69, 0x12, 0x26,
	0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x47, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x62, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x72, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf7, 0x01, 0x0a, 0x09, 0x53, 0x65,
	0x72, 0x44, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x69,
	0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x44, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x7f, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x32, 0x42, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x67,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x62,
	0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x3b, 0x62, 0x69, 0x67, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescOnce sync.Once
	file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescData = file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDesc
)

func file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescGZIP() []byte {
	file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescOnce.Do(func() {
		file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescData)
	})
	return file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDescData
}

var file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_google_cloud_bigquery_v2_external_catalog_table_options_proto_goTypes = []any{
	(*ExternalCatalogTableOptions)(nil), // 0: google.cloud.bigquery.v2.ExternalCatalogTableOptions
	(*StorageDescriptor)(nil),           // 1: google.cloud.bigquery.v2.StorageDescriptor
	(*SerDeInfo)(nil),                   // 2: google.cloud.bigquery.v2.SerDeInfo
	nil,                                 // 3: google.cloud.bigquery.v2.ExternalCatalogTableOptions.ParametersEntry
	nil,                                 // 4: google.cloud.bigquery.v2.SerDeInfo.ParametersEntry
}
var file_google_cloud_bigquery_v2_external_catalog_table_options_proto_depIdxs = []int32{
	3, // 0: google.cloud.bigquery.v2.ExternalCatalogTableOptions.parameters:type_name -> google.cloud.bigquery.v2.ExternalCatalogTableOptions.ParametersEntry
	1, // 1: google.cloud.bigquery.v2.ExternalCatalogTableOptions.storage_descriptor:type_name -> google.cloud.bigquery.v2.StorageDescriptor
	2, // 2: google.cloud.bigquery.v2.StorageDescriptor.serde_info:type_name -> google.cloud.bigquery.v2.SerDeInfo
	4, // 3: google.cloud.bigquery.v2.SerDeInfo.parameters:type_name -> google.cloud.bigquery.v2.SerDeInfo.ParametersEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_google_cloud_bigquery_v2_external_catalog_table_options_proto_init() }
func file_google_cloud_bigquery_v2_external_catalog_table_options_proto_init() {
	if File_google_cloud_bigquery_v2_external_catalog_table_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_bigquery_v2_external_catalog_table_options_proto_goTypes,
		DependencyIndexes: file_google_cloud_bigquery_v2_external_catalog_table_options_proto_depIdxs,
		MessageInfos:      file_google_cloud_bigquery_v2_external_catalog_table_options_proto_msgTypes,
	}.Build()
	File_google_cloud_bigquery_v2_external_catalog_table_options_proto = out.File
	file_google_cloud_bigquery_v2_external_catalog_table_options_proto_rawDesc = nil
	file_google_cloud_bigquery_v2_external_catalog_table_options_proto_goTypes = nil
	file_google_cloud_bigquery_v2_external_catalog_table_options_proto_depIdxs = nil
}
