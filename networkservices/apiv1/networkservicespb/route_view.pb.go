// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/networkservices/v1/route_view.proto

package networkservicespb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GatewayRouteView defines view-only resource for Routes to a Gateway
type GatewayRouteView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Identifier. Full path name of the GatewayRouteView resource.
	// Format:
	//
	//	projects/{project_number}/locations/{location}/gateways/{gateway}/routeViews/{route_view}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. Project number where the route exists.
	RouteProjectNumber int64 `protobuf:"varint,2,opt,name=route_project_number,json=routeProjectNumber,proto3" json:"route_project_number,omitempty"`
	// Output only. Location where the route exists.
	RouteLocation string `protobuf:"bytes,3,opt,name=route_location,json=routeLocation,proto3" json:"route_location,omitempty"`
	// Output only. Type of the route: HttpRoute,GrpcRoute,TcpRoute, or TlsRoute
	RouteType string `protobuf:"bytes,4,opt,name=route_type,json=routeType,proto3" json:"route_type,omitempty"`
	// Output only. The resource id for the route.
	RouteId string `protobuf:"bytes,5,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *GatewayRouteView) Reset() {
	*x = GatewayRouteView{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayRouteView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRouteView) ProtoMessage() {}

func (x *GatewayRouteView) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRouteView.ProtoReflect.Descriptor instead.
func (*GatewayRouteView) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{0}
}

func (x *GatewayRouteView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GatewayRouteView) GetRouteProjectNumber() int64 {
	if x != nil {
		return x.RouteProjectNumber
	}
	return 0
}

func (x *GatewayRouteView) GetRouteLocation() string {
	if x != nil {
		return x.RouteLocation
	}
	return ""
}

func (x *GatewayRouteView) GetRouteType() string {
	if x != nil {
		return x.RouteType
	}
	return ""
}

func (x *GatewayRouteView) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// MeshRouteView defines view-only resource for Routes to a Mesh
type MeshRouteView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Identifier. Full path name of the MeshRouteView resource.
	// Format:
	//
	//	projects/{project}/locations/{location}/meshes/{mesh}/routeViews/{route_view}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. Project number where the route exists.
	RouteProjectNumber int64 `protobuf:"varint,2,opt,name=route_project_number,json=routeProjectNumber,proto3" json:"route_project_number,omitempty"`
	// Output only. Location where the route exists.
	RouteLocation string `protobuf:"bytes,3,opt,name=route_location,json=routeLocation,proto3" json:"route_location,omitempty"`
	// Output only. Type of the route: HttpRoute,GrpcRoute,TcpRoute, or TlsRoute
	RouteType string `protobuf:"bytes,4,opt,name=route_type,json=routeType,proto3" json:"route_type,omitempty"`
	// Output only. The resource id for the route.
	RouteId string `protobuf:"bytes,5,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *MeshRouteView) Reset() {
	*x = MeshRouteView{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshRouteView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshRouteView) ProtoMessage() {}

func (x *MeshRouteView) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshRouteView.ProtoReflect.Descriptor instead.
func (*MeshRouteView) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{1}
}

func (x *MeshRouteView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MeshRouteView) GetRouteProjectNumber() int64 {
	if x != nil {
		return x.RouteProjectNumber
	}
	return 0
}

func (x *MeshRouteView) GetRouteLocation() string {
	if x != nil {
		return x.RouteLocation
	}
	return ""
}

func (x *MeshRouteView) GetRouteType() string {
	if x != nil {
		return x.RouteType
	}
	return ""
}

func (x *MeshRouteView) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// Request used with the GetGatewayRouteView method.
type GetGatewayRouteViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Name of the GatewayRouteView resource.
	// Formats:
	//
	//	projects/{project}/locations/{location}/gateways/{gateway}/routeViews/{route_view}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetGatewayRouteViewRequest) Reset() {
	*x = GetGatewayRouteViewRequest{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayRouteViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayRouteViewRequest) ProtoMessage() {}

func (x *GetGatewayRouteViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayRouteViewRequest.ProtoReflect.Descriptor instead.
func (*GetGatewayRouteViewRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{2}
}

func (x *GetGatewayRouteViewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request used with the GetMeshRouteView method.
type GetMeshRouteViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Name of the MeshRouteView resource.
	// Format:
	//
	//	projects/{project}/locations/{location}/meshes/{mesh}/routeViews/{route_view}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetMeshRouteViewRequest) Reset() {
	*x = GetMeshRouteViewRequest{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMeshRouteViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeshRouteViewRequest) ProtoMessage() {}

func (x *GetMeshRouteViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeshRouteViewRequest.ProtoReflect.Descriptor instead.
func (*GetMeshRouteViewRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{3}
}

func (x *GetMeshRouteViewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request used with the ListGatewayRouteViews method.
type ListGatewayRouteViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The Gateway to which a Route is associated.
	// Formats:
	//
	//	projects/{project}/locations/{location}/gateways/{gateway}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Maximum number of GatewayRouteViews to return per call.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The value returned by the last `ListGatewayRouteViewsResponse`
	// Indicates that this is a continuation of a prior `ListGatewayRouteViews`
	// call, and that the system should return the next page of data.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListGatewayRouteViewsRequest) Reset() {
	*x = ListGatewayRouteViewsRequest{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGatewayRouteViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGatewayRouteViewsRequest) ProtoMessage() {}

func (x *ListGatewayRouteViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGatewayRouteViewsRequest.ProtoReflect.Descriptor instead.
func (*ListGatewayRouteViewsRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{4}
}

func (x *ListGatewayRouteViewsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListGatewayRouteViewsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGatewayRouteViewsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Request used with the ListMeshRouteViews method.
type ListMeshRouteViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The Mesh to which a Route is associated.
	// Format:
	//
	//	projects/{project}/locations/{location}/meshes/{mesh}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Maximum number of MeshRouteViews to return per call.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The value returned by the last `ListMeshRouteViewsResponse`
	// Indicates that this is a continuation of a prior `ListMeshRouteViews` call,
	// and that the system should return the next page of data.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListMeshRouteViewsRequest) Reset() {
	*x = ListMeshRouteViewsRequest{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMeshRouteViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeshRouteViewsRequest) ProtoMessage() {}

func (x *ListMeshRouteViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeshRouteViewsRequest.ProtoReflect.Descriptor instead.
func (*ListMeshRouteViewsRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{5}
}

func (x *ListMeshRouteViewsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListMeshRouteViewsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMeshRouteViewsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response returned by the ListGatewayRouteViews method.
type ListGatewayRouteViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of GatewayRouteView resources.
	GatewayRouteViews []*GatewayRouteView `protobuf:"bytes,1,rep,name=gateway_route_views,json=gatewayRouteViews,proto3" json:"gateway_route_views,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Unreachable resources. Populated when the request attempts to list all
	// resources across all supported locations, while some locations are
	// temporarily unavailable.
	Unreachable []string `protobuf:"bytes,3,rep,name=unreachable,proto3" json:"unreachable,omitempty"`
}

func (x *ListGatewayRouteViewsResponse) Reset() {
	*x = ListGatewayRouteViewsResponse{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGatewayRouteViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGatewayRouteViewsResponse) ProtoMessage() {}

func (x *ListGatewayRouteViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGatewayRouteViewsResponse.ProtoReflect.Descriptor instead.
func (*ListGatewayRouteViewsResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{6}
}

func (x *ListGatewayRouteViewsResponse) GetGatewayRouteViews() []*GatewayRouteView {
	if x != nil {
		return x.GatewayRouteViews
	}
	return nil
}

func (x *ListGatewayRouteViewsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListGatewayRouteViewsResponse) GetUnreachable() []string {
	if x != nil {
		return x.Unreachable
	}
	return nil
}

// Response returned by the ListMeshRouteViews method.
type ListMeshRouteViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of MeshRouteView resources.
	MeshRouteViews []*MeshRouteView `protobuf:"bytes,1,rep,name=mesh_route_views,json=meshRouteViews,proto3" json:"mesh_route_views,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Unreachable resources. Populated when the request attempts to list all
	// resources across all supported locations, while some locations are
	// temporarily unavailable.
	Unreachable []string `protobuf:"bytes,3,rep,name=unreachable,proto3" json:"unreachable,omitempty"`
}

func (x *ListMeshRouteViewsResponse) Reset() {
	*x = ListMeshRouteViewsResponse{}
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMeshRouteViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeshRouteViewsResponse) ProtoMessage() {}

func (x *ListMeshRouteViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_route_view_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeshRouteViewsResponse.ProtoReflect.Descriptor instead.
func (*ListMeshRouteViewsResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP(), []int{7}
}

func (x *ListMeshRouteViewsResponse) GetMeshRouteViews() []*MeshRouteView {
	if x != nil {
		return x.MeshRouteViews
	}
	return nil
}

func (x *ListMeshRouteViewsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListMeshRouteViewsResponse) GetUnreachable() []string {
	if x != nil {
		return x.Unreachable
	}
	return nil
}

var File_google_cloud_networkservices_v1_route_view_proto protoreflect.FileDescriptor

var file_google_cloud_networkservices_v1_route_view_proto_rawDesc = []byte{
	0x0a, 0x30, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x86, 0x03, 0x0a, 0x10, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x35, 0x0a, 0x14, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x12, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x3a, 0xae, 0x01, 0xea, 0x41, 0xaa, 0x01, 0x0a, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x52, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x73, 0x2f, 0x7b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x7d, 0x2a, 0x11, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x32, 0x10, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x22, 0xf5, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x73,
	0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x08,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x14, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x0e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x3a, 0xa0, 0x01,
	0xea, 0x41, 0x9c, 0x01, 0x0a, 0x2c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x4d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x6d, 0x65, 0x73, 0x68,
	0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x73, 0x68, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x7d, 0x2a, 0x0e, 0x6d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x73, 0x32, 0x0d, 0x6d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x22, 0x69, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x31, 0x0a, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2e, 0x0a, 0x2c, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x73,
	0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xab, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x37, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x31, 0x12, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa5,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x2e, 0x12, 0x2c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x13, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x11, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x68, 0x5f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0e,
	0x6d, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x42, 0xef, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x42, 0x0e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x4d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x70, 0x62, 0x3b,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x70,
	0x62, 0xaa, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x5c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_google_cloud_networkservices_v1_route_view_proto_rawDescOnce sync.Once
	file_google_cloud_networkservices_v1_route_view_proto_rawDescData = file_google_cloud_networkservices_v1_route_view_proto_rawDesc
)

func file_google_cloud_networkservices_v1_route_view_proto_rawDescGZIP() []byte {
	file_google_cloud_networkservices_v1_route_view_proto_rawDescOnce.Do(func() {
		file_google_cloud_networkservices_v1_route_view_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_networkservices_v1_route_view_proto_rawDescData)
	})
	return file_google_cloud_networkservices_v1_route_view_proto_rawDescData
}

var file_google_cloud_networkservices_v1_route_view_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_google_cloud_networkservices_v1_route_view_proto_goTypes = []any{
	(*GatewayRouteView)(nil),              // 0: google.cloud.networkservices.v1.GatewayRouteView
	(*MeshRouteView)(nil),                 // 1: google.cloud.networkservices.v1.MeshRouteView
	(*GetGatewayRouteViewRequest)(nil),    // 2: google.cloud.networkservices.v1.GetGatewayRouteViewRequest
	(*GetMeshRouteViewRequest)(nil),       // 3: google.cloud.networkservices.v1.GetMeshRouteViewRequest
	(*ListGatewayRouteViewsRequest)(nil),  // 4: google.cloud.networkservices.v1.ListGatewayRouteViewsRequest
	(*ListMeshRouteViewsRequest)(nil),     // 5: google.cloud.networkservices.v1.ListMeshRouteViewsRequest
	(*ListGatewayRouteViewsResponse)(nil), // 6: google.cloud.networkservices.v1.ListGatewayRouteViewsResponse
	(*ListMeshRouteViewsResponse)(nil),    // 7: google.cloud.networkservices.v1.ListMeshRouteViewsResponse
}
var file_google_cloud_networkservices_v1_route_view_proto_depIdxs = []int32{
	0, // 0: google.cloud.networkservices.v1.ListGatewayRouteViewsResponse.gateway_route_views:type_name -> google.cloud.networkservices.v1.GatewayRouteView
	1, // 1: google.cloud.networkservices.v1.ListMeshRouteViewsResponse.mesh_route_views:type_name -> google.cloud.networkservices.v1.MeshRouteView
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_cloud_networkservices_v1_route_view_proto_init() }
func file_google_cloud_networkservices_v1_route_view_proto_init() {
	if File_google_cloud_networkservices_v1_route_view_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_networkservices_v1_route_view_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_networkservices_v1_route_view_proto_goTypes,
		DependencyIndexes: file_google_cloud_networkservices_v1_route_view_proto_depIdxs,
		MessageInfos:      file_google_cloud_networkservices_v1_route_view_proto_msgTypes,
	}.Build()
	File_google_cloud_networkservices_v1_route_view_proto = out.File
	file_google_cloud_networkservices_v1_route_view_proto_rawDesc = nil
	file_google_cloud_networkservices_v1_route_view_proto_goTypes = nil
	file_google_cloud_networkservices_v1_route_view_proto_depIdxs = nil
}
