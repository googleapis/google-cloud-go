// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/networkservices/v1/extensibility.proto

package networkservicespb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Determines the information that should be returned by the server.
type WasmPluginView int32

const (
	// Unspecified value. Do not use.
	WasmPluginView_WASM_PLUGIN_VIEW_UNSPECIFIED WasmPluginView = 0
	// If specified in the `GET` request for a `WasmPlugin` resource, the server's
	// response includes just the `WasmPlugin` resource.
	WasmPluginView_WASM_PLUGIN_VIEW_BASIC WasmPluginView = 1
	// If specified in the `GET` request for a `WasmPlugin` resource, the server's
	// response includes the `WasmPlugin` resource with all its versions.
	WasmPluginView_WASM_PLUGIN_VIEW_FULL WasmPluginView = 2
)

// Enum value maps for WasmPluginView.
var (
	WasmPluginView_name = map[int32]string{
		0: "WASM_PLUGIN_VIEW_UNSPECIFIED",
		1: "WASM_PLUGIN_VIEW_BASIC",
		2: "WASM_PLUGIN_VIEW_FULL",
	}
	WasmPluginView_value = map[string]int32{
		"WASM_PLUGIN_VIEW_UNSPECIFIED": 0,
		"WASM_PLUGIN_VIEW_BASIC":       1,
		"WASM_PLUGIN_VIEW_FULL":        2,
	}
)

func (x WasmPluginView) Enum() *WasmPluginView {
	p := new(WasmPluginView)
	*p = x
	return p
}

func (x WasmPluginView) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WasmPluginView) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_networkservices_v1_extensibility_proto_enumTypes[0].Descriptor()
}

func (WasmPluginView) Type() protoreflect.EnumType {
	return &file_google_cloud_networkservices_v1_extensibility_proto_enumTypes[0]
}

func (x WasmPluginView) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WasmPluginView.Descriptor instead.
func (WasmPluginView) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{0}
}

// Possible values to specify the lowest level of logs to be exported to
// Cloud Logging.
type WasmPlugin_LogConfig_LogLevel int32

const (
	// Unspecified value. Defaults to `LogLevel.INFO`.
	WasmPlugin_LogConfig_LOG_LEVEL_UNSPECIFIED WasmPlugin_LogConfig_LogLevel = 0
	// Report logs with TRACE level and above.
	WasmPlugin_LogConfig_TRACE WasmPlugin_LogConfig_LogLevel = 1
	// Report logs with DEBUG level and above.
	WasmPlugin_LogConfig_DEBUG WasmPlugin_LogConfig_LogLevel = 2
	// Report logs with INFO level and above.
	WasmPlugin_LogConfig_INFO WasmPlugin_LogConfig_LogLevel = 3
	// Report logs with WARN level and above.
	WasmPlugin_LogConfig_WARN WasmPlugin_LogConfig_LogLevel = 4
	// Report logs with ERROR level and above.
	WasmPlugin_LogConfig_ERROR WasmPlugin_LogConfig_LogLevel = 5
	// Report logs with CRITICAL level only.
	WasmPlugin_LogConfig_CRITICAL WasmPlugin_LogConfig_LogLevel = 6
)

// Enum value maps for WasmPlugin_LogConfig_LogLevel.
var (
	WasmPlugin_LogConfig_LogLevel_name = map[int32]string{
		0: "LOG_LEVEL_UNSPECIFIED",
		1: "TRACE",
		2: "DEBUG",
		3: "INFO",
		4: "WARN",
		5: "ERROR",
		6: "CRITICAL",
	}
	WasmPlugin_LogConfig_LogLevel_value = map[string]int32{
		"LOG_LEVEL_UNSPECIFIED": 0,
		"TRACE":                 1,
		"DEBUG":                 2,
		"INFO":                  3,
		"WARN":                  4,
		"ERROR":                 5,
		"CRITICAL":              6,
	}
)

func (x WasmPlugin_LogConfig_LogLevel) Enum() *WasmPlugin_LogConfig_LogLevel {
	p := new(WasmPlugin_LogConfig_LogLevel)
	*p = x
	return p
}

func (x WasmPlugin_LogConfig_LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WasmPlugin_LogConfig_LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_networkservices_v1_extensibility_proto_enumTypes[1].Descriptor()
}

func (WasmPlugin_LogConfig_LogLevel) Type() protoreflect.EnumType {
	return &file_google_cloud_networkservices_v1_extensibility_proto_enumTypes[1]
}

func (x WasmPlugin_LogConfig_LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WasmPlugin_LogConfig_LogLevel.Descriptor instead.
func (WasmPlugin_LogConfig_LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{0, 1, 0}
}

// `WasmPlugin` is a resource representing a service executing
// a customer-provided Wasm module.
type WasmPlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier. Name of the `WasmPlugin` resource in the following format:
	// `projects/{project}/locations/{location}/wasmPlugins/{wasm_plugin}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. The timestamp when the resource was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The timestamp when the resource was updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. A human-readable description of the resource.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. Set of labels associated with the `WasmPlugin` resource.
	//
	// The format must comply with [the following
	// requirements](/compute/docs/labeling-resources#requirements).
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. The ID of the `WasmPluginVersion` resource that is the
	// currently serving one. The version referred to must be a child of this
	// `WasmPlugin` resource.
	MainVersionId string `protobuf:"bytes,6,opt,name=main_version_id,json=mainVersionId,proto3" json:"main_version_id,omitempty"`
	// Optional. Specifies the logging options for the activity performed by this
	// plugin. If logging is enabled, plugin logs are exported to
	// Cloud Logging.
	// Note that the settings relate to the logs generated by using
	// logging statements in your Wasm code.
	LogConfig *WasmPlugin_LogConfig `protobuf:"bytes,9,opt,name=log_config,json=logConfig,proto3" json:"log_config,omitempty"`
	// Optional. All versions of this `WasmPlugin` resource in the key-value
	// format. The key is the resource ID, and the value is the `VersionDetails`
	// object.
	//
	// Lets you create or update a `WasmPlugin` resource and its versions in a
	// single request. When the `main_version_id` field is not empty, it must
	// point to one of the `VersionDetails` objects in the map.
	//
	// If provided in a `PATCH` request, the new versions replace the
	// previous set. Any version omitted from the `versions` field is removed.
	// Because the `WasmPluginVersion` resource is immutable, if a
	// `WasmPluginVersion` resource with the same name already exists and differs,
	// the request fails.
	//
	// Note: In a `GET` request, this field is populated only if the field
	// `GetWasmPluginRequest.view` is set to `WASM_PLUGIN_VIEW_FULL`.
	Versions map[string]*WasmPlugin_VersionDetails `protobuf:"bytes,10,rep,name=versions,proto3" json:"versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. List of all
	// [extensions](https://cloud.google.com/service-extensions/docs/overview)
	// that use this `WasmPlugin` resource.
	UsedBy []*WasmPlugin_UsedBy `protobuf:"bytes,11,rep,name=used_by,json=usedBy,proto3" json:"used_by,omitempty"`
}

func (x *WasmPlugin) Reset() {
	*x = WasmPlugin{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WasmPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmPlugin) ProtoMessage() {}

func (x *WasmPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmPlugin.ProtoReflect.Descriptor instead.
func (*WasmPlugin) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{0}
}

func (x *WasmPlugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WasmPlugin) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *WasmPlugin) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *WasmPlugin) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WasmPlugin) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WasmPlugin) GetMainVersionId() string {
	if x != nil {
		return x.MainVersionId
	}
	return ""
}

func (x *WasmPlugin) GetLogConfig() *WasmPlugin_LogConfig {
	if x != nil {
		return x.LogConfig
	}
	return nil
}

func (x *WasmPlugin) GetVersions() map[string]*WasmPlugin_VersionDetails {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *WasmPlugin) GetUsedBy() []*WasmPlugin_UsedBy {
	if x != nil {
		return x.UsedBy
	}
	return nil
}

// A single immutable version of a `WasmPlugin` resource.
// Defines the Wasm module used and optionally its runtime config.
type WasmPluginVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PluginConfigSource:
	//
	//	*WasmPluginVersion_PluginConfigData
	//	*WasmPluginVersion_PluginConfigUri
	PluginConfigSource isWasmPluginVersion_PluginConfigSource `protobuf_oneof:"plugin_config_source"`
	// Identifier. Name of the `WasmPluginVersion` resource in the following
	// format: `projects/{project}/locations/{location}/wasmPlugins/{wasm_plugin}/
	// versions/{wasm_plugin_version}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. The timestamp when the resource was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The timestamp when the resource was updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. A human-readable description of the resource.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. Set of labels associated with the `WasmPluginVersion`
	// resource.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. URI of the container image containing the plugin, stored in the
	// Artifact Registry.
	// When a new `WasmPluginVersion` resource is created, the digest
	// of the container image is saved in the `image_digest` field.
	// When downloading an image, the digest value is used instead of an
	// image tag.
	ImageUri string `protobuf:"bytes,8,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	// Output only. The resolved digest for the image specified in the `image`
	// field. The digest is resolved during the creation of `WasmPluginVersion`
	// resource. This field holds the digest value, regardless of whether a tag or
	// digest was originally specified in the `image` field.
	ImageDigest string `protobuf:"bytes,9,opt,name=image_digest,json=imageDigest,proto3" json:"image_digest,omitempty"`
	// Output only. This field holds the digest (usually checksum) value for the
	// plugin configuration. The value is calculated based on the contents of
	// `plugin_config_data` or the container image defined by
	// the `plugin_config_uri` field.
	PluginConfigDigest string `protobuf:"bytes,14,opt,name=plugin_config_digest,json=pluginConfigDigest,proto3" json:"plugin_config_digest,omitempty"`
}

func (x *WasmPluginVersion) Reset() {
	*x = WasmPluginVersion{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WasmPluginVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmPluginVersion) ProtoMessage() {}

func (x *WasmPluginVersion) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmPluginVersion.ProtoReflect.Descriptor instead.
func (*WasmPluginVersion) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{1}
}

func (m *WasmPluginVersion) GetPluginConfigSource() isWasmPluginVersion_PluginConfigSource {
	if m != nil {
		return m.PluginConfigSource
	}
	return nil
}

func (x *WasmPluginVersion) GetPluginConfigData() []byte {
	if x, ok := x.GetPluginConfigSource().(*WasmPluginVersion_PluginConfigData); ok {
		return x.PluginConfigData
	}
	return nil
}

func (x *WasmPluginVersion) GetPluginConfigUri() string {
	if x, ok := x.GetPluginConfigSource().(*WasmPluginVersion_PluginConfigUri); ok {
		return x.PluginConfigUri
	}
	return ""
}

func (x *WasmPluginVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WasmPluginVersion) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *WasmPluginVersion) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *WasmPluginVersion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WasmPluginVersion) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WasmPluginVersion) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *WasmPluginVersion) GetImageDigest() string {
	if x != nil {
		return x.ImageDigest
	}
	return ""
}

func (x *WasmPluginVersion) GetPluginConfigDigest() string {
	if x != nil {
		return x.PluginConfigDigest
	}
	return ""
}

type isWasmPluginVersion_PluginConfigSource interface {
	isWasmPluginVersion_PluginConfigSource()
}

type WasmPluginVersion_PluginConfigData struct {
	// Configuration for the plugin.
	// The configuration is provided to the plugin at runtime through
	// the `ON_CONFIGURE` callback. When a new
	// `WasmPluginVersion` resource is created, the digest of the
	// contents is saved in the `plugin_config_digest` field.
	PluginConfigData []byte `protobuf:"bytes,12,opt,name=plugin_config_data,json=pluginConfigData,proto3,oneof"`
}

type WasmPluginVersion_PluginConfigUri struct {
	// URI of the plugin configuration stored in the Artifact Registry.
	// The configuration is provided to the plugin at runtime through
	// the `ON_CONFIGURE` callback. The container image must contain
	// only a single file with the name `plugin.config`. When a
	// new `WasmPluginVersion` resource is created, the digest of the
	// container image is saved in the `plugin_config_digest` field.
	PluginConfigUri string `protobuf:"bytes,13,opt,name=plugin_config_uri,json=pluginConfigUri,proto3,oneof"`
}

func (*WasmPluginVersion_PluginConfigData) isWasmPluginVersion_PluginConfigSource() {}

func (*WasmPluginVersion_PluginConfigUri) isWasmPluginVersion_PluginConfigSource() {}

// Request used with the `ListWasmPlugins` method.
type ListWasmPluginsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The project and location from which the `WasmPlugin` resources
	// are listed, specified in the following format:
	// `projects/{project}/locations/global`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Maximum number of `WasmPlugin` resources to return per call.
	// If not specified, at most 50 `WasmPlugin` resources are returned.
	// The maximum value is 1000; values above 1000 are coerced to 1000.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The value returned by the last `ListWasmPluginsResponse` call.
	// Indicates that this is a continuation of a prior
	// `ListWasmPlugins` call, and that the
	// next page of data is to be returned.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListWasmPluginsRequest) Reset() {
	*x = ListWasmPluginsRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWasmPluginsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWasmPluginsRequest) ProtoMessage() {}

func (x *ListWasmPluginsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWasmPluginsRequest.ProtoReflect.Descriptor instead.
func (*ListWasmPluginsRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{2}
}

func (x *ListWasmPluginsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListWasmPluginsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWasmPluginsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response returned by the `ListWasmPlugins` method.
type ListWasmPluginsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of `WasmPlugin` resources.
	WasmPlugins []*WasmPlugin `protobuf:"bytes,1,rep,name=wasm_plugins,json=wasmPlugins,proto3" json:"wasm_plugins,omitempty"`
	// If there might be more results than those appearing in this response, then
	// `next_page_token` is included. To get the next set of results,
	// call this method again using the value of `next_page_token` as
	// `page_token`.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Unreachable resources. Populated when the request attempts to list all
	// resources across all supported locations, while some locations are
	// temporarily unavailable.
	Unreachable []string `protobuf:"bytes,3,rep,name=unreachable,proto3" json:"unreachable,omitempty"`
}

func (x *ListWasmPluginsResponse) Reset() {
	*x = ListWasmPluginsResponse{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWasmPluginsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWasmPluginsResponse) ProtoMessage() {}

func (x *ListWasmPluginsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWasmPluginsResponse.ProtoReflect.Descriptor instead.
func (*ListWasmPluginsResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{3}
}

func (x *ListWasmPluginsResponse) GetWasmPlugins() []*WasmPlugin {
	if x != nil {
		return x.WasmPlugins
	}
	return nil
}

func (x *ListWasmPluginsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListWasmPluginsResponse) GetUnreachable() []string {
	if x != nil {
		return x.Unreachable
	}
	return nil
}

// Request used by the `GetWasmPlugin` method.
type GetWasmPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. A name of the `WasmPlugin` resource to get. Must be in the
	// format `projects/{project}/locations/global/wasmPlugins/{wasm_plugin}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Determines how much data must be returned in the response. See
	// [AIP-157](https://google.aip.dev/157).
	View WasmPluginView `protobuf:"varint,2,opt,name=view,proto3,enum=google.cloud.networkservices.v1.WasmPluginView" json:"view,omitempty"`
}

func (x *GetWasmPluginRequest) Reset() {
	*x = GetWasmPluginRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWasmPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWasmPluginRequest) ProtoMessage() {}

func (x *GetWasmPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWasmPluginRequest.ProtoReflect.Descriptor instead.
func (*GetWasmPluginRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{4}
}

func (x *GetWasmPluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWasmPluginRequest) GetView() WasmPluginView {
	if x != nil {
		return x.View
	}
	return WasmPluginView_WASM_PLUGIN_VIEW_UNSPECIFIED
}

// Request used by the `CreateWasmPlugin` method.
type CreateWasmPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The parent resource of the `WasmPlugin` resource. Must be in the
	// format `projects/{project}/locations/global`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. User-provided ID of the `WasmPlugin` resource to be created.
	WasmPluginId string `protobuf:"bytes,2,opt,name=wasm_plugin_id,json=wasmPluginId,proto3" json:"wasm_plugin_id,omitempty"`
	// Required. `WasmPlugin` resource to be created.
	WasmPlugin *WasmPlugin `protobuf:"bytes,3,opt,name=wasm_plugin,json=wasmPlugin,proto3" json:"wasm_plugin,omitempty"`
}

func (x *CreateWasmPluginRequest) Reset() {
	*x = CreateWasmPluginRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWasmPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWasmPluginRequest) ProtoMessage() {}

func (x *CreateWasmPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWasmPluginRequest.ProtoReflect.Descriptor instead.
func (*CreateWasmPluginRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{5}
}

func (x *CreateWasmPluginRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateWasmPluginRequest) GetWasmPluginId() string {
	if x != nil {
		return x.WasmPluginId
	}
	return ""
}

func (x *CreateWasmPluginRequest) GetWasmPlugin() *WasmPlugin {
	if x != nil {
		return x.WasmPlugin
	}
	return nil
}

// Request used by the `UpdateWasmPlugin` method.
type UpdateWasmPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Used to specify the fields to be overwritten in the
	// `WasmPlugin` resource by the update.
	// The fields specified in the `update_mask` field are relative to the
	// resource, not the full request.
	// An omitted `update_mask` field is treated as an implied `update_mask`
	// field equivalent to all fields that are populated (that have a non-empty
	// value).
	// The `update_mask` field supports a special value `*`, which means that
	// each field in the given `WasmPlugin` resource (including the empty ones)
	// replaces the current value.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Required. Updated `WasmPlugin` resource.
	WasmPlugin *WasmPlugin `protobuf:"bytes,2,opt,name=wasm_plugin,json=wasmPlugin,proto3" json:"wasm_plugin,omitempty"`
}

func (x *UpdateWasmPluginRequest) Reset() {
	*x = UpdateWasmPluginRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWasmPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWasmPluginRequest) ProtoMessage() {}

func (x *UpdateWasmPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWasmPluginRequest.ProtoReflect.Descriptor instead.
func (*UpdateWasmPluginRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateWasmPluginRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateWasmPluginRequest) GetWasmPlugin() *WasmPlugin {
	if x != nil {
		return x.WasmPlugin
	}
	return nil
}

// Request used by the `DeleteWasmPlugin` method.
type DeleteWasmPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. A name of the `WasmPlugin` resource to delete. Must be in the
	// format `projects/{project}/locations/global/wasmPlugins/{wasm_plugin}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteWasmPluginRequest) Reset() {
	*x = DeleteWasmPluginRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWasmPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWasmPluginRequest) ProtoMessage() {}

func (x *DeleteWasmPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWasmPluginRequest.ProtoReflect.Descriptor instead.
func (*DeleteWasmPluginRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteWasmPluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request used with the `ListWasmPluginVersions` method.
type ListWasmPluginVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The `WasmPlugin` resource whose `WasmPluginVersion`s
	// are listed, specified in the following format:
	// `projects/{project}/locations/global/wasmPlugins/{wasm_plugin}`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Maximum number of `WasmPluginVersion` resources to return per
	// call. If not specified, at most 50 `WasmPluginVersion` resources are
	// returned. The maximum value is 1000; values above 1000 are coerced to
	// 1000.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The value returned by the last `ListWasmPluginVersionsResponse` call.
	// Indicates that this is a continuation of a prior
	// `ListWasmPluginVersions` call, and that the
	// next page of data is to be returned.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListWasmPluginVersionsRequest) Reset() {
	*x = ListWasmPluginVersionsRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWasmPluginVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWasmPluginVersionsRequest) ProtoMessage() {}

func (x *ListWasmPluginVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWasmPluginVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListWasmPluginVersionsRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{8}
}

func (x *ListWasmPluginVersionsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListWasmPluginVersionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWasmPluginVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response returned by the `ListWasmPluginVersions` method.
type ListWasmPluginVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of `WasmPluginVersion` resources.
	WasmPluginVersions []*WasmPluginVersion `protobuf:"bytes,1,rep,name=wasm_plugin_versions,json=wasmPluginVersions,proto3" json:"wasm_plugin_versions,omitempty"`
	// If there might be more results than those appearing in this response, then
	// `next_page_token` is included. To get the next set of results,
	// call this method again using the value of `next_page_token` as
	// `page_token`.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Unreachable resources. Populated when the request attempts to list all
	// resources across all supported locations, while some locations are
	// temporarily unavailable.
	Unreachable []string `protobuf:"bytes,3,rep,name=unreachable,proto3" json:"unreachable,omitempty"`
}

func (x *ListWasmPluginVersionsResponse) Reset() {
	*x = ListWasmPluginVersionsResponse{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWasmPluginVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWasmPluginVersionsResponse) ProtoMessage() {}

func (x *ListWasmPluginVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWasmPluginVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListWasmPluginVersionsResponse) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{9}
}

func (x *ListWasmPluginVersionsResponse) GetWasmPluginVersions() []*WasmPluginVersion {
	if x != nil {
		return x.WasmPluginVersions
	}
	return nil
}

func (x *ListWasmPluginVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListWasmPluginVersionsResponse) GetUnreachable() []string {
	if x != nil {
		return x.Unreachable
	}
	return nil
}

// Request used by the `GetWasmPluginVersion` method.
type GetWasmPluginVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. A name of the `WasmPluginVersion` resource to get. Must be in
	// the format
	// `projects/{project}/locations/global/wasmPlugins/{wasm_plugin}/versions/{wasm_plugin_version}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWasmPluginVersionRequest) Reset() {
	*x = GetWasmPluginVersionRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWasmPluginVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWasmPluginVersionRequest) ProtoMessage() {}

func (x *GetWasmPluginVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWasmPluginVersionRequest.ProtoReflect.Descriptor instead.
func (*GetWasmPluginVersionRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{10}
}

func (x *GetWasmPluginVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request used by the `CreateWasmPluginVersion` method.
type CreateWasmPluginVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The parent resource of the `WasmPluginVersion` resource. Must be
	// in the format
	// `projects/{project}/locations/global/wasmPlugins/{wasm_plugin}`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. User-provided ID of the `WasmPluginVersion` resource to be
	// created.
	WasmPluginVersionId string `protobuf:"bytes,2,opt,name=wasm_plugin_version_id,json=wasmPluginVersionId,proto3" json:"wasm_plugin_version_id,omitempty"`
	// Required. `WasmPluginVersion` resource to be created.
	WasmPluginVersion *WasmPluginVersion `protobuf:"bytes,3,opt,name=wasm_plugin_version,json=wasmPluginVersion,proto3" json:"wasm_plugin_version,omitempty"`
}

func (x *CreateWasmPluginVersionRequest) Reset() {
	*x = CreateWasmPluginVersionRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWasmPluginVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWasmPluginVersionRequest) ProtoMessage() {}

func (x *CreateWasmPluginVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWasmPluginVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateWasmPluginVersionRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{11}
}

func (x *CreateWasmPluginVersionRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateWasmPluginVersionRequest) GetWasmPluginVersionId() string {
	if x != nil {
		return x.WasmPluginVersionId
	}
	return ""
}

func (x *CreateWasmPluginVersionRequest) GetWasmPluginVersion() *WasmPluginVersion {
	if x != nil {
		return x.WasmPluginVersion
	}
	return nil
}

// Request used by the `DeleteWasmPluginVersion` method.
type DeleteWasmPluginVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. A name of the `WasmPluginVersion` resource to delete. Must be in
	// the format
	// `projects/{project}/locations/global/wasmPlugins/{wasm_plugin}/versions/{wasm_plugin_version}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteWasmPluginVersionRequest) Reset() {
	*x = DeleteWasmPluginVersionRequest{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWasmPluginVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWasmPluginVersionRequest) ProtoMessage() {}

func (x *DeleteWasmPluginVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWasmPluginVersionRequest.ProtoReflect.Descriptor instead.
func (*DeleteWasmPluginVersionRequest) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteWasmPluginVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Details of a `WasmPluginVersion` resource to be inlined in the
// `WasmPlugin` resource.
type WasmPlugin_VersionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PluginConfigSource:
	//
	//	*WasmPlugin_VersionDetails_PluginConfigData
	//	*WasmPlugin_VersionDetails_PluginConfigUri
	PluginConfigSource isWasmPlugin_VersionDetails_PluginConfigSource `protobuf_oneof:"plugin_config_source"`
	// Output only. The timestamp when the resource was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The timestamp when the resource was updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. A human-readable description of the resource.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. Set of labels associated with the `WasmPluginVersion`
	// resource.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. URI of the container image containing the Wasm module, stored
	// in the Artifact Registry. The container image must contain only a single
	// file with the name `plugin.wasm`. When a new `WasmPluginVersion` resource
	// is created, the URI gets resolved to an image digest and saved in the
	// `image_digest` field.
	ImageUri string `protobuf:"bytes,5,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	// Output only. The resolved digest for the image specified in `image`.
	// The digest is resolved during the creation of a
	// `WasmPluginVersion` resource.
	// This field holds the digest value regardless of whether a tag or
	// digest was originally specified in the `image` field.
	ImageDigest string `protobuf:"bytes,6,opt,name=image_digest,json=imageDigest,proto3" json:"image_digest,omitempty"`
	// Output only. This field holds the digest (usually checksum) value for the
	// plugin configuration. The value is calculated based on the contents of
	// the `plugin_config_data` field or the container image defined by the
	// `plugin_config_uri` field.
	PluginConfigDigest string `protobuf:"bytes,11,opt,name=plugin_config_digest,json=pluginConfigDigest,proto3" json:"plugin_config_digest,omitempty"`
}

func (x *WasmPlugin_VersionDetails) Reset() {
	*x = WasmPlugin_VersionDetails{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WasmPlugin_VersionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmPlugin_VersionDetails) ProtoMessage() {}

func (x *WasmPlugin_VersionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmPlugin_VersionDetails.ProtoReflect.Descriptor instead.
func (*WasmPlugin_VersionDetails) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{0, 0}
}

func (m *WasmPlugin_VersionDetails) GetPluginConfigSource() isWasmPlugin_VersionDetails_PluginConfigSource {
	if m != nil {
		return m.PluginConfigSource
	}
	return nil
}

func (x *WasmPlugin_VersionDetails) GetPluginConfigData() []byte {
	if x, ok := x.GetPluginConfigSource().(*WasmPlugin_VersionDetails_PluginConfigData); ok {
		return x.PluginConfigData
	}
	return nil
}

func (x *WasmPlugin_VersionDetails) GetPluginConfigUri() string {
	if x, ok := x.GetPluginConfigSource().(*WasmPlugin_VersionDetails_PluginConfigUri); ok {
		return x.PluginConfigUri
	}
	return ""
}

func (x *WasmPlugin_VersionDetails) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *WasmPlugin_VersionDetails) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *WasmPlugin_VersionDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WasmPlugin_VersionDetails) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WasmPlugin_VersionDetails) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *WasmPlugin_VersionDetails) GetImageDigest() string {
	if x != nil {
		return x.ImageDigest
	}
	return ""
}

func (x *WasmPlugin_VersionDetails) GetPluginConfigDigest() string {
	if x != nil {
		return x.PluginConfigDigest
	}
	return ""
}

type isWasmPlugin_VersionDetails_PluginConfigSource interface {
	isWasmPlugin_VersionDetails_PluginConfigSource()
}

type WasmPlugin_VersionDetails_PluginConfigData struct {
	// Configuration for the plugin.
	// The configuration is provided to the plugin at runtime through
	// the `ON_CONFIGURE` callback. When a new
	// `WasmPluginVersion` version is created, the digest of the
	// contents is saved in the `plugin_config_digest` field.
	PluginConfigData []byte `protobuf:"bytes,9,opt,name=plugin_config_data,json=pluginConfigData,proto3,oneof"`
}

type WasmPlugin_VersionDetails_PluginConfigUri struct {
	// URI of the plugin configuration stored in the Artifact Registry.
	// The configuration is provided to the plugin at runtime through
	// the `ON_CONFIGURE` callback. The container image must
	// contain only a single file with the name
	// `plugin.config`. When a new `WasmPluginVersion`
	// resource is created, the digest of the container image is saved in the
	// `plugin_config_digest` field.
	PluginConfigUri string `protobuf:"bytes,10,opt,name=plugin_config_uri,json=pluginConfigUri,proto3,oneof"`
}

func (*WasmPlugin_VersionDetails_PluginConfigData) isWasmPlugin_VersionDetails_PluginConfigSource() {}

func (*WasmPlugin_VersionDetails_PluginConfigUri) isWasmPlugin_VersionDetails_PluginConfigSource() {}

// Specifies the logging options for the activity performed by this
// plugin. If logging is enabled, plugin logs are exported to
// Cloud Logging.
type WasmPlugin_LogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Specifies whether to enable logging for activity by this
	// plugin.
	//
	// Defaults to `false`.
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	// Non-empty default. Configures the sampling rate of activity logs, where
	// `1.0` means all logged activity is reported and `0.0` means no activity
	// is reported. A floating point value between `0.0` and `1.0` indicates
	// that a percentage of log messages is stored.
	//
	// The default value when logging is enabled is `1.0`. The value of the
	// field must be between `0` and `1` (inclusive).
	//
	// This field can be specified only if logging is enabled for this plugin.
	SampleRate float32 `protobuf:"fixed32,2,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	// Non-empty default. Specificies the lowest level of the plugin logs that
	// are exported to Cloud Logging. This setting relates to the logs generated
	// by using logging statements in your Wasm code.
	//
	// This field is can be set only if logging is enabled for the plugin.
	//
	// If the field is not provided when logging is enabled, it is set to
	// `INFO` by default.
	MinLogLevel WasmPlugin_LogConfig_LogLevel `protobuf:"varint,3,opt,name=min_log_level,json=minLogLevel,proto3,enum=google.cloud.networkservices.v1.WasmPlugin_LogConfig_LogLevel" json:"min_log_level,omitempty"`
}

func (x *WasmPlugin_LogConfig) Reset() {
	*x = WasmPlugin_LogConfig{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WasmPlugin_LogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmPlugin_LogConfig) ProtoMessage() {}

func (x *WasmPlugin_LogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmPlugin_LogConfig.ProtoReflect.Descriptor instead.
func (*WasmPlugin_LogConfig) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{0, 1}
}

func (x *WasmPlugin_LogConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *WasmPlugin_LogConfig) GetSampleRate() float32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *WasmPlugin_LogConfig) GetMinLogLevel() WasmPlugin_LogConfig_LogLevel {
	if x != nil {
		return x.MinLogLevel
	}
	return WasmPlugin_LogConfig_LOG_LEVEL_UNSPECIFIED
}

// Defines a resource that uses the `WasmPlugin` resource.
type WasmPlugin_UsedBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. Full name of the resource
	// https://google.aip.dev/122#full-resource-names, for example
	// `//networkservices.googleapis.com/projects/{project}/locations/{location}/lbRouteExtensions/{extension}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WasmPlugin_UsedBy) Reset() {
	*x = WasmPlugin_UsedBy{}
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WasmPlugin_UsedBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmPlugin_UsedBy) ProtoMessage() {}

func (x *WasmPlugin_UsedBy) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmPlugin_UsedBy.ProtoReflect.Descriptor instead.
func (*WasmPlugin_UsedBy) Descriptor() ([]byte, []int) {
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP(), []int{0, 2}
}

func (x *WasmPlugin_UsedBy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_google_cloud_networkservices_v1_extensibility_proto protoreflect.FileDescriptor

var file_google_cloud_networkservices_v1_extensibility_proto_rawDesc = []byte{
	0x0a, 0x33, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x0e, 0x0a, 0x0a, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2b,
	0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0d, 0x6d, 0x61,
	0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x50, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x64, 0x42, 0x79, 0x1a, 0xd2, 0x04, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x10, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x72, 0x69, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x63, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x46, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x12, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x16, 0x0a, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xa1, 0x02, 0x0a, 0x09, 0x4c, 0x6f,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x42, 0x03, 0xe0, 0x41, 0x07, 0x52, 0x0a,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x67, 0x0a, 0x0d, 0x6d, 0x69,
	0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c,
	0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x42, 0x03, 0xe0, 0x41, 0x07, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x68, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x19, 0x0a, 0x15, 0x4c, 0x4f, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52,
	0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41,
	0x52, 0x4e, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x06, 0x1a, 0x21, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x77, 0x0a, 0x0d, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x50,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x3a, 0x71, 0xea, 0x41, 0x6e, 0x0a, 0x29, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x41, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x77, 0x61,
	0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x73, 0x6d, 0x5f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x7d, 0x22, 0x81, 0x06, 0x0a, 0x11, 0x57, 0x61, 0x73, 0x6d,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x12, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x10, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a,
	0x11, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x72, 0x69, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x08, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x26,
	0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x98, 0x01, 0xea, 0x41, 0x94, 0x01, 0x0a,
	0x30, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x60, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x7d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x77,
	0x61, 0x73, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x7d, 0x42, 0x16, 0x0a, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2b, 0x12, 0x29,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57,
	0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb3, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x77, 0x61, 0x73,
	0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x0b, 0x77, 0x61,
	0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x61, 0x73, 0x6d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xe0, 0x41, 0x02, 0xfa,
	0x41, 0x2b, 0x0a, 0x29, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0xe2, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2b, 0x12, 0x29, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x61, 0x73,
	0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x29, 0x0a, 0x0e, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x77, 0x61,
	0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0b, 0x77, 0x61,
	0x73, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x0a, 0x77, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0xae, 0x01,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x51, 0x0a, 0x0b, 0x77,
	0x61, 0x73, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0a, 0x77, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0x60,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2b, 0x0a,
	0x29, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xad, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x50, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x38, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x32, 0x12, 0x30, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x61, 0x73, 0x6d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xd0, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x14, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x77, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0x6b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x38, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x32, 0x0a, 0x30, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x95, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x73, 0x6d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x38, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x32, 0x12, 0x30, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x61, 0x73, 0x6d,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x16, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x13, 0x77, 0x61, 0x73, 0x6d,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x67, 0x0a, 0x13, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x11, 0x77, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x32,
	0x0a, 0x30, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x57, 0x61, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0x69, 0x0a, 0x0e, 0x57, 0x61, 0x73, 0x6d,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x20, 0x0a, 0x1c, 0x57, 0x41,
	0x53, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x57, 0x41, 0x53, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x56, 0x49, 0x45, 0x57,
	0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x41, 0x53, 0x4d,
	0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x46, 0x55, 0x4c,
	0x4c, 0x10, 0x02, 0x42, 0xf3, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x4d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x70, 0x62, 0x3b, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x70, 0x62,
	0xaa, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x5c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_google_cloud_networkservices_v1_extensibility_proto_rawDescOnce sync.Once
	file_google_cloud_networkservices_v1_extensibility_proto_rawDescData = file_google_cloud_networkservices_v1_extensibility_proto_rawDesc
)

func file_google_cloud_networkservices_v1_extensibility_proto_rawDescGZIP() []byte {
	file_google_cloud_networkservices_v1_extensibility_proto_rawDescOnce.Do(func() {
		file_google_cloud_networkservices_v1_extensibility_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_networkservices_v1_extensibility_proto_rawDescData)
	})
	return file_google_cloud_networkservices_v1_extensibility_proto_rawDescData
}

var file_google_cloud_networkservices_v1_extensibility_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_google_cloud_networkservices_v1_extensibility_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_google_cloud_networkservices_v1_extensibility_proto_goTypes = []any{
	(WasmPluginView)(0),                    // 0: google.cloud.networkservices.v1.WasmPluginView
	(WasmPlugin_LogConfig_LogLevel)(0),     // 1: google.cloud.networkservices.v1.WasmPlugin.LogConfig.LogLevel
	(*WasmPlugin)(nil),                     // 2: google.cloud.networkservices.v1.WasmPlugin
	(*WasmPluginVersion)(nil),              // 3: google.cloud.networkservices.v1.WasmPluginVersion
	(*ListWasmPluginsRequest)(nil),         // 4: google.cloud.networkservices.v1.ListWasmPluginsRequest
	(*ListWasmPluginsResponse)(nil),        // 5: google.cloud.networkservices.v1.ListWasmPluginsResponse
	(*GetWasmPluginRequest)(nil),           // 6: google.cloud.networkservices.v1.GetWasmPluginRequest
	(*CreateWasmPluginRequest)(nil),        // 7: google.cloud.networkservices.v1.CreateWasmPluginRequest
	(*UpdateWasmPluginRequest)(nil),        // 8: google.cloud.networkservices.v1.UpdateWasmPluginRequest
	(*DeleteWasmPluginRequest)(nil),        // 9: google.cloud.networkservices.v1.DeleteWasmPluginRequest
	(*ListWasmPluginVersionsRequest)(nil),  // 10: google.cloud.networkservices.v1.ListWasmPluginVersionsRequest
	(*ListWasmPluginVersionsResponse)(nil), // 11: google.cloud.networkservices.v1.ListWasmPluginVersionsResponse
	(*GetWasmPluginVersionRequest)(nil),    // 12: google.cloud.networkservices.v1.GetWasmPluginVersionRequest
	(*CreateWasmPluginVersionRequest)(nil), // 13: google.cloud.networkservices.v1.CreateWasmPluginVersionRequest
	(*DeleteWasmPluginVersionRequest)(nil), // 14: google.cloud.networkservices.v1.DeleteWasmPluginVersionRequest
	(*WasmPlugin_VersionDetails)(nil),      // 15: google.cloud.networkservices.v1.WasmPlugin.VersionDetails
	(*WasmPlugin_LogConfig)(nil),           // 16: google.cloud.networkservices.v1.WasmPlugin.LogConfig
	(*WasmPlugin_UsedBy)(nil),              // 17: google.cloud.networkservices.v1.WasmPlugin.UsedBy
	nil,                                    // 18: google.cloud.networkservices.v1.WasmPlugin.LabelsEntry
	nil,                                    // 19: google.cloud.networkservices.v1.WasmPlugin.VersionsEntry
	nil,                                    // 20: google.cloud.networkservices.v1.WasmPlugin.VersionDetails.LabelsEntry
	nil,                                    // 21: google.cloud.networkservices.v1.WasmPluginVersion.LabelsEntry
	(*timestamppb.Timestamp)(nil),          // 22: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),          // 23: google.protobuf.FieldMask
}
var file_google_cloud_networkservices_v1_extensibility_proto_depIdxs = []int32{
	22, // 0: google.cloud.networkservices.v1.WasmPlugin.create_time:type_name -> google.protobuf.Timestamp
	22, // 1: google.cloud.networkservices.v1.WasmPlugin.update_time:type_name -> google.protobuf.Timestamp
	18, // 2: google.cloud.networkservices.v1.WasmPlugin.labels:type_name -> google.cloud.networkservices.v1.WasmPlugin.LabelsEntry
	16, // 3: google.cloud.networkservices.v1.WasmPlugin.log_config:type_name -> google.cloud.networkservices.v1.WasmPlugin.LogConfig
	19, // 4: google.cloud.networkservices.v1.WasmPlugin.versions:type_name -> google.cloud.networkservices.v1.WasmPlugin.VersionsEntry
	17, // 5: google.cloud.networkservices.v1.WasmPlugin.used_by:type_name -> google.cloud.networkservices.v1.WasmPlugin.UsedBy
	22, // 6: google.cloud.networkservices.v1.WasmPluginVersion.create_time:type_name -> google.protobuf.Timestamp
	22, // 7: google.cloud.networkservices.v1.WasmPluginVersion.update_time:type_name -> google.protobuf.Timestamp
	21, // 8: google.cloud.networkservices.v1.WasmPluginVersion.labels:type_name -> google.cloud.networkservices.v1.WasmPluginVersion.LabelsEntry
	2,  // 9: google.cloud.networkservices.v1.ListWasmPluginsResponse.wasm_plugins:type_name -> google.cloud.networkservices.v1.WasmPlugin
	0,  // 10: google.cloud.networkservices.v1.GetWasmPluginRequest.view:type_name -> google.cloud.networkservices.v1.WasmPluginView
	2,  // 11: google.cloud.networkservices.v1.CreateWasmPluginRequest.wasm_plugin:type_name -> google.cloud.networkservices.v1.WasmPlugin
	23, // 12: google.cloud.networkservices.v1.UpdateWasmPluginRequest.update_mask:type_name -> google.protobuf.FieldMask
	2,  // 13: google.cloud.networkservices.v1.UpdateWasmPluginRequest.wasm_plugin:type_name -> google.cloud.networkservices.v1.WasmPlugin
	3,  // 14: google.cloud.networkservices.v1.ListWasmPluginVersionsResponse.wasm_plugin_versions:type_name -> google.cloud.networkservices.v1.WasmPluginVersion
	3,  // 15: google.cloud.networkservices.v1.CreateWasmPluginVersionRequest.wasm_plugin_version:type_name -> google.cloud.networkservices.v1.WasmPluginVersion
	22, // 16: google.cloud.networkservices.v1.WasmPlugin.VersionDetails.create_time:type_name -> google.protobuf.Timestamp
	22, // 17: google.cloud.networkservices.v1.WasmPlugin.VersionDetails.update_time:type_name -> google.protobuf.Timestamp
	20, // 18: google.cloud.networkservices.v1.WasmPlugin.VersionDetails.labels:type_name -> google.cloud.networkservices.v1.WasmPlugin.VersionDetails.LabelsEntry
	1,  // 19: google.cloud.networkservices.v1.WasmPlugin.LogConfig.min_log_level:type_name -> google.cloud.networkservices.v1.WasmPlugin.LogConfig.LogLevel
	15, // 20: google.cloud.networkservices.v1.WasmPlugin.VersionsEntry.value:type_name -> google.cloud.networkservices.v1.WasmPlugin.VersionDetails
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_google_cloud_networkservices_v1_extensibility_proto_init() }
func file_google_cloud_networkservices_v1_extensibility_proto_init() {
	if File_google_cloud_networkservices_v1_extensibility_proto != nil {
		return
	}
	file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[1].OneofWrappers = []any{
		(*WasmPluginVersion_PluginConfigData)(nil),
		(*WasmPluginVersion_PluginConfigUri)(nil),
	}
	file_google_cloud_networkservices_v1_extensibility_proto_msgTypes[13].OneofWrappers = []any{
		(*WasmPlugin_VersionDetails_PluginConfigData)(nil),
		(*WasmPlugin_VersionDetails_PluginConfigUri)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_networkservices_v1_extensibility_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_networkservices_v1_extensibility_proto_goTypes,
		DependencyIndexes: file_google_cloud_networkservices_v1_extensibility_proto_depIdxs,
		EnumInfos:         file_google_cloud_networkservices_v1_extensibility_proto_enumTypes,
		MessageInfos:      file_google_cloud_networkservices_v1_extensibility_proto_msgTypes,
	}.Build()
	File_google_cloud_networkservices_v1_extensibility_proto = out.File
	file_google_cloud_networkservices_v1_extensibility_proto_rawDesc = nil
	file_google_cloud_networkservices_v1_extensibility_proto_goTypes = nil
	file_google_cloud_networkservices_v1_extensibility_proto_depIdxs = nil
}
