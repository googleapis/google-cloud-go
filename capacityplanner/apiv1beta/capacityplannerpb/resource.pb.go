// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/capacityplanner/v1beta/resource.proto

package capacityplannerpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Unit int32

const (
	Unit_UNIT_UNSPECIFIED Unit = 0
	Unit_UNIT_COUNT       Unit = 1
	// Kilobytes (10^3 bytes)
	Unit_KB Unit = 2
	// Gigabytes (10^9 bytes)
	Unit_GB Unit = 3
	// Terabytes (10^12 bytes)
	Unit_TB Unit = 4
	// Mebibytes (2^20 bytes)
	Unit_MIB Unit = 17
	// Gibibytes (2^30 bytes)
	Unit_GIB Unit = 5
	// Tebibytes (2^40 bytes)
	Unit_TIB Unit = 6
	// Queries per second
	Unit_QPS Unit = 7
	// Megabytes (10^6 bytes)
	Unit_MB Unit = 8
	// Pebibytes (2^50 bytes)
	Unit_PIB Unit = 9
	// Terabits (10^12 bits) per second
	//
	// Deprecated: Marked as deprecated in google/cloud/capacityplanner/v1beta/resource.proto.
	Unit_TBPS       Unit = 10
	Unit_GBPS_BITS  Unit = 11
	Unit_GIB_BITS   Unit = 12
	Unit_MBPS_BITS  Unit = 13
	Unit_MBPS_BYTES Unit = 14
	Unit_TBPS_BITS  Unit = 15
	Unit_TBPS_BYTES Unit = 16
	Unit_KOPS       Unit = 18
)

// Enum value maps for Unit.
var (
	Unit_name = map[int32]string{
		0:  "UNIT_UNSPECIFIED",
		1:  "UNIT_COUNT",
		2:  "KB",
		3:  "GB",
		4:  "TB",
		17: "MIB",
		5:  "GIB",
		6:  "TIB",
		7:  "QPS",
		8:  "MB",
		9:  "PIB",
		10: "TBPS",
		11: "GBPS_BITS",
		12: "GIB_BITS",
		13: "MBPS_BITS",
		14: "MBPS_BYTES",
		15: "TBPS_BITS",
		16: "TBPS_BYTES",
		18: "KOPS",
	}
	Unit_value = map[string]int32{
		"UNIT_UNSPECIFIED": 0,
		"UNIT_COUNT":       1,
		"KB":               2,
		"GB":               3,
		"TB":               4,
		"MIB":              17,
		"GIB":              5,
		"TIB":              6,
		"QPS":              7,
		"MB":               8,
		"PIB":              9,
		"TBPS":             10,
		"GBPS_BITS":        11,
		"GIB_BITS":         12,
		"MBPS_BITS":        13,
		"MBPS_BYTES":       14,
		"TBPS_BITS":        15,
		"TBPS_BYTES":       16,
		"KOPS":             18,
	}
)

func (x Unit) Enum() *Unit {
	p := new(Unit)
	*p = x
	return p
}

func (x Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_enumTypes[0].Descriptor()
}

func (Unit) Type() protoreflect.EnumType {
	return &file_google_cloud_capacityplanner_v1beta_resource_proto_enumTypes[0]
}

func (x Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Unit.Descriptor instead.
func (Unit) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{0}
}

type ResourceContainer_Type int32

const (
	ResourceContainer_TYPE_UNSPECIFIED ResourceContainer_Type = 0
	ResourceContainer_PROJECT          ResourceContainer_Type = 1
	ResourceContainer_FOLDER           ResourceContainer_Type = 2
	ResourceContainer_ORG              ResourceContainer_Type = 3
)

// Enum value maps for ResourceContainer_Type.
var (
	ResourceContainer_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "PROJECT",
		2: "FOLDER",
		3: "ORG",
	}
	ResourceContainer_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"PROJECT":          1,
		"FOLDER":           2,
		"ORG":              3,
	}
)

func (x ResourceContainer_Type) Enum() *ResourceContainer_Type {
	p := new(ResourceContainer_Type)
	*p = x
	return p
}

func (x ResourceContainer_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceContainer_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_enumTypes[1].Descriptor()
}

func (ResourceContainer_Type) Type() protoreflect.EnumType {
	return &file_google_cloud_capacityplanner_v1beta_resource_proto_enumTypes[1]
}

func (x ResourceContainer_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceContainer_Type.Descriptor instead.
func (ResourceContainer_Type) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{0, 0}
}

// The resource container of Google Cloud Platform hierarchy such as a project.
type ResourceContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ResourceContainer_Type `protobuf:"varint,1,opt,name=type,proto3,enum=google.cloud.capacityplanner.v1beta.ResourceContainer_Type" json:"type,omitempty"`
	// Required. Identifier of the resource container. For example, project number
	// for project type.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResourceContainer) Reset() {
	*x = ResourceContainer{}
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceContainer) ProtoMessage() {}

func (x *ResourceContainer) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceContainer.ProtoReflect.Descriptor instead.
func (*ResourceContainer) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceContainer) GetType() ResourceContainer_Type {
	if x != nil {
		return x.Type
	}
	return ResourceContainer_TYPE_UNSPECIFIED
}

func (x *ResourceContainer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The id for a Google Cloud Platform resource key.
type ResourceIdKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Demand fields for the resource.
	//
	// Types that are assignable to DemandFields:
	//
	//	*ResourceIdKey_ResourceCode
	DemandFields isResourceIdKey_DemandFields `protobuf_oneof:"demand_fields"`
	// Required. Id of the resource.
	ResourceId *ResourceIdentifier `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *ResourceIdKey) Reset() {
	*x = ResourceIdKey{}
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceIdKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIdKey) ProtoMessage() {}

func (x *ResourceIdKey) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIdKey.ProtoReflect.Descriptor instead.
func (*ResourceIdKey) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{1}
}

func (m *ResourceIdKey) GetDemandFields() isResourceIdKey_DemandFields {
	if m != nil {
		return m.DemandFields
	}
	return nil
}

func (x *ResourceIdKey) GetResourceCode() string {
	if x, ok := x.GetDemandFields().(*ResourceIdKey_ResourceCode); ok {
		return x.ResourceCode
	}
	return ""
}

func (x *ResourceIdKey) GetResourceId() *ResourceIdentifier {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

type isResourceIdKey_DemandFields interface {
	isResourceIdKey_DemandFields()
}

type ResourceIdKey_ResourceCode struct {
	// Required. resource_code for the resource. eg: gce-ram, gce-vcpus,
	// gce-gpu, gce-tpu, gce-vm, gce-persistent-disk, gce-local-ssd.
	ResourceCode string `protobuf:"bytes,2,opt,name=resource_code,json=resourceCode,proto3,oneof"`
}

func (*ResourceIdKey_ResourceCode) isResourceIdKey_DemandFields() {}

// The identifier for a Google Cloud Platform resource.
type ResourceIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName        string               `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ResourceName       string               `protobuf:"bytes,2,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ResourceAttributes []*ResourceAttribute `protobuf:"bytes,3,rep,name=resource_attributes,json=resourceAttributes,proto3" json:"resource_attributes,omitempty"`
}

func (x *ResourceIdentifier) Reset() {
	*x = ResourceIdentifier{}
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIdentifier) ProtoMessage() {}

func (x *ResourceIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIdentifier.ProtoReflect.Descriptor instead.
func (*ResourceIdentifier) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceIdentifier) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ResourceIdentifier) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ResourceIdentifier) GetResourceAttributes() []*ResourceAttribute {
	if x != nil {
		return x.ResourceAttributes
	}
	return nil
}

// An attribute of a Google Cloud Platform resource.
type ResourceAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *ResourceValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ResourceAttribute) Reset() {
	*x = ResourceAttribute{}
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAttribute) ProtoMessage() {}

func (x *ResourceAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAttribute.ProtoReflect.Descriptor instead.
func (*ResourceAttribute) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceAttribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResourceAttribute) GetValue() *ResourceValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type ResourceValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit  Unit   `protobuf:"varint,1,opt,name=unit,proto3,enum=google.cloud.capacityplanner.v1beta.Unit" json:"unit,omitempty"`
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ResourceValue) Reset() {
	*x = ResourceValue{}
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceValue) ProtoMessage() {}

func (x *ResourceValue) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceValue.ProtoReflect.Descriptor instead.
func (*ResourceValue) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceValue) GetUnit() Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_UNIT_UNSPECIFIED
}

func (x *ResourceValue) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Value_Int64Value
	//	*Value_StringValue
	//	*Value_DoubleValue
	//	*Value_BoolValue
	Value isValue_Value `protobuf_oneof:"value"`
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP(), []int{5}
}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Value) GetInt64Value() int64 {
	if x, ok := x.GetValue().(*Value_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (x *Value) GetStringValue() string {
	if x, ok := x.GetValue().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Value) GetDoubleValue() float64 {
	if x, ok := x.GetValue().(*Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (x *Value) GetBoolValue() bool {
	if x, ok := x.GetValue().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

type isValue_Value interface {
	isValue_Value()
}

type Value_Int64Value struct {
	Int64Value int64 `protobuf:"varint,1,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

func (*Value_Int64Value) isValue_Value() {}

func (*Value_StringValue) isValue_Value() {}

func (*Value_DoubleValue) isValue_Value() {}

func (*Value_BoolValue) isValue_Value() {}

var File_google_cloud_capacityplanner_v1beta_resource_proto protoreflect.FileDescriptor

var file_google_cloud_capacityplanner_v1beta_resource_proto_rawDesc = []byte{
	0x0a, 0x32, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x4f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x4f, 0x52, 0x47, 0x10, 0x03, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x5d, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x11,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x90, 0x01,
	0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x40,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x9e, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a,
	0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x2a, 0xec, 0x01, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x4b, 0x42, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x42, 0x10, 0x03,
	0x12, 0x06, 0x0a, 0x02, 0x54, 0x42, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x49, 0x42, 0x10,
	0x11, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x42, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x49,
	0x42, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x51, 0x50, 0x53, 0x10, 0x07, 0x12, 0x06, 0x0a, 0x02,
	0x4d, 0x42, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x49, 0x42, 0x10, 0x09, 0x12, 0x0c, 0x0a,
	0x04, 0x54, 0x42, 0x50, 0x53, 0x10, 0x0a, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x47,
	0x42, 0x50, 0x53, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x49,
	0x42, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x42, 0x50, 0x53,
	0x5f, 0x42, 0x49, 0x54, 0x53, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x42, 0x50, 0x53, 0x5f,
	0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x42, 0x50, 0x53, 0x5f,
	0x42, 0x49, 0x54, 0x53, 0x10, 0x0f, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x42, 0x50, 0x53, 0x5f, 0x42,
	0x59, 0x54, 0x45, 0x53, 0x10, 0x10, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x4f, 0x50, 0x53, 0x10, 0x12,
	0x42, 0x82, 0x02, 0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x42, 0x0d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x6f, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x70, 0x62, 0x3b, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x70, 0x62,
	0xaa, 0x02, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x56, 0x31, 0x42, 0x65, 0x74, 0x61, 0xca, 0x02, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xea, 0x02, 0x26, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescOnce sync.Once
	file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescData = file_google_cloud_capacityplanner_v1beta_resource_proto_rawDesc
)

func file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescGZIP() []byte {
	file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescOnce.Do(func() {
		file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescData)
	})
	return file_google_cloud_capacityplanner_v1beta_resource_proto_rawDescData
}

var file_google_cloud_capacityplanner_v1beta_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_google_cloud_capacityplanner_v1beta_resource_proto_goTypes = []any{
	(Unit)(0),                   // 0: google.cloud.capacityplanner.v1beta.Unit
	(ResourceContainer_Type)(0), // 1: google.cloud.capacityplanner.v1beta.ResourceContainer.Type
	(*ResourceContainer)(nil),   // 2: google.cloud.capacityplanner.v1beta.ResourceContainer
	(*ResourceIdKey)(nil),       // 3: google.cloud.capacityplanner.v1beta.ResourceIdKey
	(*ResourceIdentifier)(nil),  // 4: google.cloud.capacityplanner.v1beta.ResourceIdentifier
	(*ResourceAttribute)(nil),   // 5: google.cloud.capacityplanner.v1beta.ResourceAttribute
	(*ResourceValue)(nil),       // 6: google.cloud.capacityplanner.v1beta.ResourceValue
	(*Value)(nil),               // 7: google.cloud.capacityplanner.v1beta.Value
}
var file_google_cloud_capacityplanner_v1beta_resource_proto_depIdxs = []int32{
	1, // 0: google.cloud.capacityplanner.v1beta.ResourceContainer.type:type_name -> google.cloud.capacityplanner.v1beta.ResourceContainer.Type
	4, // 1: google.cloud.capacityplanner.v1beta.ResourceIdKey.resource_id:type_name -> google.cloud.capacityplanner.v1beta.ResourceIdentifier
	5, // 2: google.cloud.capacityplanner.v1beta.ResourceIdentifier.resource_attributes:type_name -> google.cloud.capacityplanner.v1beta.ResourceAttribute
	6, // 3: google.cloud.capacityplanner.v1beta.ResourceAttribute.value:type_name -> google.cloud.capacityplanner.v1beta.ResourceValue
	0, // 4: google.cloud.capacityplanner.v1beta.ResourceValue.unit:type_name -> google.cloud.capacityplanner.v1beta.Unit
	7, // 5: google.cloud.capacityplanner.v1beta.ResourceValue.value:type_name -> google.cloud.capacityplanner.v1beta.Value
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_google_cloud_capacityplanner_v1beta_resource_proto_init() }
func file_google_cloud_capacityplanner_v1beta_resource_proto_init() {
	if File_google_cloud_capacityplanner_v1beta_resource_proto != nil {
		return
	}
	file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[1].OneofWrappers = []any{
		(*ResourceIdKey_ResourceCode)(nil),
	}
	file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes[5].OneofWrappers = []any{
		(*Value_Int64Value)(nil),
		(*Value_StringValue)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_BoolValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_capacityplanner_v1beta_resource_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_capacityplanner_v1beta_resource_proto_goTypes,
		DependencyIndexes: file_google_cloud_capacityplanner_v1beta_resource_proto_depIdxs,
		EnumInfos:         file_google_cloud_capacityplanner_v1beta_resource_proto_enumTypes,
		MessageInfos:      file_google_cloud_capacityplanner_v1beta_resource_proto_msgTypes,
	}.Build()
	File_google_cloud_capacityplanner_v1beta_resource_proto = out.File
	file_google_cloud_capacityplanner_v1beta_resource_proto_rawDesc = nil
	file_google_cloud_capacityplanner_v1beta_resource_proto_goTypes = nil
	file_google_cloud_capacityplanner_v1beta_resource_proto_depIdxs = nil
}
