// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/cloud/capacityplanner/v1beta/future_reservation.proto

package capacityplannerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents procurement status of the Future Reservation.
type FutureReservation_Status_ProcurementStatus int32

const (
	// This is unused status value.
	FutureReservation_Status_PROCUREMENT_STATUS_UNSPECIFIED FutureReservation_Status_ProcurementStatus = 0
	// Future reservation is pending approval by Google Cloud Platform.
	FutureReservation_Status_PENDING_APPROVAL FutureReservation_Status_ProcurementStatus = 1
	// Future reservation is approved by Google Cloud Platform.
	FutureReservation_Status_APPROVED FutureReservation_Status_ProcurementStatus = 2
	// Future reservation is committed by the customer.
	FutureReservation_Status_COMMITTED FutureReservation_Status_ProcurementStatus = 3
	// Future reservation is rejected by Google Cloud Platform.
	FutureReservation_Status_DECLINED FutureReservation_Status_ProcurementStatus = 4
	// Future reservation is cancelled by the customer.
	FutureReservation_Status_CANCELLED FutureReservation_Status_ProcurementStatus = 5
	// Future reservation is being procured by Google Cloud Platform. Beyond
	// this point, Future reservation is locked and no further modifications
	// are allowed.
	FutureReservation_Status_PROCURING FutureReservation_Status_ProcurementStatus = 6
	// Future reservation capacity is being provisioned. This state will be
	// entered after start_time, while reservations are being created to
	// provide total_count reserved instance slots. This state will not
	// persist past start_time + 24h.
	FutureReservation_Status_PROVISIONING FutureReservation_Status_ProcurementStatus = 7
	// Future reservation is fulfilled completely.
	FutureReservation_Status_FULFILLED FutureReservation_Status_ProcurementStatus = 8
	// Future reservation failed. No additional reservations were provided.
	FutureReservation_Status_FAILED FutureReservation_Status_ProcurementStatus = 9
	// Future reservation is partially fulfilled. Additional reservations were
	// provided but did not reach total_count reserved instance slots.
	FutureReservation_Status_FAILED_PARTIALLY_FULFILLED FutureReservation_Status_ProcurementStatus = 10
	// Related status for PlanningStatus.Draft. Transitions to
	// PENDING_APPROVAL upon user submitting FR.
	FutureReservation_Status_DRAFTING FutureReservation_Status_ProcurementStatus = 11
	// An Amendment to the Future Reservation has been requested. If the
	// Amendment is declined, the Future Reservation will be restored to the
	// last known good state.
	FutureReservation_Status_PENDING_AMENDMENT_APPROVAL FutureReservation_Status_ProcurementStatus = 12
)

// Enum value maps for FutureReservation_Status_ProcurementStatus.
var (
	FutureReservation_Status_ProcurementStatus_name = map[int32]string{
		0:  "PROCUREMENT_STATUS_UNSPECIFIED",
		1:  "PENDING_APPROVAL",
		2:  "APPROVED",
		3:  "COMMITTED",
		4:  "DECLINED",
		5:  "CANCELLED",
		6:  "PROCURING",
		7:  "PROVISIONING",
		8:  "FULFILLED",
		9:  "FAILED",
		10: "FAILED_PARTIALLY_FULFILLED",
		11: "DRAFTING",
		12: "PENDING_AMENDMENT_APPROVAL",
	}
	FutureReservation_Status_ProcurementStatus_value = map[string]int32{
		"PROCUREMENT_STATUS_UNSPECIFIED": 0,
		"PENDING_APPROVAL":               1,
		"APPROVED":                       2,
		"COMMITTED":                      3,
		"DECLINED":                       4,
		"CANCELLED":                      5,
		"PROCURING":                      6,
		"PROVISIONING":                   7,
		"FULFILLED":                      8,
		"FAILED":                         9,
		"FAILED_PARTIALLY_FULFILLED":     10,
		"DRAFTING":                       11,
		"PENDING_AMENDMENT_APPROVAL":     12,
	}
)

func (x FutureReservation_Status_ProcurementStatus) Enum() *FutureReservation_Status_ProcurementStatus {
	p := new(FutureReservation_Status_ProcurementStatus)
	*p = x
	return p
}

func (x FutureReservation_Status_ProcurementStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FutureReservation_Status_ProcurementStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_google_cloud_capacityplanner_v1beta_future_reservation_proto_enumTypes[0].Descriptor()
}

func (FutureReservation_Status_ProcurementStatus) Type() protoreflect.EnumType {
	return &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_enumTypes[0]
}

func (x FutureReservation_Status_ProcurementStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FutureReservation_Status_ProcurementStatus.Descriptor instead.
func (FutureReservation_Status_ProcurementStatus) EnumDescriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescGZIP(), []int{0, 2, 0}
}

// Repesents Future Reservation request which is part of aggregated
// reservations data response of "QueryReservations".
type FutureReservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the future reservation which can only be for a specific SKU for
	// now.
	//
	// Types that are assignable to Type:
	//
	//	*FutureReservation_SpecificSkuProperties
	Type isFutureReservation_Type `protobuf_oneof:"type"`
	// A unique identifier for this future reservation. The server
	// defines this identifier.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The creation timestamp for this future reservation.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// URL of the Zone where this future reservation resides.
	Zone string `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
	// Description of the future reservation provided by user.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// The future reservation resource name.
	FutureReservation string `protobuf:"bytes,7,opt,name=future_reservation,json=futureReservation,proto3" json:"future_reservation,omitempty"`
	OwnerProjectId    string `protobuf:"bytes,15,opt,name=owner_project_id,json=ownerProjectId,proto3" json:"owner_project_id,omitempty"`
	// Time window for this Future Reservation.
	TimeWindow *FutureReservation_TimeWindow `protobuf:"bytes,9,opt,name=time_window,json=timeWindow,proto3" json:"time_window,omitempty"`
	// List of Projects/Folders to share with.
	ShareSettings *Allocation_ShareSettings `protobuf:"bytes,10,opt,name=share_settings,json=shareSettings,proto3" json:"share_settings,omitempty"`
	// Name prefix for the reservations to be created at the time of
	// delivery. The name prefix must comply with RFC1035.
	// Maximum allowed length for name prefix is 20. Automatically created
	// reservations name format will be <name-prefix>-date-####.
	NamePrefix string `protobuf:"bytes,11,opt,name=name_prefix,json=namePrefix,proto3" json:"name_prefix,omitempty"`
	// Status of the Future Reservation
	Status *FutureReservation_Status `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// Future timestamp when the FR auto-created reservations will be deleted by
	// Compute Engine. Format of this field must be a valid RFC3339 value.
	AutoCreatedReservationsDeleteTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=auto_created_reservations_delete_time,json=autoCreatedReservationsDeleteTime,proto3" json:"auto_created_reservations_delete_time,omitempty"`
	// Setting for enabling or disabling automatic deletion for auto-created
	// reservation. If set to true, auto-created reservations will be
	// deleted at Future Reservation's end time (default) or at user's defined
	// timestamp if any of the
	// [auto_created_reservations_delete_time, auto_created_reservations_duration]
	// values is specified.
	// For keeping auto-created reservation indefinitely, this value should be set
	// to false.
	AutoDeleteAutoCreatedReservations bool `protobuf:"varint,14,opt,name=auto_delete_auto_created_reservations,json=autoDeleteAutoCreatedReservations,proto3" json:"auto_delete_auto_created_reservations,omitempty"`
}

func (x *FutureReservation) Reset() {
	*x = FutureReservation{}
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FutureReservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FutureReservation) ProtoMessage() {}

func (x *FutureReservation) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FutureReservation.ProtoReflect.Descriptor instead.
func (*FutureReservation) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescGZIP(), []int{0}
}

func (m *FutureReservation) GetType() isFutureReservation_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FutureReservation) GetSpecificSkuProperties() *FutureReservation_SpecificSKUProperties {
	if x, ok := x.GetType().(*FutureReservation_SpecificSkuProperties); ok {
		return x.SpecificSkuProperties
	}
	return nil
}

func (x *FutureReservation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FutureReservation) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *FutureReservation) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *FutureReservation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FutureReservation) GetFutureReservation() string {
	if x != nil {
		return x.FutureReservation
	}
	return ""
}

func (x *FutureReservation) GetOwnerProjectId() string {
	if x != nil {
		return x.OwnerProjectId
	}
	return ""
}

func (x *FutureReservation) GetTimeWindow() *FutureReservation_TimeWindow {
	if x != nil {
		return x.TimeWindow
	}
	return nil
}

func (x *FutureReservation) GetShareSettings() *Allocation_ShareSettings {
	if x != nil {
		return x.ShareSettings
	}
	return nil
}

func (x *FutureReservation) GetNamePrefix() string {
	if x != nil {
		return x.NamePrefix
	}
	return ""
}

func (x *FutureReservation) GetStatus() *FutureReservation_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FutureReservation) GetAutoCreatedReservationsDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AutoCreatedReservationsDeleteTime
	}
	return nil
}

func (x *FutureReservation) GetAutoDeleteAutoCreatedReservations() bool {
	if x != nil {
		return x.AutoDeleteAutoCreatedReservations
	}
	return false
}

type isFutureReservation_Type interface {
	isFutureReservation_Type()
}

type FutureReservation_SpecificSkuProperties struct {
	// Future Reservation configuration to indicate instance properties and
	// total count.
	SpecificSkuProperties *FutureReservation_SpecificSKUProperties `protobuf:"bytes,8,opt,name=specific_sku_properties,json=specificSkuProperties,proto3,oneof"`
}

func (*FutureReservation_SpecificSkuProperties) isFutureReservation_Type() {}

// Represents specific SKU properties for the Future Reservation.
type FutureReservation_SpecificSKUProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Properties of the SKU instances being reserved.
	InstanceProperties *Allocation_SpecificSKUAllocation_AllocatedInstanceProperties `protobuf:"bytes,1,opt,name=instance_properties,json=instanceProperties,proto3" json:"instance_properties,omitempty"`
	// Total number of instances for which capacity assurance is requested at a
	// future time period.
	TotalCount int64 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *FutureReservation_SpecificSKUProperties) Reset() {
	*x = FutureReservation_SpecificSKUProperties{}
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FutureReservation_SpecificSKUProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FutureReservation_SpecificSKUProperties) ProtoMessage() {}

func (x *FutureReservation_SpecificSKUProperties) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FutureReservation_SpecificSKUProperties.ProtoReflect.Descriptor instead.
func (*FutureReservation_SpecificSKUProperties) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FutureReservation_SpecificSKUProperties) GetInstanceProperties() *Allocation_SpecificSKUAllocation_AllocatedInstanceProperties {
	if x != nil {
		return x.InstanceProperties
	}
	return nil
}

func (x *FutureReservation_SpecificSKUProperties) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Represents time window for the Future Reservation.
type FutureReservation_TimeWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start time of the Future Reservation.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// End time of the Future Reservation.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *FutureReservation_TimeWindow) Reset() {
	*x = FutureReservation_TimeWindow{}
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FutureReservation_TimeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FutureReservation_TimeWindow) ProtoMessage() {}

func (x *FutureReservation_TimeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FutureReservation_TimeWindow.ProtoReflect.Descriptor instead.
func (*FutureReservation_TimeWindow) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescGZIP(), []int{0, 1}
}

func (x *FutureReservation_TimeWindow) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *FutureReservation_TimeWindow) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Represents status related to the future reservation.
type FutureReservation_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current state of this Future Reservation
	ProcurementStatus FutureReservation_Status_ProcurementStatus `protobuf:"varint,1,opt,name=procurement_status,json=procurementStatus,proto3,enum=google.cloud.capacityplanner.v1beta.FutureReservation_Status_ProcurementStatus" json:"procurement_status,omitempty"`
	// Time when Future Reservation would become LOCKED, after which no
	// modifications to Future Reservation will be allowed. Applicable only
	// after the Future Reservation is in the APPROVED state. The lock_time is
	// an RFC3339 string. The procurement_status will transition to PROCURING
	// state at this time.
	LockTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	// Fully qualified urls of the automatically created reservations at
	// start_time.
	AutoCreatedReservations []string `protobuf:"bytes,3,rep,name=auto_created_reservations,json=autoCreatedReservations,proto3" json:"auto_created_reservations,omitempty"`
	// This count indicates the fulfilled capacity so far. This is set during
	// "PROVISIONING" state. This count also includes capacity delivered as part
	// of existing matching reservations.
	FulfilledCount int64 `protobuf:"varint,4,opt,name=fulfilled_count,json=fulfilledCount,proto3" json:"fulfilled_count,omitempty"`
}

func (x *FutureReservation_Status) Reset() {
	*x = FutureReservation_Status{}
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FutureReservation_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FutureReservation_Status) ProtoMessage() {}

func (x *FutureReservation_Status) ProtoReflect() protoreflect.Message {
	mi := &file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FutureReservation_Status.ProtoReflect.Descriptor instead.
func (*FutureReservation_Status) Descriptor() ([]byte, []int) {
	return file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescGZIP(), []int{0, 2}
}

func (x *FutureReservation_Status) GetProcurementStatus() FutureReservation_Status_ProcurementStatus {
	if x != nil {
		return x.ProcurementStatus
	}
	return FutureReservation_Status_PROCUREMENT_STATUS_UNSPECIFIED
}

func (x *FutureReservation_Status) GetLockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LockTime
	}
	return nil
}

func (x *FutureReservation_Status) GetAutoCreatedReservations() []string {
	if x != nil {
		return x.AutoCreatedReservations
	}
	return nil
}

func (x *FutureReservation_Status) GetFulfilledCount() int64 {
	if x != nil {
		return x.FulfilledCount
	}
	return 0
}

var File_google_cloud_capacityplanner_v1beta_future_reservation_proto protoreflect.FileDescriptor

var file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x1a, 0x34, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x0e, 0x0a, 0x11, 0x46,
	0x75, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x86, 0x01, 0x0a, 0x17, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x73, 0x6b,
	0x75, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x53, 0x4b, 0x55, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x15, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x6b, 0x75, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12,
	0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x64, 0x0a, 0x0e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6c, 0x0a, 0x25, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x21, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x25, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x61, 0x75, 0x74, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xcd, 0x01, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x53, 0x4b, 0x55, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x92, 0x01, 0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x61, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x4b, 0x55, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x7e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xba, 0x04, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x7e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x2e, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x63, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17,
	0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x91, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x43, 0x55, 0x52,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52,
	0x4f, 0x43, 0x55, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x46,
	0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x52, 0x41, 0x46, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x41, 0x4d, 0x45, 0x4e, 0x44, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x41, 0x4c, 0x10, 0x0c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x8b, 0x02, 0x0a,
	0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x42, 0x16, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x51, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x70, 0x62, 0x3b, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x70, 0x6c, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x70, 0x62, 0xaa, 0x02, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x56, 0x31, 0x42, 0x65, 0x74, 0x61, 0xca, 0x02, 0x23, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0xea, 0x02, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x3a, 0x3a, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescOnce sync.Once
	file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescData = file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDesc
)

func file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescGZIP() []byte {
	file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescOnce.Do(func() {
		file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescData)
	})
	return file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDescData
}

var file_google_cloud_capacityplanner_v1beta_future_reservation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_google_cloud_capacityplanner_v1beta_future_reservation_proto_goTypes = []any{
	(FutureReservation_Status_ProcurementStatus)(0),                      // 0: google.cloud.capacityplanner.v1beta.FutureReservation.Status.ProcurementStatus
	(*FutureReservation)(nil),                                            // 1: google.cloud.capacityplanner.v1beta.FutureReservation
	(*FutureReservation_SpecificSKUProperties)(nil),                      // 2: google.cloud.capacityplanner.v1beta.FutureReservation.SpecificSKUProperties
	(*FutureReservation_TimeWindow)(nil),                                 // 3: google.cloud.capacityplanner.v1beta.FutureReservation.TimeWindow
	(*FutureReservation_Status)(nil),                                     // 4: google.cloud.capacityplanner.v1beta.FutureReservation.Status
	(*timestamppb.Timestamp)(nil),                                        // 5: google.protobuf.Timestamp
	(*Allocation_ShareSettings)(nil),                                     // 6: google.cloud.capacityplanner.v1beta.Allocation.ShareSettings
	(*Allocation_SpecificSKUAllocation_AllocatedInstanceProperties)(nil), // 7: google.cloud.capacityplanner.v1beta.Allocation.SpecificSKUAllocation.AllocatedInstanceProperties
}
var file_google_cloud_capacityplanner_v1beta_future_reservation_proto_depIdxs = []int32{
	2,  // 0: google.cloud.capacityplanner.v1beta.FutureReservation.specific_sku_properties:type_name -> google.cloud.capacityplanner.v1beta.FutureReservation.SpecificSKUProperties
	5,  // 1: google.cloud.capacityplanner.v1beta.FutureReservation.create_time:type_name -> google.protobuf.Timestamp
	3,  // 2: google.cloud.capacityplanner.v1beta.FutureReservation.time_window:type_name -> google.cloud.capacityplanner.v1beta.FutureReservation.TimeWindow
	6,  // 3: google.cloud.capacityplanner.v1beta.FutureReservation.share_settings:type_name -> google.cloud.capacityplanner.v1beta.Allocation.ShareSettings
	4,  // 4: google.cloud.capacityplanner.v1beta.FutureReservation.status:type_name -> google.cloud.capacityplanner.v1beta.FutureReservation.Status
	5,  // 5: google.cloud.capacityplanner.v1beta.FutureReservation.auto_created_reservations_delete_time:type_name -> google.protobuf.Timestamp
	7,  // 6: google.cloud.capacityplanner.v1beta.FutureReservation.SpecificSKUProperties.instance_properties:type_name -> google.cloud.capacityplanner.v1beta.Allocation.SpecificSKUAllocation.AllocatedInstanceProperties
	5,  // 7: google.cloud.capacityplanner.v1beta.FutureReservation.TimeWindow.start_time:type_name -> google.protobuf.Timestamp
	5,  // 8: google.cloud.capacityplanner.v1beta.FutureReservation.TimeWindow.end_time:type_name -> google.protobuf.Timestamp
	0,  // 9: google.cloud.capacityplanner.v1beta.FutureReservation.Status.procurement_status:type_name -> google.cloud.capacityplanner.v1beta.FutureReservation.Status.ProcurementStatus
	5,  // 10: google.cloud.capacityplanner.v1beta.FutureReservation.Status.lock_time:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_google_cloud_capacityplanner_v1beta_future_reservation_proto_init() }
func file_google_cloud_capacityplanner_v1beta_future_reservation_proto_init() {
	if File_google_cloud_capacityplanner_v1beta_future_reservation_proto != nil {
		return
	}
	file_google_cloud_capacityplanner_v1beta_allocation_proto_init()
	file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes[0].OneofWrappers = []any{
		(*FutureReservation_SpecificSkuProperties)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_cloud_capacityplanner_v1beta_future_reservation_proto_goTypes,
		DependencyIndexes: file_google_cloud_capacityplanner_v1beta_future_reservation_proto_depIdxs,
		EnumInfos:         file_google_cloud_capacityplanner_v1beta_future_reservation_proto_enumTypes,
		MessageInfos:      file_google_cloud_capacityplanner_v1beta_future_reservation_proto_msgTypes,
	}.Build()
	File_google_cloud_capacityplanner_v1beta_future_reservation_proto = out.File
	file_google_cloud_capacityplanner_v1beta_future_reservation_proto_rawDesc = nil
	file_google_cloud_capacityplanner_v1beta_future_reservation_proto_goTypes = nil
	file_google_cloud_capacityplanner_v1beta_future_reservation_proto_depIdxs = nil
}
