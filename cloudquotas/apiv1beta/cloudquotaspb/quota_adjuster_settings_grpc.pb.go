// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.7
// source: google/api/cloudquotas/v1beta/quota_adjuster_settings.proto

package cloudquotaspb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	QuotaAdjusterSettingsManager_UpdateQuotaAdjusterSettings_FullMethodName = "/google.api.cloudquotas.v1beta.QuotaAdjusterSettingsManager/UpdateQuotaAdjusterSettings"
	QuotaAdjusterSettingsManager_GetQuotaAdjusterSettings_FullMethodName    = "/google.api.cloudquotas.v1beta.QuotaAdjusterSettingsManager/GetQuotaAdjusterSettings"
)

// QuotaAdjusterSettingsManagerClient is the client API for QuotaAdjusterSettingsManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QuotaAdjusterSettingsManagerClient interface {
	// RPC Method for updating QuotaAdjusterSettings based on the request
	UpdateQuotaAdjusterSettings(ctx context.Context, in *UpdateQuotaAdjusterSettingsRequest, opts ...grpc.CallOption) (*QuotaAdjusterSettings, error)
	// RPC Method for getting QuotaAdjusterSettings based on the request
	GetQuotaAdjusterSettings(ctx context.Context, in *GetQuotaAdjusterSettingsRequest, opts ...grpc.CallOption) (*QuotaAdjusterSettings, error)
}

type quotaAdjusterSettingsManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewQuotaAdjusterSettingsManagerClient(cc grpc.ClientConnInterface) QuotaAdjusterSettingsManagerClient {
	return &quotaAdjusterSettingsManagerClient{cc}
}

func (c *quotaAdjusterSettingsManagerClient) UpdateQuotaAdjusterSettings(ctx context.Context, in *UpdateQuotaAdjusterSettingsRequest, opts ...grpc.CallOption) (*QuotaAdjusterSettings, error) {
	out := new(QuotaAdjusterSettings)
	err := c.cc.Invoke(ctx, QuotaAdjusterSettingsManager_UpdateQuotaAdjusterSettings_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quotaAdjusterSettingsManagerClient) GetQuotaAdjusterSettings(ctx context.Context, in *GetQuotaAdjusterSettingsRequest, opts ...grpc.CallOption) (*QuotaAdjusterSettings, error) {
	out := new(QuotaAdjusterSettings)
	err := c.cc.Invoke(ctx, QuotaAdjusterSettingsManager_GetQuotaAdjusterSettings_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuotaAdjusterSettingsManagerServer is the server API for QuotaAdjusterSettingsManager service.
// All implementations should embed UnimplementedQuotaAdjusterSettingsManagerServer
// for forward compatibility
type QuotaAdjusterSettingsManagerServer interface {
	// RPC Method for updating QuotaAdjusterSettings based on the request
	UpdateQuotaAdjusterSettings(context.Context, *UpdateQuotaAdjusterSettingsRequest) (*QuotaAdjusterSettings, error)
	// RPC Method for getting QuotaAdjusterSettings based on the request
	GetQuotaAdjusterSettings(context.Context, *GetQuotaAdjusterSettingsRequest) (*QuotaAdjusterSettings, error)
}

// UnimplementedQuotaAdjusterSettingsManagerServer should be embedded to have forward compatible implementations.
type UnimplementedQuotaAdjusterSettingsManagerServer struct {
}

func (UnimplementedQuotaAdjusterSettingsManagerServer) UpdateQuotaAdjusterSettings(context.Context, *UpdateQuotaAdjusterSettingsRequest) (*QuotaAdjusterSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQuotaAdjusterSettings not implemented")
}
func (UnimplementedQuotaAdjusterSettingsManagerServer) GetQuotaAdjusterSettings(context.Context, *GetQuotaAdjusterSettingsRequest) (*QuotaAdjusterSettings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuotaAdjusterSettings not implemented")
}

// UnsafeQuotaAdjusterSettingsManagerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QuotaAdjusterSettingsManagerServer will
// result in compilation errors.
type UnsafeQuotaAdjusterSettingsManagerServer interface {
	mustEmbedUnimplementedQuotaAdjusterSettingsManagerServer()
}

func RegisterQuotaAdjusterSettingsManagerServer(s grpc.ServiceRegistrar, srv QuotaAdjusterSettingsManagerServer) {
	s.RegisterService(&QuotaAdjusterSettingsManager_ServiceDesc, srv)
}

func _QuotaAdjusterSettingsManager_UpdateQuotaAdjusterSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQuotaAdjusterSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuotaAdjusterSettingsManagerServer).UpdateQuotaAdjusterSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QuotaAdjusterSettingsManager_UpdateQuotaAdjusterSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuotaAdjusterSettingsManagerServer).UpdateQuotaAdjusterSettings(ctx, req.(*UpdateQuotaAdjusterSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuotaAdjusterSettingsManager_GetQuotaAdjusterSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuotaAdjusterSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuotaAdjusterSettingsManagerServer).GetQuotaAdjusterSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QuotaAdjusterSettingsManager_GetQuotaAdjusterSettings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuotaAdjusterSettingsManagerServer).GetQuotaAdjusterSettings(ctx, req.(*GetQuotaAdjusterSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QuotaAdjusterSettingsManager_ServiceDesc is the grpc.ServiceDesc for QuotaAdjusterSettingsManager service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QuotaAdjusterSettingsManager_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.api.cloudquotas.v1beta.QuotaAdjusterSettingsManager",
	HandlerType: (*QuotaAdjusterSettingsManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateQuotaAdjusterSettings",
			Handler:    _QuotaAdjusterSettingsManager_UpdateQuotaAdjusterSettings_Handler,
		},
		{
			MethodName: "GetQuotaAdjusterSettings",
			Handler:    _QuotaAdjusterSettingsManager_GetQuotaAdjusterSettings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/api/cloudquotas/v1beta/quota_adjuster_settings.proto",
}
