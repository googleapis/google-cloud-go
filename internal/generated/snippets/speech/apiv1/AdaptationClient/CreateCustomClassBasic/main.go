// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by cloud.google.com/go/internal/gapicgen/gensnippets. DO NOT EDIT.

// [START speech_v1_config_Adaptation_CreateCustomClass_Basic_sync]

package main

import (
	"context"
	"fmt"
	"io"
	"os"

	speech "cloud.google.com/go/speech/apiv1"
	"google.golang.org/api/option"
	speechpb "google.golang.org/genproto/googleapis/cloud/speech/v1"
)

// Custom Class Creation
// Shows how to create a custom class
func createCustomClassBasic(w io.Writer, parent, customClassId string) (*speechpb.CustomClass, error) {
	ctx := context.Background()
	c, err := speech.NewAdaptationClient(ctx,
		option.WithEndpoint("us-speech.googleapis.com:443"))
	if err != nil {
		return nil, err
	}
	defer c.Close()

	createCustomClassRequest := &speechpb.CreateCustomClassRequest{
		Parent:        parent,
		CustomClassId: customClassId,
		CustomClass: &speechpb.CustomClass{
			Items: []*speechpb.CustomClass_ClassItem{
				{
					Value: "Titanic",
				},
				{
					Value: "RMS Queen Mary",
				},
			},
		},
	}
	fmt.Fprintln(w, "Calling the CreateCustomClass operation.")
	createdCustomClass, err := c.CreateCustomClass(ctx, createCustomClassRequest)
	if err != nil {
		return nil, err
	}
	fmt.Fprintln(w, "A Custom Class with the following name has been created.")
	fmt.Fprintln(w, createdCustomClass.Name)
	fmt.Fprintln(w, "The Custom class contains the following items.")
	itemsList := createdCustomClass.Items
	for _, item := range itemsList {
		fmt.Fprintln(w, item)
	}
	return createdCustomClass, nil
}

func main() {
	// The custom class parent element
	parent := "projects/[PROJECT]/locations/us"
	// The id for the custom class
	customClassId := "passengerships"

	resp, err := createCustomClassBasic(os.Stdout, parent, customClassId)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

// [END speech_v1_config_Adaptation_CreateCustomClass_Basic_sync]
