{
  "clientLibrary": {
    "name": "cloud.google.com/go/cloudtasks/apiv2",
    "version": "$VERSION",
    "language": "GO",
    "apis": [
      {
        "id": "google.cloud.tasks.v2",
        "version": "v2"
      }
    ]
  },
  "snippets": [
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_CreateQueue_sync",
      "title": "cloudtasks CreateQueue Sample",
      "description": "CreateQueue creates a queue.\n\nQueues created with this method allow tasks to live for a maximum of 31\ndays. After a task is 31 days old, the task will be deleted regardless of\nwhether it was dispatched or not.\n\nWARNING: Using this method may have unintended side effects if you are\nusing an App Engine `queue.yaml` or `queue.xml` file to manage your queues.\nRead\n[Overview of Queue Management and\nqueue.yaml](https: //cloud.google.com/tasks/docs/queue-yaml) before using\nthis method.",
      "file": "Client/CreateQueue/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateQueue",
        "fullName": "google.cloud.tasks.v2.Client.CreateQueue",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.CreateQueueRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Queue",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "CreateQueue",
          "fullName": "google.cloud.tasks.v2.CloudTasks.CreateQueue",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_CreateTask_sync",
      "title": "cloudtasks CreateTask Sample",
      "description": "CreateTask creates a task and adds it to a queue.\n\nTasks cannot be updated after creation; there is no UpdateTask command.\n\n* The maximum task size is 100KB.",
      "file": "Client/CreateTask/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "CreateTask",
        "fullName": "google.cloud.tasks.v2.Client.CreateTask",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.CreateTaskRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Task",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "CreateTask",
          "fullName": "google.cloud.tasks.v2.CloudTasks.CreateTask",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_DeleteQueue_sync",
      "title": "cloudtasks DeleteQueue Sample",
      "description": "DeleteQueue deletes a queue.\n\nThis command will delete the queue even if it has tasks in it.\n\nNote: If you delete a queue, a queue with the same name can't be created\nfor 7 days.\n\nWARNING: Using this method may have unintended side effects if you are\nusing an App Engine `queue.yaml` or `queue.xml` file to manage your queues.\nRead\n[Overview of Queue Management and\nqueue.yaml](https: //cloud.google.com/tasks/docs/queue-yaml) before using\nthis method.",
      "file": "Client/DeleteQueue/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteQueue",
        "fullName": "google.cloud.tasks.v2.Client.DeleteQueue",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.DeleteQueueRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "DeleteQueue",
          "fullName": "google.cloud.tasks.v2.CloudTasks.DeleteQueue",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_DeleteTask_sync",
      "title": "cloudtasks DeleteTask Sample",
      "description": "DeleteTask deletes a task.\n\nA task can be deleted if it is scheduled or dispatched. A task\ncannot be deleted if it has executed successfully or permanently\nfailed.",
      "file": "Client/DeleteTask/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "DeleteTask",
        "fullName": "google.cloud.tasks.v2.Client.DeleteTask",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.DeleteTaskRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "DeleteTask",
          "fullName": "google.cloud.tasks.v2.CloudTasks.DeleteTask",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 51,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_GetIamPolicy_sync",
      "title": "cloudtasks GetIamPolicy Sample",
      "description": "GetIamPolicy gets the access control policy for a [Queue][google.cloud.tasks.v2.Queue].\nReturns an empty policy if the resource exists and does not have a policy\nset.\n\nAuthorization requires the following\n[Google IAM](https: //cloud.google.com/iam) permission on the specified\nresource parent: \n\n* `cloudtasks.queues.getIamPolicy`",
      "file": "Client/GetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetIamPolicy",
        "fullName": "google.cloud.tasks.v2.Client.GetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.GetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "GetIamPolicy",
          "fullName": "google.cloud.tasks.v2.CloudTasks.GetIamPolicy",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_GetLocation_sync",
      "title": "cloudtasks GetLocation Sample",
      "description": "GetLocation gets information about a location.",
      "file": "Client/GetLocation/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetLocation",
        "fullName": "google.cloud.tasks.v2.Client.GetLocation",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.GetLocationRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*locationpb.Location",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "GetLocation",
          "fullName": "google.cloud.location.Locations.GetLocation",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_GetQueue_sync",
      "title": "cloudtasks GetQueue Sample",
      "description": "GetQueue gets a queue.",
      "file": "Client/GetQueue/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetQueue",
        "fullName": "google.cloud.tasks.v2.Client.GetQueue",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.GetQueueRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Queue",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "GetQueue",
          "fullName": "google.cloud.tasks.v2.CloudTasks.GetQueue",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_GetTask_sync",
      "title": "cloudtasks GetTask Sample",
      "description": "GetTask gets a task.",
      "file": "Client/GetTask/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "GetTask",
        "fullName": "google.cloud.tasks.v2.Client.GetTask",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.GetTaskRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Task",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "GetTask",
          "fullName": "google.cloud.tasks.v2.CloudTasks.GetTask",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_ListLocations_sync",
      "title": "cloudtasks ListLocations Sample",
      "description": "ListLocations lists information about the supported locations for this service.",
      "file": "Client/ListLocations/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListLocations",
        "fullName": "google.cloud.tasks.v2.Client.ListLocations",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "locationpb.ListLocationsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "LocationIterator",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "ListLocations",
          "fullName": "google.cloud.location.Locations.ListLocations",
          "service": {
            "shortName": "Locations",
            "fullName": "google.cloud.location.Locations"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 60,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_ListQueues_sync",
      "title": "cloudtasks ListQueues Sample",
      "description": "ListQueues lists queues.\n\nQueues are returned in lexicographical order.",
      "file": "Client/ListQueues/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListQueues",
        "fullName": "google.cloud.tasks.v2.Client.ListQueues",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.ListQueuesRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "QueueIterator",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "ListQueues",
          "fullName": "google.cloud.tasks.v2.CloudTasks.ListQueues",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 60,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_ListTasks_sync",
      "title": "cloudtasks ListTasks Sample",
      "description": "ListTasks lists the tasks in a queue.\n\nBy default, only the [BASIC][google.cloud.tasks.v2.Task.View.BASIC] view is\nretrieved due to performance considerations;\n[response_view][google.cloud.tasks.v2.ListTasksRequest.response_view]\ncontrols the subset of information which is returned.\n\nThe tasks may be returned in any order. The ordering may change at any\ntime.",
      "file": "Client/ListTasks/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ListTasks",
        "fullName": "google.cloud.tasks.v2.Client.ListTasks",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.ListTasksRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "TaskIterator",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "ListTasks",
          "fullName": "google.cloud.tasks.v2.CloudTasks.ListTasks",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 60,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_PauseQueue_sync",
      "title": "cloudtasks PauseQueue Sample",
      "description": "PauseQueue pauses the queue.\n\nIf a queue is paused then the system will stop dispatching tasks\nuntil the queue is resumed via\n[ResumeQueue][google.cloud.tasks.v2.CloudTasks.ResumeQueue]. Tasks can\nstill be added when the queue is paused. A queue is paused if its\n[state][google.cloud.tasks.v2.Queue.state] is\n[PAUSED][google.cloud.tasks.v2.Queue.State.PAUSED].",
      "file": "Client/PauseQueue/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "PauseQueue",
        "fullName": "google.cloud.tasks.v2.Client.PauseQueue",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.PauseQueueRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Queue",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "PauseQueue",
          "fullName": "google.cloud.tasks.v2.CloudTasks.PauseQueue",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_PurgeQueue_sync",
      "title": "cloudtasks PurgeQueue Sample",
      "description": "PurgeQueue purges a queue by deleting all of its tasks.\n\nAll tasks created before this method is called are permanently deleted.\n\nPurge operations can take up to one minute to take effect. Tasks\nmight be dispatched before the purge takes effect. A purge is irreversible.",
      "file": "Client/PurgeQueue/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "PurgeQueue",
        "fullName": "google.cloud.tasks.v2.Client.PurgeQueue",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.PurgeQueueRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Queue",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "PurgeQueue",
          "fullName": "google.cloud.tasks.v2.CloudTasks.PurgeQueue",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_ResumeQueue_sync",
      "title": "cloudtasks ResumeQueue Sample",
      "description": "ResumeQueue resume a queue.\n\nThis method resumes a queue after it has been\n[PAUSED][google.cloud.tasks.v2.Queue.State.PAUSED] or\n[DISABLED][google.cloud.tasks.v2.Queue.State.DISABLED]. The state of a\nqueue is stored in the queue's [state][google.cloud.tasks.v2.Queue.state];\nafter calling this method it will be set to\n[RUNNING][google.cloud.tasks.v2.Queue.State.RUNNING].\n\nWARNING: Resuming many high-QPS queues at the same time can\nlead to target overloading. If you are resuming high-QPS\nqueues, follow the 500/50/5 pattern described in\n[Managing Cloud Tasks Scaling\nRisks](https: //cloud.google.com/tasks/docs/manage-cloud-task-scaling).",
      "file": "Client/ResumeQueue/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "ResumeQueue",
        "fullName": "google.cloud.tasks.v2.Client.ResumeQueue",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.ResumeQueueRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Queue",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "ResumeQueue",
          "fullName": "google.cloud.tasks.v2.CloudTasks.ResumeQueue",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_RunTask_sync",
      "title": "cloudtasks RunTask Sample",
      "description": "RunTask forces a task to run now.\n\nWhen this method is called, Cloud Tasks will dispatch the task, even if\nthe task is already running, the queue has reached its\n[RateLimits][google.cloud.tasks.v2.RateLimits] or is\n[PAUSED][google.cloud.tasks.v2.Queue.State.PAUSED].\n\nThis command is meant to be used for manual debugging. For\nexample, [RunTask][google.cloud.tasks.v2.CloudTasks.RunTask] can be used to\nretry a failed task after a fix has been made or to manually force a task\nto be dispatched now.\n\nThe dispatched task is returned. That is, the task that is returned\ncontains the [status][Task.status] after the task is dispatched but\nbefore the task is received by its target.\n\nIf Cloud Tasks receives a successful response from the task's\ntarget, then the task will be deleted; otherwise the task's\n[schedule_time][google.cloud.tasks.v2.Task.schedule_time] will be reset to\nthe time that [RunTask][google.cloud.tasks.v2.CloudTasks.RunTask] was\ncalled plus the retry delay specified in the queue's\n[RetryConfig][google.cloud.tasks.v2.RetryConfig].\n\n[RunTask][google.cloud.tasks.v2.CloudTasks.RunTask] returns\n[NOT_FOUND][google.rpc.Code.NOT_FOUND] when it is called on a\ntask that has already succeeded or permanently failed.",
      "file": "Client/RunTask/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "RunTask",
        "fullName": "google.cloud.tasks.v2.Client.RunTask",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.RunTaskRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Task",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "RunTask",
          "fullName": "google.cloud.tasks.v2.CloudTasks.RunTask",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_SetIamPolicy_sync",
      "title": "cloudtasks SetIamPolicy Sample",
      "description": "SetIamPolicy sets the access control policy for a [Queue][google.cloud.tasks.v2.Queue].\nReplaces any existing policy.\n\nNote: The Cloud Console does not check queue-level IAM permissions yet.\nProject-level permissions are required to use the Cloud Console.\n\nAuthorization requires the following\n[Google IAM](https: //cloud.google.com/iam) permission on the specified\nresource parent: \n\n* `cloudtasks.queues.setIamPolicy`",
      "file": "Client/SetIamPolicy/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "SetIamPolicy",
        "fullName": "google.cloud.tasks.v2.Client.SetIamPolicy",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.SetIamPolicyRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.Policy",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "SetIamPolicy",
          "fullName": "google.cloud.tasks.v2.CloudTasks.SetIamPolicy",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_TestIamPermissions_sync",
      "title": "cloudtasks TestIamPermissions Sample",
      "description": "TestIamPermissions returns permissions that a caller has on a\n[Queue][google.cloud.tasks.v2.Queue]. If the resource does not exist, this\nwill return an empty set of permissions, not a\n[NOT_FOUND][google.rpc.Code.NOT_FOUND] error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
      "file": "Client/TestIamPermissions/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "TestIamPermissions",
        "fullName": "google.cloud.tasks.v2.Client.TestIamPermissions",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "iampb.TestIamPermissionsRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*iampb.TestIamPermissionsResponse",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "TestIamPermissions",
          "fullName": "google.cloud.tasks.v2.CloudTasks.TestIamPermissions",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    },
    {
      "regionTag": "cloudtasks_v2_generated_CloudTasks_UpdateQueue_sync",
      "title": "cloudtasks UpdateQueue Sample",
      "description": "UpdateQueue updates a queue.\n\nThis method creates the queue if it does not exist and updates\nthe queue if it does exist.\n\nQueues created with this method allow tasks to live for a maximum of 31\ndays. After a task is 31 days old, the task will be deleted regardless of\nwhether it was dispatched or not.\n\nWARNING: Using this method may have unintended side effects if you are\nusing an App Engine `queue.yaml` or `queue.xml` file to manage your queues.\nRead\n[Overview of Queue Management and\nqueue.yaml](https: //cloud.google.com/tasks/docs/queue-yaml) before using\nthis method.",
      "file": "Client/UpdateQueue/main.go",
      "language": "GO",
      "clientMethod": {
        "shortName": "UpdateQueue",
        "fullName": "google.cloud.tasks.v2.Client.UpdateQueue",
        "parameters": [
          {
            "type": "context.Context",
            "name": "ctx"
          },
          {
            "type": "cloudtaskspb.UpdateQueueRequest",
            "name": "req"
          },
          {
            "type": "...gax.CallOption",
            "name": "opts"
          }
        ],
        "resultType": "*cloudtaskspb.Queue",
        "client": {
          "shortName": "Client",
          "fullName": "google.cloud.tasks.v2.Client"
        },
        "method": {
          "shortName": "UpdateQueue",
          "fullName": "google.cloud.tasks.v2.CloudTasks.UpdateQueue",
          "service": {
            "shortName": "CloudTasks",
            "fullName": "google.cloud.tasks.v2.CloudTasks"
          }
        }
      },
      "origin": "API_DEFINITION",
      "segments": [
        {
          "start": 18,
          "end": 53,
          "type": "FULL"
        }
      ]
    }
  ]
}